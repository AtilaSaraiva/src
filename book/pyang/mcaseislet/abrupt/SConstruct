from rsf.proj import *

nx=500
nt=1000
dt=0.001

Fetch('abrupt1000x500.bin','pwd')

Flow('data','abrupt1000x500.bin',
	'''
     	echo in=$SOURCE n1=%d n2=%d data_format=native_float |
     	put d1=%g o1=0 label1=Time   unit1=s
     	 d2=%g o2=1 label2=Trace unit2= title="original data" |
 	pad n2=512
	'''%(nt,nx,dt,1))
Plot('data','window n2=%d | grey allpos=n scalebar=y'%(nx) )


def grey(title):
    return 'grey title="%s" label2=Channel label1="Time (s)" ' % title
    
#Flow('dip','data','dip rect1=20 rect2=20 order=2')

Flow('pq','data',
	'''
	twodip2 order=2 verb=y eps=20 gauss=n niter=10
	''')
Flow('dip1','pq','window n3=1')
Flow('dip2','pq','window f3=1')

Plot('dip1','%s pclip=100 scalebar=y color=j' % grey('First Dip'))
Plot('dip2','%s pclip=100 scalebar=y color=j' % grey('Second Dip'))
Result('dips','dip1 dip2','SideBySideIso')

# Seislet-based MCA separation:
Flow('rec1 rec2','data dip1 dip2',
     	'''
     	mcaseislet dip1=${SOURCES[1]} dip2=${SOURCES[2]} comp2=${TARGETS[1]} 
	verb=y order=2 type=b eps=0.01 niter=10 pclip=3 pscale=50 
     	''')
# ... smth1=y smth2=y rect1=2 rect2=4

Flow('rec','rec1 rec2','add scale=1,1 ${SOURCES[1]}')

Plot('rec1','window n2=500 | grey title=rec1 scalebar=y')
Plot('rec2','window n2=500 | grey title=rec2 scalebar=y')
Plot('rec','window n2=500 | grey title=rec1+rec2 scalebar=y')

Result('rec','data rec rec1 rec2','TwoColumns')

End()
