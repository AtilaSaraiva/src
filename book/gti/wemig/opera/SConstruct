from rsfproj import *
import spmig

# SET PARAMETERS #
########################################################################
nt=1250                 # number of time samples
dt=0.004                # time sampling interval (sec)
ft=0.0                  # first time (sec)
fxs=0.5                 # first shotpoint (km)
nxs=301                 # number of shotpoints (see notes below)
dxs=0.025               # shotpoint sampling interval (km)
fxo=0.                  # first offset (km, see notes below)
nxo=121                 # number of source-receiver offsets
dxo=0.025               # offset sampling interval (km)
v00=1.5                 # velocity at x0,z0 (km/sec)
dvdx=0.36               # derivative of velocity with distance x (dv/dx)
dvdz=0.36               # derivative of velocity with depth z (dv/dz)
fpeak=30.               # peak frequency of symmetric Ricker wavelet (Hz)
tmin=0.                 # minimum time of interest (sec)
er=0                    # =1 for exploding reflector amplitudes
ls=0                    # =1 for line source; default is point source
ob=1                    # =1 to include obliquity factors  (pas touche)
smooth=1                # =1 for smooth (piecewise cubic spline) reflectors
ndpfz=1000              # number of diffractors per Fresnel zone
verbose=1
REF1="-0.55555555555556:0,2.;3.5,2.;4.5,2.5;5.,2.25;5.5,2.;6.5,2.5;10,2.5"
REF2="-0.55555555555556:0,2.5;10,3.5"
REF3="-0.55555555555556:0,3.2;3.5,3.2;5,3.7;6.5,4.2;10,4.2"
REF4="-0.55555555555556:0,4.5;10,4.5"
########################################################################

# ------------------------------------------------------------
par = {
    'nx':400, 'ox':0.5,   'dx':0.025,
    'nz':500, 'oz':0,     'dz':0.01,
    'ns':51,  'os':0.5,               'js':2,     'fs':0,
    'nt':1250,'ot':0,     'dt':0.004,
    'nw':100, 'jw':1,
    'nw':200,
    'nhx':40,
    'nrmax':7,'dtmax':0.0002,
    'xcig':4.5
    }
par['misc']='itype=x nhx=%(nhx)d nhz=1 hsym=y jcx=1' % par
par['ow']=0.
par['dw']=1./(par['nt']*par['dt'])

par['xmin']=2.5
par['xmax']=7.5
par['zmin']=0
par['zmax']=5
# ------------------------------------------------------------


# ------------------------------------------------------------
def igrey(custom="",par={}):
    return '''
    grey labelrot=n pclip=100 title=""
    min2=%g max2=%g min1=%g max1=%g
    wantscalebar=n barreverse=y
    grid=y gridcol=7 screenratio=1
    label1="z(km)" label2="x(km)" %s
    ''' % (par['xmin'],par['xmax'],par['zmin'],par['zmax'],custom)

def agrey(custom="",par={}):
    return '''
    grey pclip=100 title=""
    min2=-1 max2=+1 min1=%g max1=%g
    grid=y gridcol=7
    label1="z(km)" label2="tan" %s
    ''' % (par['zmin'],par['zmax'],custom)

# ------------------------------------------------------------

dim1 = 'd1=0.01 o1=0 n1=1001'
dim2 = 'd2=0.01 o2=0 n2=501'

layers = (
    ((0,2),(3.5,2),(4.5,2.5),(5.,2.25),(5.5,2),(6.5,2.5),(10,2.5)),
    ((0,2.5),(10,3.5)),
    ((0,3.2),(3.5,3.2),(5,3.7),(6.5,4.2),(10,4.2)),
    ((0,4.5),(10,4.5))
    )

nlays = len(layers)
for i in range(nlays):
    inp = 'inp%d' % (i+1)
    Flow('./'+inp,None,
         'echo %s in=$TARGET data_format=ascii_float n1=2 n2=%d' % \
         (string.join(map(lambda x: string.join(map(str,x)),layers[i]),
                      ' '),
          len(layers[i])))

Flow('lay1','inp1','dd form=native | spline %s fp=0,0' % dim1)
Flow('lay2',None,'math %s output="2.5+x1*0.1" ' % dim1)
Flow('lay3','inp3','dd form=native | spline %s fp=0,0' % dim1)
Flow('lay4',None,'math %s output=4.5' % dim1)

Flow('lays','lay1 lay2 lay3 lay4','cat axis=2 ${SOURCES[1:4]}')
graph = '''
graph min1=%(xmin)g max1=%(xmax)g min2=%(zmin)g max2=%(zmax)g
yreverse=y wantaxis=n wanttitle=n wantscalebar=n screenratio=1
''' % par

Plot('lays0','lays',graph + ' plotfat=10 plotcol=0')
Plot('lays1','lays',graph + ' plotfat=2 plotcol=7')

# velocity
Flow('vel',None,'math %s %s output="1.5+0.36*x1+0.36*x2" | transp' % (dim1,dim2))
Plot('vel','vel',igrey('color=j allpos=y bias=1.5 title="" barlabel="v(km/s)"',par))

Result('model','vel lays0 lays1','Overlay')

#Flow('refl',None,'spike n1=1001 n2=4 nsp=4 k2=1,2,3,4 mag=0.05,0.05,0.05,0')
#Flow('grad',None,'spike n1=1001 n2=4 nsp=4 k2=1,2,3,4 mag=0,-0.5,0.5,0.5')
Flow('refl',None,'spike n1=1001 n2=4 nsp=4 k2=1,2,3,4 mag=1,1,1,1')
Flow('grad',None,'spike n1=1001 n2=4 nsp=4 k2=1,2,3,4 mag=0,0,0,0')
Flow('dipf','lays','deriv | scale dscale=100')

for vpvs in (1,2): 
    for twod in (0,1):
        for nh in (1,401):
            bdat = 'bdat%d-%d-%d' % (vpvs,twod,nh)
            Flow(bdat,'lays refl grad dipf',
                 '''
                 kirmod
                 ns=101 ds=0.100 s0=0.5
                 nh=%d  dh=0.025 h0=-5
                 type=v  vel=1.5 gradx=0.36 gradz=0.36 twod=%d
                 type2=v vel2=%g gradx2=%g  gradz2=%g
                 t0=0 dt=0.004 nt=1250 freq=16
                 refl=${SOURCES[1]} rgrad=${SOURCES[2]} dip=${SOURCES[3]}
                 ''' % (nh,twod,
                        (1.50,0.75)[vpvs-1],
                        (0.36,0.18)[vpvs-1],
                        (0.36,0.18)[vpvs-1]))
# data
Result('pp','bdat1-1-401',
     'window n3=1 f3=50 min1=0 max1=5 | grey title="" label1="t(s)" label2="h(km)" ')
Result('ps','bdat2-1-401',
     'window n3=1 f3=50 min1=0 max1=5 | grey title="" label1="t(s)" label2="h(km)" ')
Flow('datp','bdat1-1-401','window min3=%(os)g' % par)
Flow('dats','bdat2-1-401','window min3=%(os)g' % par)
# ------------------------------------------------------------
# velocity
Flow('velp','vel',
     'window n1=%(nz)d | math output="input"  | put label1=z label2=x' % par)
Flow('vels','vel',
     'window n1=%(nz)d | math output="input/2"| put label1=z label2=x' % par)
Flow('vpvs',['velp','vels'],'math p=${SOURCES[0]} s=${SOURCES[1]} output="p/s"', stdin=0)

# slowness
Flow('slop','velp',
     'math output="1/input" | transp | spray axis=2 n=1 o=0 d=1 | put label2=y')
Flow('slos','vels',
     'math output="1/input" | transp | spray axis=2 n=1 o=0 d=1 | put label2=y')

Result('slop','slop','window | transp | window min2=%(xmin)g max2=%(xmax)g |' % par
     + igrey('color=j allpos=y bias=0.145',par))
Result('slos','slos','window | transp | window min2=%(xmin)g max2=%(xmax)g |' % par
     + igrey('color=j allpos=y bias=0.290',par))
# ------------------------------------------------------------
# wavelet
Flow('wav',None,'spike nsp=1 mag=1 k1=1 n1=%(nt)d d1=%(dt)g o1=0' % par)
# ------------------------------------------------------------
# migration wavefields
spmig.wflds('soup','recp','wav','datp',par)
spmig.wflds('sous','recs','wav','dats',par)

#Result('recp','recp','window | real | transp | grey title=P')
#Result('recs','recs','window | real | transp | grey title=S')
# ------------------------------------------------------------
# migration
spmig.imagePW('imgp','cigp','slop',       'soup','recp',par)
spmig.imageCW('imgs','cigs','slop','slos','sous','recs',par)

Result('imgp','window | transp |'+igrey('',par))
Result('imgs','window | transp |'+igrey('',par))
# ------------------------------------------------------------
# dip field
Flow('dipo','lays',
     '''
     unif2 v00=1,2,3,4,5 n1=%(nz)d d1=%(dz)g o1=%(oz)g |
     ai2refl |
     ricker1 |
     dip rect1=5 rect2=10 liter=50
     ''' % par)

dzdx = par['dz']/par['dx']
#Flow('dipp','imgp','window | transp | dip rect1=15 rect2=15 liter=50 | scale rscale=%g' % dzdx)
#Flow('dips','imgs','window | transp | dip rect1=15 rect2=15 liter=50 | scale rscale=%g' % dzdx)

Result('dipp',igrey('color=j',par))
Result('dips',igrey('color=j',par))
# ------------------------------------------------------------
# angle-gathers
Flow('angp','cigp',
     '''
     window |
     transp plane=12 |
     transp plane=23 |
     slant adj=y p0=-2 np=400 dp=0.01 verb=y |
     put label2=tan
     '''      )
Flow('angs','cigs',
     '''
     window |
     transp plane=12 |
     transp plane=23 |
     slant adj=y p0=-2 np=400 dp=0.01 verb=y |
     put label2=tan
     ''')

# dip and vp/vs correction
Flow('cors',['angs','vpvs','dips'],
     'pp2psang2 vpvs=${SOURCES[1]} dip=${SOURCES[2]} verb=y')

Result('gatp'   ,'angp','window n3=1 min3=6 |' + agrey('screenratio=1.5',par))
Result('gats'   ,'angs','window n3=1 min3=6 |' + agrey('screenratio=1.5',par))
Result('gatscor','cors','window n3=1 min3=6 |' + agrey('screenratio=1.5',par))

# ------------------------------------------------------------
# stacks
Flow('stkp','angp'    ,'stack')
Flow('stks','angs'    ,'stack')

Result('stkp',igrey('',par))
Result('stks',igrey('',par))
# ------------------------------------------------------------
# flip neg angles polarity
Flow('flip',None,
     '''
     spike nsp=2 mag=-1,1
     n1=%(nz)d o1=%(oz)g d1=%(dz)g
     n2=400    o2=-2     d2=0.01   k2=1,201 l2=200,400
     n3=%(nx)d o3=%(ox)g d3=%(dx)g 
     ''' % par)
Flow('angsflip','angs flip','math k=${SOURCES[1]} output="input*k"')
Flow('corsflip','cors flip','math k=${SOURCES[1]} output="input*k"')

Flow('sin','cors','math output="sin(atan(x2))" ')
Flow('s2','sin','math output="input^2" | stack')
Flow('s4','sin','math output="input^4" | stack')
Flow('s6','sin','math output="input^6" | stack')
Flow('den','s4 s2 s6','math s2=${SOURCES[1]} s6=${SOURCES[2]} output="input*input-s2*s6" ')
Flow('ds3','cors sin','math s=${SOURCES[1]} output="input*s^3" | stack')
Flow('ds', 'cors sin','math s=${SOURCES[1]} output="input*s" | stack')
Flow('num','ds3 s4 ds s6',
     'math s4=${SOURCES[1]} s6=${SOURCES[3]} ds=${SOURCES[2]} output="input*s4-ds*s6" ')
Flow('avo','num den','add mode=d ${SOURCES[1]}')
Result('avo',igrey('',par))

# ------------------------------------------------------------
# plot offset-gathers
for hplot in ('cigp','cigs'):
    Result(hplot,
           '''
           window j1=40 min1=3 max1=7 |
           transp plane=12 |
           transp plane=23 |
           put n2=400 o2=2.5 d2=.0125 n3=1 |
           grey pclip=100 grid=y g1num=1 gridcol=7 screenratio=1
           title="" label1="z(km)" label2="x(km)"
           ''')

# plot angle-gathers
for aplot in ('angp','angs','cors','angsflip','corsflip'):
    Result(aplot,
           '''
           window j3=40 min3=3 max3=7 min2=-1 n2=200 |
           put n2=1000 o2=2.5 d2=.005 n3=1 |
           grey pclip=100 grid=y g1num=1 gridcol=7 screenratio=1
           title="" label1="z(km)" label2="x(km)"
           ''')

# ------------------------------------------------------------
# stack after correction
Flow('scor','corsflip','stack')
Result('scor',igrey('',par))
# ------------------------------------------------------------

End()
