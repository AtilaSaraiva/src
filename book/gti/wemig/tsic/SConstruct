from rsfproj import *
import math
import spmig

# ------------------------------------------------------------

def igrey(custom):
    return '''
    grey labelrot=n title="" pclip=100 %s
    ''' % custom
def igraph(custom):
    return '''
    graph labelrot=n title="" yreverse=y
    label2=z label1=x
    min1=0 min2=0 max2=6000 grid=y %s
    ''' % custom
# ------------------------------------------------------------

par = {
    'ny':1000,'oy':-5000,'dy':20,
    'nx':500, 'ox':0,    'dx':20, 'xcig':5000, 'zcig':2886,
    'nh':500, 'oh':-5000,'dh':20,
    'ns':50,  'os':0,    'ds':20, 'js':1, 'fs':0,
    'nz':600, 'oz':0,    'dz':10,
    'nt':2000,'ot':0,    'dt':0.005,
    'vel':2000, 'vel2':2000,
    'nw':100,'ow':1,'jw':1,
    #
    'verb':'y','eps':0.01,'nrmax':5,'dtmax':0.00005,
    'tmx':16,'tmy':0,'pmx':0,'pmy':0,
    'misc':'itype=t nht=400 oht=-0.75 dht=0.00375 jcx=1',
    #    
    'SOU':2000,'ns':1,'os':1500,'ds':500,
    'REF':0
    }
par['zmin']=par['oz']
par['zmax']=par['oz'] + (par['nz']-1) * par['dz']
# ------------------------------------------------------------

# wavelet
Flow('wave',None,
     '''
     spike nsp=1 mag=1 k1=1
     n1=%(nt)d d1=%(dt)g o1=0|
     put label1=t label2=x label3=y 
     ''' % par )   

# velocity
Flow('vel',None,
     '''
     spike nsp=1 mag=%(vel)g
     n1=%(nz)d o1=%(oz)g d1=%(dz)g
     n2=%(nx)d o2=%(ox)g d2=%(dx)g |
     put label1=z label2=x
     ''' % par)

# slowness
Flow('slo','vel',
     'math output=1/input | transp | spray axis=2 n=1')

#for DIP in ('00','15','30'):
for DIP in (['00']):

    par['REF'] = par['zcig'] - par['xcig'] * math.tan(math.pi*    float(DIP) /180.)
    par['SOU'] = par['xcig'] - par['zcig'] * math.tan(math.pi*(30-float(DIP))/180.)

    # ------------------------------------------------------------ 
    # modeling
    
    dip = 'dip'+str(DIP)
    ref = 'ref'+str(DIP)
    kir = 'kir'+str(DIP)

    # reflector
    Flow(dip,None,'spike n1=%d o1=%g d1=%g mag=%g'
         % (par['ny'],par['oy'],par['dy'],
            math.tan(math.pi*float(DIP)/180.)))
    Flow(ref,dip,'math output="%(REF)g+x1*input"' % par)
    Result(ref,ref, igraph('title=%s') %DIP)

    # kirchhoff data
    Flow(kir,[ref,dip],
         '''
         kirmod vel=%(vel)g vel2=%(vel2)g dip=${SOURCES[1]}
         nt=%(nt)d  dt=%(dt)g freq=5
         nh=%(nh)d  h0=%(oh)g  dh=%(dh)g
         ns=%(ns)d  s0=%(SOU)g ds=%(ds)g |
         put label1=t label2=h
         ''' % par)
    Result(kir,kir,'window j3=1 | ' + igrey('pclip=99 title=%s') %DIP)

    # ------------------------------------------------------------
    # source/receiver wavefields
    # ------------------------------------------------------------
    sou = 'sou'+str(DIP)
    rec = 'rec'+str(DIP)    
    spmig.wflds(sou,rec,'wave',kir,par)

    for TYP in ('t','x'):

        # ------------------------------------------------------------
        # migration
        # ------------------------------------------------------------
        if(TYP=='t'):
            img = 'imt'+str(DIP)
            cig = 'cit'+str(DIP)
            par['misc']='itype=t nht=200 oht=-0.75 dht=0.0075 jcx=1'
        else:
            img = 'imx'+str(DIP)
            cig = 'cix'+str(DIP)
            par['misc']='itype=x nhx=100 hsym=y jcx=1'

        spmig.imagePW(img,cig,'slo',sou,rec,par)
    
        Result(img,img,'window | transp | '                + igrey('title=%s           grid=y') %DIP)
        Result(cig,cig,'window n1=1 min1=%(xcig)g |' % par + igrey('title=%s pclip=100 grid=y') %DIP)

        # ------------------------------------------------------------
        # angle decomposition
        # ------------------------------------------------------------
        if(TYP=='t'):
            # slant stack (in z-t plane)
            slz = 'slz'+str(DIP)
            Flow(slz,cig,
                 '''
                 window n1=1 min1=%(xcig)g |
                 slant adj=y p0=0 np=400 dp=10 |
                 put label2=v
                 ''' % par)
            Result(slz,slz,'window |'+igrey('grid=y title=%s' %DIP))

            # angle mapping (w/o structural dip)
            vaz = 'vaz'+str(DIP)
            anz = 'anz'+str(DIP)            
            Flow(vaz,'vel','window n2=1 min2=%(xcig)g' % par)
            Flow(anz,[slz,vaz],
                 '''
                 tshift a0=0 na=150 da=0.01 velocity=${SOURCES[1]} |
                 put label2=tan
                 ''' % par)
            Result(anz,anz,'window |'+igrey('grid=y title=%s' %DIP))
            
            # angle mapping (w/  structural dip)
            vbz = 'vbz'+str(DIP)
            bnz = 'bnz'+str(DIP)
            dif = 'dif'+str(DIP)

            # dip field
#            Flow(dif,img,
#                 '''
#                 window | transp | dip rect1=10 rect2=10 |
#                 math output="atan(input*%(dz)g/%(dx)g)"
#                 ''' % par)
            ANG = math.pi*float(DIP)/180.
            Flow(dif,img,'window | transp | math output=%g' % ANG)

            Flow(vbz,[dif,'vel'],'math v=${SOURCES[1]} output="v/cos(input)"')
            Flow(bnz,[slz,vbz],
                 '''
                 tshift a0=0 na=150 da=0.01 velocity=${SOURCES[1]} |
                 put label2=tan
                 ''' % par)
            Result(bnz,bnz,'window |'+igrey('grid=y title=%s' %DIP))

        else:
            # slant stack (in z-h plane)
            anh = 'anh'+str(DIP)
            Flow(anh,cig,
                 '''
                 window n1=1 min1=%(xcig)g |
                 slant adj=y p0=0 np=150 dp=0.01 |
                 put label2=tan
                 ''' % par)
            Result(anh,anh,'window |'+igrey('grid=y title=%s' %DIP))

# ------------------------------------------------------------
# testing of slant-stack to angle transformation
#200 oht=-0.75 dht=0.0075
#p0=0 np=200 dp=20

Flow('tsla',None,
     '''
     spike nsp=3 mag=1,1,1
     n1=%(nz)d  o1=%(oz)g  d1=%(dz)g
     n2=400 o2=0 d2=10 k2=150,200,250 l2=150,200,250
     ''' % par)
Plot('tsla','tsla','window |'+igrey('grid=y gridcol=5'))

Flow('tvel','vel','window n2=1 min2=%(xcig)g' % par)
Flow('tang',['tsla','tvel'],
     '''
     tshift a0=0 na=250 da=0.01 velocity=${SOURCES[1]} |
     put label2=tan
     ''' % par)
Plot('tang','tang','window |'+igrey('grid=y gridcol=5'))

Result('test',['tsla','tang'],'SideBySideAniso')
# ------------------------------------------------------------



End()
