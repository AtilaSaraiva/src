from rsfproj import *
import sys, math
sys.path.append('../../Scons')
import zomig,spmig

# ------------------------------------------------------------
# PLOTTING
# ------------------------------------------------------------
def igrey(custom):
    return '''
    grey  labelrot=n wantaxis=n wanttitle=n title="" %s 
    ''' % (custom)
def igraph(custom):
    return '''
    graph labelrot=n wantaxis=n wanttitle=n title="" yreverse=y wantaxis=n plotfat=10 plotcol=1 %s
    ''' % (custom)

def reflector(formula,par):
    return '''
    math n1=%d o1=%g d1=%g n2=1 output="%s"
    ''' % (par['nx']/2,par['ox'],par['dx'],formula)
# ------------------------------------------------------------
par = {
    'nz':250,  'dz':2.0,   'oz':0,
    'nx':400,  'dx':10.0,  'ox':0,
    'nt':5000, 'dt':0.0005,'ot':0, 'kt':201,
    'ns':1,    'ds':8,     'os':2000, 'js':1, 'fs':0,
#
    'nw':150, 'ow':0.8, 'jw':1,
#    
    'verb':'y', 'eps':0.01, 'nrmax':1, 'dtmax':0.00005,
    'tmx':32,'tmy':0,'pmx':32,'pmy':0,
#
    'kov-':0.9, 'kov0':1.0, 'kov+':1.1
    }
par['zmin']=par['oz']
par['zmax']=par['oz'] + (par['nz']-1) * par['dz']
par['xmin']=par['ox']
par['xmax']=par['ox'] + (par['nx']-1) * par['dx']

# ------------------------------------------------------------
# REFLECTIVITY
# ------------------------------------------------------------
Flow('left',None,reflector('402',par))
Flow('rght',None,reflector('402',par))

Flow('msk',None,
     '''
     spike nsp=1 mag=-2
           n1=%(nz)d d1=%(dz)g o1=%(oz)g
           n2=%(nx)d d2=%(dx)g o2=%(ox)g k2=200 l2=400 |
     math output=input+1
     ''' % par)

Flow('spk','left rght',
     '''
     cat ${SOURCES[1:2]} axis=1 |
     unif3 n1=%(nz)d d1=%(dz)g v00=1,2 |
     ai2refl | scale axis=12
     ''' % par)
Flow('ref','spk msk','math s=${SOURCES[0]} m=${SOURCES[1]} output=s*m ')
Plot  ('ref','ref',igrey('pclip=100 label1="depth (m)" label2="location (m)" '))
#Result('ref','ref',igrey('pclip=100'))
Flow('r0','ref','transp plane=12 | transp plane=23')
# ------------------------------------------------------------
# VELOCITY/SLOWNESS
# ------------------------------------------------------------
Flow('vp','left rght',
     '''
     cat ${SOURCES[1:2]} axis=1 |
     unif3 n1=%(nz)d d1=%(dz)g v00=2000,2000 |
     put label1=z label2=x
     ''' % par)
#Result('vp','vp',igrey('pclip=100 bias=900 allpos=y'))
Flow('sp','vp',
     '''
     transp |
     math "output=1/input" |
     spray axis=2 n=1 |
     put label2=y
     ''' % par )

Flow('ss','sp','window squeeze=n j3=200')
# ------------------------------------------------------------
# WAVELET
# ------------------------------------------------------------
# wavelet for shot-profile modeling
Flow('wvlt',None,
     '''
     spike nsp=1 mag=1 k1=%(kt)d
     n1=%(nt)d d1=%(dt)g o1=0
     n2=1      d2=%(dx)g o2=%(os)g |
     ricker1 frequency=21 |
     put label1=t label2=x label3=y 
     ''' % par )    
Result('wvlt','wvlt','window n1=500 | graph grid=y title=%s' % 'wvlt')
# wavelet for shot-profile migration
Flow('wave',None,
     '''
     spike nsp=1 mag=1 k1=%(kt)d
     n1=%(nt)d d1=%(dt)g o1=0 |
     ricker1 frequency=21 |
     put label1=t label2=x label3=y 
     ''' % par )    
#Result('wave','wave','graph title=%s' % 'wave')

# ------------------------------------------------------------
# shot-profile modeling
# ------------------------------------------------------------
Flow('w0','wvlt',
     '''
     fft1 |
     window squeeze=n n1=%d min1=%g j1=%g |
     pad beg2=%d n2out=%d |
     put label1=w label2=x label3=y |
     transp plane=12 | transp plane=23
     ''' % (par['nw'],par['ow'],par['jw'],par['nx']/2,par['nx']))
Result('w0','w0','window | real | transp | grey pclip=100')

spmig.model('dpw','sp','w0','r0',par)

Flow('tpw','dpw',
     '''
     window | transp | pad beg1=2 n1out=2501 |
     fft1 inv=y |
     put o2=-2000 o3=%(os)g n3=%(ns)d d3=%(ds)g label3=s
     ''' % par)
Plot('tpw','window | '
     + igrey('pclip=100 min1=0 max1=1 label1="time (s)" label2="offset (m)" '))
# ------------------------------------------------------------
# shot-profile migration
# ------------------------------------------------------------
spmig.wflds('dps','dpr','wave','tpw',par)
spmig.imagePW('img','cig','sp','dps','dpr',par)

Plot('img','window n4=1 n5=1 n6=1| transp | '
     + igrey('pclip=100 label1="depth (m)" label2="location (m)" '))
# ------------------------------------------------------------
Result('modeling','ref tpw img','SideBySideIso')

# ------------------------------------------------------------
# dps = source wavefield
# dpr = receiver wavefield

# datuming slowness
Flow('sd','sp','window squeeze=n j3=50')

# datumed wavefields
zomig.Cwfone('wps','dps','sd',par)
zomig.Awfone('wpr','dpr','sd',par)

# source-receiver wavefields comparison
Flow('tps','wps',
     '''
     window | transp plane=23 | transp plane=12 |
     pad beg1=2 n1out=512 | fft1 inv=y |
     put label1=t o1=-0.1
     ''')
Flow('tpr','wpr',
     '''
     window | transp plane=23 | transp plane=12 |
     pad beg1=2 n1out=512 | fft1 inv=y |
     put label1=t o1=-0.1
     ''')

for i in range(10):
    sou = 'sou' + str(i)
    rec = 'rec' + str(i)

    Plot(sou,'tps','window n3=1 f3=%d |' % i + igrey('pclip=100 min1=0 max1=1'))
    Plot(rec,'tpr','window n3=1 f3=%d |' % i + igrey('pclip=100 min1=0 max1=1'))

    wfl = 'wfl' + str(i)
    Plot(wfl,[sou,rec],'SideBySideIso')

Result('wflds','wfl0 wfl1 wfl2 wfl3 wfl4','Movie')

End()




















