## 
 # Wave-equation migration: all shots
 ##

from rsfproj import *
import spmig,sgmig,cluster,wemig

# ------------------------------------------------------------
# MIGRATION parameters
# ------------------------------------------------------------
par = {
    'nx':500,'ox':10925,'dx':150,
    'nt':1500,'ot':0,'dt':0.008,'kt':1,'ft':0,
#
    'nw':1,  'ow':5,    
    'nw':100,'ow':1,'jw':1,
    'nw':360,'ow':1,'jw':1,
#
    'ns':20,  'js':25,'fs':0,
    'ns':100, 'js':5, 'fs':0,
    'ns':500, 'js':1, 'fs':0,
#
    'verb':'y','eps':0.01,'nrmax':5,'dtmax':0.00005,
    'tmx':16,'tmy':0,'pmx':0,'pmy':0,
    #
    'zmin':6100, 'zmax':30000
    }
par['xmin']=par['ox']
par['xmax']=par['ox'] + (par['nx']-1) * par['dx']
minmax = ' min2=%g max2=%g ' % (par['xmin'],par['xmax'])

def igrey(custom):
    return '''
    grey labelrot=n wantaxis=y wanttitle=n
    title="" pclip=97 label1="depth (ft)" %s
    ''' % (custom)
LABEL = " labelsz=12 titlesz=16 "
# ------------------------------------------------------------

# ------------------------------------------------------------
# from SGY to RSF
# ------------------------------------------------------------
data = 'sigsbee2a_nfs.sgy'
velo = 'sigsbee2a_migvel.sgy'
vstr = 'sigsbee2a_stratigraphy.sgy'

Fetch(data,'sigsbee')
Fetch(velo,'sigsbee')
Fetch(vstr,'sigsbee')

Flow('zdata tzdata ./dhead ./bdhead',data,
     '''
     segyread
     tape=$SOURCE
     tfile=${TARGETS[1]}
     hfile=${TARGETS[2]}
     bfile=${TARGETS[3]}
     ''',stdin=0)
Flow('zvelo tzvelo ./vhead ./bvhead',velo,
     '''
     segyread
     tape=$SOURCE
     tfile=${TARGETS[1]}
     hfile=${TARGETS[2]}
     bfile=${TARGETS[3]}
     ''',stdin=0)
Flow('zvstr tzvstr ./shead ./bshead',vstr,
     '''
     segyread
     tape=$SOURCE
     tfile=${TARGETS[1]}
     hfile=${TARGETS[2]}
     bfile=${TARGETS[3]}
     ''',stdin=0)

# ------------------------------------------------------------
# VELOCITY
# ------------------------------------------------------------
# stratigraphic slowness
Flow('vstr','zvstr',
     'put d1=25 o2=10025 d2=25 label1=z label2=x')
Flow('vstrpad','vstr',
     '''
     window n1=1 f1=1200 |
     spray axis=1 n=100 o=0 d=25
     ''')
Flow('s0','vstr vstrpad',
     '''
     cat axis=1 space=n ${SOURCES[1]} |
     window |
     math "output=1/input" |
     transp |
     spray axis=2 n=1 o=0 d=1 |
     put label2=y |
     window squeeze=n      f3=244
     ''' % par)

# migration slowness
Flow('velo','zvelo',
     'put d1=25 o2=10025 d2=37.5 label1=z label2=x')
Flow('velopad','velo',
     '''
     window n1=1 f1=1200 |
     spray axis=1 n=100 o=0 d=25
     ''')

Flow('s1','velo velopad',
     '''
     cat axis=1 space=n ${SOURCES[1]} |
     window |
     math "output=1/input" |
     transp |
     spray axis=2 n=1 o=0 d=1 |
     put label2=y |
     window squeeze=n      f3=244
     ''')

# datuming slowness
Flow('sd','velo velopad',
     '''
     cat axis=1 space=n ${SOURCES[1]} |
     window |
     math "output=1/input" |
     transp |
     spray axis=2 n=1 o=0 d=1 |
     put label2=y |
     window squeeze=n n3=2 j3=244
     ''')

# wrong migration velocity
Flow('sm','s1',
     '''
     window squeeze=n f3=350 |
     math output=0.1 |
     pad beg3=350    |
     math output=input+1 |
     smooth rect3=31
     ''')
Flow('s2','s1 sm',
     'math s=${SOURCES[0]} m=${SOURCES[1]} output=s*m') # wrong

# ------------------------------------------------------------
# SHOTS
# ------------------------------------------------------------
# create sraw(t,o,s): o=full offset
Flow('ss','tzdata','dd type=float | headermath output="10925+fldr*150" | window')
Flow('oo','tzdata','dd type=float | headermath output="offset"         | window')
Flow('si','ss','math output=input/150')
Flow('oi','oo','math output=input/75')
Flow('os','oi si','cat axis=2 space=n ${SOURCES[1]} | transp | dd type=int')
Flow('sraw','zdata os',
     '''
     intbin head=${SOURCES[1]} xkey=0 ykey=1
     ''')
Flow('shot','sraw',
     '''
     put d2=75 d3=150 o3=10925 label1=t label2=o label3=s |
     mutter half=false t0=1.0 v0=6000
     ''')

# ------------------------------------------------------------
# CMPS
# ------------------------------------------------------------
# create mraw(t,h,m): h=half offset
Flow('mm',['oo','ss'],'math o=${SOURCES[0]} s=${SOURCES[1]} output=s+o/2-10925')
Flow('hh',['oo'     ],'math o=${SOURCES[0]}                 output=o/2')
Flow('mi','mm','math output=input/37.5')
Flow('hi','hh','math output=input/37.5')
Flow('mh','hi mi','cat axis=2 space=n ${SOURCES[1]} | transp | dd type=int')
Flow('craw','zdata mh',
     '''
     intbin head=${SOURCES[1]} xkey=0 ykey=1
     ''')
Flow('cmps','craw',
     '''
     window j2=4 j3=4 n3=500 |
     put d2=150 d3=150 o3=10925 label1=t label2=h label3=m |
     bandpass fhi=20 | 
     mutter half=true t0=0.25 v0=2250 |
     pad n2out=100 
     ''')

# ------------------------------------------------------------
# WAVELET
# ------------------------------------------------------------
Flow('wave',None,
     '''
     spike nsp=1 mag=1 k1=%(kt)d
     n1=%(nt)d d1=%(dt)g o1=%(ot)g
         ''' % par )    
Result('wave','wave','graph wanttitle=n')

#     ricker1 frequency=9
# ------------------------------------------------------------


# ------------------------------------------------------------
# MIGRATION
# ------------------------------------------------------------
SLOlist = '0','1','2'

clspar = { 'time':'24:00', 'queue':'normal','project':'A-eg5',
           'EDIR':'/work/savap/ziggy3/',
           'sgroup':20, 'selem':25,'sjump':1,
           'fgroup':20, 'felem':18,'fjump':1}

# ------------------------------------------------------------
# SHOT-RECORD migration
# ------------------------------------------------------------
CIGlist = '24000','36000','48000','60000','72000'
IMGlist = 'x','t'
cigpar = {'jmx':20,
          'nhx':20,
          'nht':80, 'oht':-0.15, 'dht':0.0075,
          'npt':500,'opt':4000,  'dpt':40,
          'na':400, 'oa':-2.0,   'da':0.01, 'mina':0, 'maxa':1.25 }

spmig.wflds('dos','dor','wave','shot',par)    # prepare S-R wavefields
spmig.datum('dds','ddr','sd','dos','dor',par) # datum S-R wavefields

for i in SLOlist:
    slo = 's' + i
    for k in IMGlist:
        img = 'SRI' + i + k
        cig = 'SRC' + i + k
        spmig.run(img,cig,'dds','ddr',slo,k,par,clspar,cigpar)
        
# ------------------------------------------------------------
# SURVEY-SINKING migration
# ------------------------------------------------------------
sgmig.wflds('do','cmps',par)
sgmig.datum('dd','sd','do',par)

for i in SLOlist:
    slo =   's' + i
    img = 'SSI' + i
    sgmig.run(img,'dd',slo,par,clspar)

# ------------------------------------------------------------
# RESULTS
# ------------------------------------------------------------

# SHOT-RECORD RESULTS
for i in SLOlist:
    slo = 's' + i
    Result(slo,slo,'window      | transp |'
           +igrey('title=s pclip=100 color=j allpos=y'))

    for k in IMGlist:
        SRimg = 'SRI' + i + k
        SRcig = 'SRC' + i + k
        Result(SRimg,SRimg,'window | transp |' + igrey('title=i pclip=99'))
        
        for l in CIGlist:
            z = 'z' + i + k + l
            lmin = float(l) - 20 * float('%(dx)g' % par)
            lmax = float(l) + 20 * float('%(dx)g' % par)
            Flow(z,SRimg,'window n4=1 min4=0 min1=%g max1=%g | transp' % (lmin,lmax) )
            Plot  (z,z,igrey('label2="location (ft)" title=(a)'+LABEL))
            
            # offset gathers
            h = 'h' + i + k + l
            Flow(h,SRcig,'window n1=1 min1=%g' % float(l))
            
            # angle gathers
            a = 'a' + i + k + l

            if(k=='x'):
                Flow(a,h,
                     '''
                     radon adj=y p0=%(oa)g np=%(na)d dp=%(da)g |
                     window min2=%(mina)g max2=%(maxa)g
                     ''' % cigpar)                    
                Plot  (a,a,igrey('label2="tan \F10 q\F3 " title=(b)'+LABEL))
                Plot  (h,h,igrey('label2="offset (ft)"    title=(b)'+LABEL))
                
            if(k=='t'):
                v = 'v' + i + k + l
                Flow(v,slo,'window n1=1 min1=%g | math output=1/input' % float(l))

                Flow(a,[h,v],
                     '''
                     radon adj=y p0=%(opt)g np=%(npt)d dp=%(dpt)g |
                     tshift      a0=%(oa)g  na=%(na)d  da=%(da)g velocity=${SOURCES[1]} |
                     window min2=%(mina)g max2=%(maxa)g
                     ''' % cigpar)
                Plot  (a,a,igrey('label2="tan \F10 q\F3 " title=(c)'+LABEL))
                Plot  (h,h,igrey('label2="\F10 t\F3 (s)"  title=(c)'+LABEL))

for l in CIGlist:
    for i in SLOlist:
        SRoff = 'SRoff' + i + '-' + l
        SRang = 'SRang' + i + '-' + l

        zx = 'z' + i + 'x' + l
        hx = 'h' + i + 'x' + l
        ht = 'h' + i + 't' + l
        ax = 'a' + i + 'x' + l
        at = 'a' + i + 't' + l
        Result(SRoff,[zx,hx,ht],'SideBySideAniso')
        Result(SRang,[zx,ax,at],'SideBySideAniso')

# SURVEY-SINKING RESULTS
for i in SLOlist:
    SGimg = 'SSI' + i
    Result(SGimg,SGimg,'window n3=1 min3=0 | transp |' + igrey('title=i pclip=99'))

    for l in CIGlist:
        y = 'y' + i +  l

        lmin = float(l) - 20 * float('%(dx)g' % par)
        lmax = float(l) + 20 * float('%(dx)g' % par)
        Flow(y,SGimg,'window n3=1 min3=0 min1=%g max1=%g | transp' % (lmin,lmax) )
        Plot  (y,y,igrey('label2="location (ft)" title=(a)'+LABEL))
        
        # offset gathers
        o = 'o' + i + l
        Flow(o,SGimg,
             'window n1=1 min1=%g | transp | window n2=%d'
             % (float(l),cigpar['nhx']))
        p = 'p' + i + l
        Flow(p,o,
             '''
             window f2=1 | pad n2out=%(nhx)d |
             reverse which=2 |
             cat axis=2 space=n ${SOURCES[0]} |
             put d2=150 o2=-3000
             ''' % cigpar)

        # angle gathers
        b = 'b' + i + l
        Flow(b,o,
             '''
             radon adj=y p0=%(oa)g np=%(na)d dp=%(da)g |
             window min2=%(mina)g max2=%(maxa)g
             ''' % cigpar)                    
        Plot  (b,b,igrey('label2="tan \F10 q\F3 " title=(b)'+LABEL))
        Plot  (p,p,igrey('label2="offset (ft)"    title=(b)'+LABEL))

        SGcig = 'SGcig' + i + '-' + l
        Result(SGcig,[y,p,b],'SideBySideAniso')



# ------------------------------------------------------------



End()
