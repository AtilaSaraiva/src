from rsfproj import *
import fdmod,spmig


par = {
    'nx':800,  'ox':40.125, 'dx':0.075, 'lx':'label2=x unit2=kft',
    'nz':1000, 'oz':0,      'dz':0.025, 'lz':'label1=z unit1=kft',
    'nt':1500, 'ot':0,      'dt':0.008, 'lt':'label1=t unit1=s',
    'kt':20,'ft':0,
    'nw':400,'ow':4,'jw':1,'verb':'y','tmx':30,
    'ns':1,'fs':0,'js':1
    }
fdmod.param(par)

#velo = 'pluto.velo.hh'
#shot = 'pluto.shot.hh'
velo = 'pvelo.hh'
shot = 'pshot.hh'

#Fetch(velo,'pluto')
#Fetch(shot,'pluto')

# ------------------------------------------------------------
Flow('velo',velo,
     '''
     dd form=native |
     window f2=1000 n2=%(nx)d n1=%(nz)d |
     put d1=%(dz)g o1=%(oz)g
         d2=%(dx)g o2=%(ox)g |
     math "output=input/1000"
     ''' % par)
Result('velo',fdmod.cgrey('bias=4.9 allpos=y',par))

Flow('ss','velo',
     '''
     math "output=1/input" |
     transp |
     spray axis=2 n=1 o=0 d=1 |
     put label2=y
     ''')
# ------------------------------------------------------------
Flow('shot',shot,
     '''
     dd form=native |
     pad beg2=11 n2out=400 |
     put o1=0
         o2=0     d2=0.075
         o3=67.5  d3=0.150 |
     mutter half=n t0=0.5 v0=6 |
     pad beg1=%(kt)d |
     pad n1out=%(nt)d
     ''' % par)
Result('shot','grey')

# ------------------------------------------------------------
Flow('wave',None,
     '''
     spike nsp=1 mag=1 k1=%(kt)d
     n1=%(nt)d d1=%(dt)g o1=%(ot)g |
     ricker1 frequency=12 |
     bandpass flo=3
         ''' % par )    
Result('wave','wave','window n1=200 | graph')

# ------------------------------------------------------------
spmig.wflds('dsw0','drw0','wave','shot',par)

Plot('dsw0','window | real | transp | grey pclip=100')
Plot('drw0','window | real | transp | grey pclip=100')

Result('dat',['dsw0','drw0'],'Movie')
# ------------------------------------------------------------
spmig.imagePW('ii','cc','ss','dsw0','drw0',par)
Result('ii','window | transp |' + fdmod.cgrey('pclip=99.9',par))

nl = int((par['zmax'] - par['zmin'] ) / 0.5)

Flow('dst0','dsw0',
     'window | transp | pad beg1=27 n1out=751 | fft1 inv=y opt=n')
Flow('drt0','drw0',
     'window | transp | pad beg1=27 n1out=751 | fft1 inv=y opt=n')
Flow('dim0',['dst0','drt0'],
     'add mode=p ${SOURCES[0]} ${SOURCES[1]}',stdin=0)

# datuming
for i in range(nl):
    j = i + 1

    # datuming slabs
    minz=i*0.50
    nz  =  0.50/par['dz']

    # slowness in datuming slab
    slo    = 'so'+str(i)
    Flow(slo,'ss','window min3=%f n3=%d squeeze=n'%(minz,nz))

    # source/receiver wavefields at top of slab
    dswtop = 'dsw' + str(i)
    drwtop = 'drw' + str(i)

    # source/receiver wavefields at bottom of slab
    dswbot = 'dsw' + str(j)
    drwbot = 'drw' + str(j)

    # datuming
    spmig.datum(dswbot,drwbot,slo,dswtop,drwtop,par)

    # time-domain wavefields
    dstbot = 'dst' + str(j)
    drtbot = 'drt' + str(j)
    dimbot = 'dim' + str(j)

    Flow(dstbot,dswbot,'window | transp | pad beg1=24 n1out=751 | fft1 inv=y opt=n')
    Flow(drtbot,drwbot,'window | transp | pad beg1=24 n1out=751 | fft1 inv=y opt=n')
    Flow(dimbot,[dstbot,drtbot],'add mode=p ${SOURCES[0]} ${SOURCES[1]}',stdin=0)
    
# ------------------------------------------------------------
# wavefield plots
alls = map(lambda x: 'dst%d' % x,range(nl+1))
allr = map(lambda x: 'drt%d' % x,range(nl+1))
alli = map(lambda x: 'dim%d' % x,range(nl+1))

for k in ('s','r','i'):
    all = 'all' + k
    bar = 'all' + k + 'bar'

    if(k=='s'): grp = alls
    if(k=='r'): grp = allr
    if(k=='i'): grp = alli
    
    Flow([all,bar],grp,
         '''
         cat axis=3 space=n ${SOURCES[:%d]} |
         byte bar=${TARGETS[1]} gainpanel=a pclip=99.8
         '''% (nl+1),stdin=0)
    
    for i in range(nl+1):
        tit = str(i*0.1)
        wfl =   'd' + k + 't' + str(i)
        
        Plot(wfl,[all,bar],
             'window n3=1 f3=%d |' % i +
             fdmod.dgrey('grid2=y title=%s bar=${SOURCES[1]}',par) % tit )
        
for i in range(nl+1):
    dst = 'dst' + str(i)
    drt = 'drt' + str(i)
    dim = 'dit' + str(i)
    dat = 'dat' + str(i)
    Result(dat,[dst,drt,dim],'SideBySideAniso')


End()
