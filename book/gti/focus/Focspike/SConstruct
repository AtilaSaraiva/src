from rsfproj import *
import zomig

# ------------------------------------------------------------
# PLOTTING
# ------------------------------------------------------------
def igrey(custom):
    return '''
    grey title=" " labelrot=n %s
    min1=%g max1=%g min2=%g max2=%g
    ''' % (custom,par['zmin'],par['zmax'],par['xmin'],par['xmax'])
def igraph(custom,par):
    return '''
    graph labelrot=n yreverse=y wantaxis=n title=" " %s
    min1=%g max1=%g min2=%g max2=%g
    ''' % (custom,par['xmin'],par['xmax'],par['zmin'],par['zmax'])
# ------------------------------------------------------------
par = {
    'nz':600, 'dz':25.0, 'oz':7000, 
    'nx':1200, 'dx':37.5, 'ox':10025,
    'nt':5000, 'dt':0.001,'ot':0, 'kt':200, 'f':20,
    'ns':500,
    'nw':200, 'jw':2,
#    
    'verb':'y',
    'eps':0.01,
    'nrmax':5,
    'dtmax':0.00005,
#
    'tmx':32, 
    'tmy':0,
    'pmx':32,
    'pmy':0
    }

par['zmin']=par['oz']
par['zmax']=par['oz'] + par['nz'] * par['dz']
par['xmin']=par['ox']
par['xmax']=par['ox'] + par['nx'] * par['dx']
# ------------------------------------------------------------
# velocity
# ------------------------------------------------------------
velo = 'sigsbee2a_migvel.sgy'
Fetch(velo,'sigsbee')

Flow('zvelo tzvelo ./vhead ./bvhead',velo,
     '''
     segyread
     tape=$SOURCE
     tfile=${TARGETS[1]}
     hfile=${TARGETS[2]}
     bfile=${TARGETS[3]}
     ''',stdin=0)
Flow('vel','zvelo',
     '''
     put d1=25 o2=10025 d2=37.5 label1=z label2=x |
     window n1=%(nz)d min1=%(oz)g n2=%(nx)d min2=%(ox)g
     ''' % par )
Plot('vel','vel',igrey('color=j allpos=y pclip=100 bias=4920'))
Flow('slo','vel',
     '''
     window |
     math "output=1/input" |
     transp | spray axis=2 n=1 o=0 d=1 | put label2=y
     ''')
# ------------------------------------------------------------
# wavelet
# ------------------------------------------------------------
Flow('wav',None,
     '''
     spike nsp=1 mag=1 
     n1=%(nt)d d1=%(dt)g o1=0 k1=%(kt)d
     n2=1      d2=%(dx)g     |
     ricker1 frequency=%(f)s |
     put label1=t label2=x label3=y 
     ''' % par )    
Result('wav','wav','window n1=500 | graph grid=y title=%s' % 'wav')

# ------------------------------------------------------------
# F-D modeling
# ------------------------------------------------------------
# receiver coordinates
Flow('zr',None,'math n1=%(nx)d d1=%(dx)g o1=%(ox)g "output=%(oz)d" ' % par)
Flow('xr',None,'math n1=%(nx)d d1=%(dx)g o1=%(ox)g "output=x1"'      % par)
Flow('rec','xr zr','cat axis=2 space=n ${SOURCES[1]} | transp')
Plot('rec','xr zr',
     'cat axis=2 space=n ${SOURCES[1]} | transp | dd type=complex | window |'
     + igraph('symbol=. plotcol=3',par))

# source coordinates
def randcoord(N,o,n,d):
    return '''
    spike n1=%d |
    noise type=n seed="%d" |
    math output="%g + (input-0.5)*%d*%g"
    ''' % (N,n,o,n,d)

Flow('zs',None,randcoord(par['ns'], 15000   ,par['nz'],par['dz']))
Flow('xs',None,randcoord(par['ns'],par['ox'],par['nx'],par['dx']))
Flow('rs',None,randcoord(par['ns'],      0  ,      1  ,      1  ))
Flow('sou','xs zs rs','cat axis=2 space=n ${SOURCES[1:3]} | transp')
Plot('sou','xs zs',
     'cat axis=2 space=n ${SOURCES[1]} | transp | dd type=complex | window | '
     + igraph('symbol=* plotcol=0',par))

Result('sourec','vel sou rec','Overlay')

#modeling
Flow('exp wfl','wav vel sou rec',
     '''
     afdm2d verb=y abc=y free=n snap=y jsnap=250
         nbz=50 tz=0.006125
         nbx=50 tx=0.006125 
         vel=${SOURCES[1]}
         sou=${SOURCES[2]}
         rec=${SOURCES[3]}
         wfl=${TARGETS[1]}
     ''' % par)
Flow('dat','exp',
     '''
     transp |
     window min1=0.2 |
     put o1=0 d1=%g
     ''' % (2*par['dt']) )
Result('dat','dat','grey pclip=100 title=%s' % 'dat')
Flow('frq','dat',
     '''
     pad end1=%(nt)d |
     fft1 |
     window n1=%(nw)d j1=%(jw)d| transp | spray axis=2 n=1 o=0 d=1 |
     put label1=x label2=y label3=w
     ''' % par)
Result('frq','frq','window | real | transp |grey pclip=100 title=%s' % 'frq')
# ------------------------------------------------------------
# migration (correct velocity)
zomig.image('img','slo','frq',par)
Result('img','img','window | transp |'+igrey('pclip=100 title=%s') % 'img')


# ------------------------------------------------------------
# migration with wrong velocities
# ------------------------------------------------------------

#par['nxh'] = 0.50 * par['nx']
#par['nzh'] = 0.25 * par['nz']
par['nxh'] = 0.00 * par['nx']
par['nzh'] = 0.00 * par['nz']
# slowness mask
Flow('msk',None,
     '''
     spike nsp=2 mag=0,1
     n1=%(nz)d o1=%(oz)g d1=%(dz)g 
     n2=%(nx)d o2=%(ox)g d2=%(dx)g k2=1,%(nxh)d l2=%(nxh)d,%(nx)d |
     smooth rect2=500 |
     scale axis=123 |
     transp | spray axis=2 n=1 o=0 d=1 |
     put label1=x label2=y label3=z
     ''' % par)
Plot('msk','msk','window | transp |'
       + igrey('pclip=100 scalebar=y title=%s') % 'msk')

f = 0.02
n = 10
for k in range(n):
#    print k,(n/2-k)*f

    # slowness mask
    msk = 'msk' + str(k)
    Flow(msk,'msk','math output="1+input*(%d/2-%d)*%g"' % (n,k,f))
#    Result(msk,msk,'window | transp |'
#           + igrey('pclip=100 scalebar=y title=%s bias=0.8') % msk)

    # slowness
    slo = 'slo' + str(k)
    Flow(slo,['slo',msk],
         '''
         math s=${SOURCES[0]} m=${SOURCES[1]} output="s*m"
         ''', stdin=0)
#    Result(slo,slo,'window | transp |'+ igrey('color=j allpos=y pclip=100'))

    # migration
    img = 'img' + str(k)
    zomig.image(img,slo,'frq',par)
    Plot(img,img,'window | transp |'+igrey('pclip=100 title=%s') % img)

    # focusing
    foc = 'foc' + str(k)
    Flow(foc,img,'window | transp | focus rect1=200 rect2=200')
    Plot(foc,igrey('allpos=y color=j pclip=100 title=%s ') % foc)

#allmsk = map(lambda x: 'msk%d' % x,range(n))
#Result('tmsk',allmsk,
#       '''
#       cat ${SOURCES[:%d]} axis=2 space=n | 
#       transp plane=23 | transp plane=12 |
#       ''' % len(allmsk)
#       + igrey('gainpanel=a pclip=100 color=g scalebar=y bias=0.8')
#       ,stdin=0)

allslo = map(lambda x: 'slo%d' % x,range(n))
Result('tslo',allslo,
       '''
       cat ${SOURCES[:%d]} axis=2 space=n | 
       transp plane=23 | transp plane=12 |
       ''' % len(allslo)
       + igrey('gainpanel=a pclip=100 color=j allpos=y')
       ,stdin=0)

allimg = map(lambda x: 'img%d' % x,range(n))
Result('timg',allimg,
       '''
       cat ${SOURCES[:%d]} axis=2 space=n |
       transp plane=23 | transp plane=12 |
       ''' % len(allimg)
       + igrey('gainpanel=a pclip=100 ')
       ,stdin=0)

allfoc = map(lambda x: 'foc%d' % x,range(n))
Result('tfoc',allfoc,
       '''
       cat ${SOURCES[:%d]} axis=3 space=n | 
       ''' % len(allfoc)
       + igrey('gainpanel=a pclip=100 color=j allpos=y')
       ,stdin=0)

End()


