from rsfproj import *

# ------------------------------------------------------------
par = {
    'nt':1500,   # no of time steps
    'dt':0.0005, #       time sampling
    'ot':0,      #       time origing
    'kt':100,    # wavelet delay
    #
    'ns':1,      # no of shots
    'os':2000,   #       shots origin
    'ds':20,     #       shots sampling
    #
    'nr':401,    # no of receivers
    'or':0,      #       receivers origin
    'dr':2.5,    #       receivers sampling
    #
    'ne':1,      # no of experiments
    'nm':4,      # no of models
    #
    'nx':401, 'ox':0, 'dx':2.5,
    'nz':201, 'oz':0, 'dz':2.5
    }

par['xmin']=par['ox']
par['xmax']=par['ox'] + (par['nx']-1) * par['dx']
par['zmin']=par['oz']
par['zmax']=par['oz'] + (par['nz']-1) * par['dz']
par['tmin']=par['ot']
par['tmax']=par['ot'] + (par['nt']-1) * par['dt']

# ------------------------------------------------------------
# plotting functions

def igrey(custom,par):
    return '''
    grey labelrot=n wantaxis=y wanttitle=n wantscalebar=n
    title="" Xpclip=99 label1=z unit1=m label2=x unit2=m %s
    min1=%g max1=%g min2=%g max2=%g
    screenratio=0.5 screenht=7 Xcrowd=0.9
    ''' % (custom,par['zmin'],par['zmax'],par['xmin'],par['xmax'])


# smooth background
Flow('vo',None,
     '''
     math n1=%(nz)d o1=%(oz)g d1=%(dz)g output="1500+1.0*x1" |
     spray axis=2 n=%(nx)d o=%(ox)g d=%(dx)g
     ''' % par)
Flow('ro',None,
     '''
     math n1=%(nz)d o1=%(oz)g d1=%(dz)g output="1500" |
     spray axis=2 n=%(nx)d o=%(ox)g d=%(dx)g
     ''' % par)

par['vmag']=0.4
par['dmag']=4

# rough perturbations
Flow('vx',None,
     '''
     spike nsp=2 mag=-%(vmag)g,%(vmag)g
     n1=%(nz)d o1=%(oz)g d1=%(dz)g k1=065,101 l1=100,125
     n2=%(nx)d o2=%(ox)g d2=%(dx)g k2=150,175 l2=250,225 |
     smooth rect1=15 rect2=15 repeat=2
     ''' % par)
Flow('rx',None,
     '''
     spike nsp=1 mag=%(dmag)g
     n1=%(nz)d o1=%(oz)g d1=%(dz)g 
     n2=%(nx)d o2=%(ox)g d2=%(dx)g k2=150 l2=250 |
     smooth rect1=15 rect2=15 repeat=2
     ''' % par)

Flow('vv','vo vx','math r=${SOURCES[1]} output="input*(1+r)"')
Flow('dd','ro rx','math r=${SOURCES[1]} output="input*(1+r)"')

# ------------------------------------------------------------
# wavelet
Flow('wav',None,
     '''
     spike nsp=1 mag=1 n1=%(nt)d d1=%(dt)g o1=%(ot)g k1=%(kt)d |
     ricker1 frequency=50 |
     scale axis=123 |
     put label1=t label2=x label3=y 
     ''' % par)    
Result('wav','wav','window n1=200 | graph title="" label1=t unit1=s label2=')

# ------------------------------------------------------------
# experiments

Flow('r_',None,'math n1=%(nr)d d1=%(dr)g o1=%(or)g output=0' % par)
Flow('s_',None,'math n1=1      d1=0      o1=0      output=0' % par)

# receivers
Flow('zr','r_','math output="0" ')
Flow('xr','r_','math output="x1"')
Flow('rr','xr zr','cat axis=2 ${SOURCES[1]} | transp')

# sources
Flow('zs','s_','math output=0')
Flow('xs','s_','math output=400')
Flow('rs','s_','math output=1')
Flow('ss','xs zs rs','cat axis=2 ${SOURCES[1:3]} | transp')

Plot('vv',igrey('allpos=y bias=1000 pclip=100',par))
Plot('dd',igrey('bias=1500 pclip=100',par))
Result('mcomp','vv dd','SideBySideIso')

# modeling function
def amodel(dat,wfl,wav,vel,den,sou,rec,custom):
    Flow([dat,wfl],[wav,vel,den,sou,rec],
         '''
         afmod
         verb=y abc=y free=n snap=y jsnap=50 %s
         nbz=100 tz=0.0035
         nbx=100 tx=0.0035
         vel=${SOURCES[1]}
         den=${SOURCES[2]}
         sou=${SOURCES[3]}
         rec=${SOURCES[4]}
         wfl=${TARGETS[1]}
         ''' % custom)

# modeling
amodel('dv','wv','wav','vv','dd','ss','rr','free=n dens=n')
amodel('dr','wr','wav','vv','dd','ss','rr','free=n dens=y')

Flow('wvf','wv','window n3=1 f3=13')
Flow('wrf','wr','window n3=1 f3=13')
Flow('wcomp wbar','wvf wrf',
     '''
     cat axis=3 space=n ${SOURCES[1]} |
     byte bar=${TARGETS[1]} gainpanel=all pclip=98
     ''')
Plot('wv','wcomp wbar','window n3=1 f3=0 |' + igrey('clip=0.05',par))
Plot('wr','wcomp wbar','window n3=1 f3=1 |' + igrey('clip=0.05',par))
Result('wcomp','wv wr','SideBySideIso')

Result('wdiff','wvf wrf',
       'add scale=1,-1 ${SOURCES[1]} | ' + igrey('clip=0.05',par))

# Ray tracing
Flow('ray','vv','rays2 nr=2000 nt=1500 dt=0.0005 yshot=400')

for plot in range(2):
    front = 'front%d' % plot
    Plot(front,'ray',
         '''
         window n1=1 f1=550 f2=550 n2=800 | graph 
         min2=0 max2=1000
         min1=0 max1=500
         screenratio=0.5 screenht=7 
         plotcol=%d transp=1 plotfat=%d dash=1
         wantaxis=n wheretitle=b wherexlabel=t
         yreverse=y wanttitle=n
         ''' % ((7,5),(0,1))[plot])
Result('wrt','wr front0 front1','Overlay')
    
End()
