from rsfproj import *

par = {
    'nz':625, 'dz':40,    'oz':0,
    'nx':746, 'dx':110,   'ox':0,   'nx':400,
    'ny':1,   'dy':110,   'oy':46200,
    #
    'nt':500,'dt':0.01,'ot':0,
#
    'ng':1801,'dg':0.05,'og':0,
    'nh':1,'dh':0.5,'oh':0,
    'nray':10000, 'jray':1000,
    'fill':0,'scaleray':2
    }

par['xmin']=par['ox']
par['xmax']=par['ox'] + (par['nx']-1) * par['dx']
par['ymin']=par['oy']
par['ymax']=par['oy'] + (par['ny']-1) * par['dy']
par['zmin']=par['oz']
par['zmax']=par['oz'] + (par['nz']-1) * par['dz']

par['xmid']=par['nx']/2.
par['ymid']=par['ny']/2.

par['zsou']=par['oz']
par['xsou']=10000
par['ysou']=par['oy'] #+ par['ymid'] * par['dy']

def igrey(custom):
    return '''
    grey labelrot=n pclip=100 color=F title=""
    wantscalebar=y
    %s
    ''' % (custom)

def grex(custom,par):
    return '''
    grey labelrot=n pclip=100 title=""
    min2=%g max2=%g min1=%g max1=%g
    %s
    ''' % (par['xmin'],par['xmax'],par['zmin'],par['zmax'],custom)
def grey(custom,par):
    return '''
    grey labelrot=n pclip=100 title=""
    min2=%g max2=%g min1=%g max1=%g
    %s
    ''' % (par['ymin'],par['ymax'],par['zmin'],par['zmax'],custom)

def grax(custom,par):
    return '''
    graph labelrot=n yreverse=y title=""
    min1=%g max1=%g min2=%g max2=%g
    %s
    ''' % (par['xmin'],par['xmax'],par['zmin'],par['zmax'],custom)
def gray(custom,par):
    return '''
    graph labelrot=n yreverse=y title=""
    min1=%g max1=%g min2=%g max2=%g
    %s
    ''' % (par['ymin'],par['ymax'],par['zmin'],par['zmax'],custom)

# ------------------------------------------------------------

# velocity
Flow('vel2d','./DATA/vel.HH','window n2=%(nx)d | put label1=z label2=x label3=y' % par)
Result('vel2d','vel2d',igrey('color=j allpos=y'))

# smooth velocity
Flow('vsm2d','vel2d','smooth rect1=31 rect2=21 rect3=21 repeat=11')
Result('vsm2d','vsm2d',igrey('color=j allpos=y'))

# ------------------------------------------------------------

# Huygens wavefront tracing
Flow('hwt2d','vsm2d',
     '''
     hwt3d verb=y forceray=y scaleray=%(scaleray)d
     xsou=%(xsou)g ysou=%(ysou)g zsou=%(zsou)g
     nt=%(nt)d ot=%(ot)g dt=%(dt)g
     ng=%(ng)d og=%(og)g dg=%(dg)g
     nh=%(nh)d oh=%(oh)g dh=%(dh)g
     ''' % par)

Flow('tim2d','hwt2d',
     '''
     int3d verb=y pick=2 fill=%(fill)d
     nz=%(nz)d oz=%(oz)g dz=%(dz)g
     nx=%(nx)d ox=%(ox)g dx=%(dx)g
     ny=%(ny)d oy=%(oy)g dy=%(dy)g
     ''' % par)

#/home/savap/RSF/user/savap/sf
Flow('rrt2d','vsm2d',
     '''
     rrt3d verb=y scaleray=%(scaleray)d nray=%(nray)d jray=%(jray)d
     pick=2 fill=%(fill)d
     xsou=%(xsou)g ysou=%(ysou)g zsou=%(zsou)g
     nt=%(nt)d ot=%(ot)g dt=%(dt)g
     gmin=0. gmax=90. hmin=0 hmax=0
     ''' % par)

# fast-marching eikonal solver
Flow('eik2d','vel2d','eikonal yshot=%(xsou)g xshot=%(ysou)g zshot=%(zsou)g'%par)

Flow('time',['eik2d','tim2d','rrt2d'],
     '''
     cat axis=3 space=n
     ${SOURCES[0]} ${SOURCES[1]} ${SOURCES[2]}
     ''', stdin=0)
Result('time','grey pclip=100 wantscalebar=y allpos=y color=j gainpanel=a')

# ------------------------------------------------------------


End()
