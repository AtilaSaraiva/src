from rsfproj import *
import fdmod,zomig

par = {
    'nz':1201, 'dz':0.025,  'oz':0,  'lz':'label1=z unit1=km', 
    'nx':3201, 'dx':0.025,  'ox':10, 'lx':'label2=x unit2=km',
    'nt':8000, 'dt':0.001,  'ot':0,  'lt':'label1=t unit1=s',
    'kt':100,
    'nw':400,'ow':0,'jw':1,'verb':'y','tmx':20,'dtmax':0.0001,'nrmax':3
    }
fdmod.param(par)

# ------------------------------------------------------------
# velocity model
velo = 'sigsbee2a_stratigraphy.sgy'
Fetch(velo,'sigsbee')
Flow('zvelo tzvelo ./vhead ./bvhead',velo,
     '''
     segyread
     tape=$SOURCE
     tfile=${TARGETS[1]}
     hfile=${TARGETS[2]}
     bfile=${TARGETS[3]}
     ''',stdin=0)
Flow('velo','zvelo',
     '''
     scale rscale=0.001 |
     put d1=%(dz)g o2=%(ox)g d2=%(dx)g label1=z label2=x
     ''' % par)
Flow('dens','velo','math output=2000')

Result('velo',fdmod.cgrey('allpos=y pclip=95',par))
# ------------------------------------------------------------
# reflectivity
refl = 'sigsbee2a_reflection_coefficients.sgy'
Fetch(refl,'sigsbee')
Flow('zrefl tzrefl',refl,
     '''
     segyread
     tape=$SOURCE
     tfile=${TARGETS[1]}
     hfile=${TARGETS[2]}
     bfile=${TARGETS[3]}
     ''',stdin=0)
Flow('refl','zrefl','put d1=%(dz)g o2=%(ox)g d2=%(dx)g label1=z label2=x' % par)

Result('refl',fdmod.cgrey('pclip=99',par))


# ------------------------------------------------------------
# source coordinates (exploding reflectors)
for x in ('x1','x2'):
    if(x=='x1'): o='zs'
    if(x=='x2'): o='xs'

    Flow(o,'refl',
         '''
         math output=%s |
         put n1=1 n2=%d |
         window
         ''' % (x,par['nz']*par['nx']))
Flow('rs','refl',
     '''
     put n1=1 n2=%d |
     window
     ''' % (par['nz']*par['nx']))
Flow('ss',['xs','zs','rs'],
     '''
     cat axis=2 space=n
     ${SOURCES[0]} ${SOURCES[1]} ${SOURCES[2]} | transp |
     window j2=2
     ''', stdin=0)
# ------------------------------------------------------------

# ------------------------------------------------------------
# receiver coordinates
Flow('ro',None,'math n1=%(nx)d d1=%(dx)g o1=%(ox)g output=0' % par)
Flow('zo','ro','math output="%g"' % par['oz'])
Flow('xo','ro','math output="x1"')
Flow('oo',['xo','zo'],
     '''
     cat axis=2 space=n
     ${SOURCES[0]} ${SOURCES[1]} | transp
     ''', stdin=0)

# ------------------------------------------------------------
# wavelet
Flow('wav',None,
     '''
     spike nsp=1 mag=1 n1=%(nt)d d1=%(dt)g o1=%(ot)g k1=%(kt)d |
     ricker1 frequency=20 | 
     put label1=t label2=x label3=y 
     ''' % par)    
Result('wav','wav','window n1=200 | graph title=" "')

# ------------------------------------------------------------
# F-D modeling
fdmod.amodel('do','wo','wav','velo','dens','ss','oo','free=n',par)

Flow('to','do','window f2=%(kt)d | pad end2=%(kt)d | put o2=%(ot)g' % par)
Result('to','window j2=5 | transp|'  + fdmod.dgrey('pclip=100',par))

Result('wo','window n3=1 f3=10 |'    + fdmod.wgrey('gainpanel=a pclip=99',par))
Result('do','window j2=4 | transp |' + fdmod.dgrey('pclip=99',par))

# ------------------------------------------------------------
# WE migration
Flow('dd','do','window f2=%(kt)d | put o2=0 d2=0.002' % par)
Result('dd','window j2=4 | transp |' + fdmod.dgrey('',par))

zomig.zom('ii','dd','velo',par)
Result('ii','window | transp | bandpass flo=1 |' + fdmod.cgrey('pclip=99',par))

# ------------------------------------------------------------
# RT migration

fdmod.zom('io','uo','to','velo','dens','oo','oo','dens=n',par)
Result('io','bandpass flo=1 |' + fdmod.cgrey('pclip=99',par))

End()
