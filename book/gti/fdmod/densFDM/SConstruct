## 
 # F-D modeling 
 ##
from rsfproj import *

# ------------------------------------------------------------
par = {
    'nt':1500,   # no of time steps
    'dt':0.0005, #       time sampling
    'ot':0,      #       time origing
    'kt':100,    # wavelet delay
    #
    'ns':1,      # no of shots
    'os':2000,   #       shots origin
    'ds':20,     #       shots sampling
    #
    'nr':401,    # no of receivers
    'or':0,      #       receivers origin
    'dr':2.5,    #       receivers sampling
    #
    'ne':1,      # no of experiments
    'nm':4,      # no of models
    #
    'nx':401, 'ox':0, 'dx':2.5,
    'nz':201, 'oz':0, 'dz':2.5
    }
par['xmin']=par['ox']
par['xmax']=par['ox'] + (par['nx']-1) * par['dx']
par['zmin']=par['oz']
par['zmax']=par['oz'] + (par['nz']-1) * par['dz']
par['tmin']=par['ot']
par['tmax']=par['ot'] + (par['nt']-1) * par['dt']

# ------------------------------------------------------------

# ------------------------------------------------------------
# plotting functions

def igrey(custom,par):
    return '''
    grey labelrot=n wantaxis=y wanttitle=n wantscalebar=n
    title="" pclip=99 label1="z(m)" label2="x(m)" %s
    min1=%g max1=%g min2=%g max2=%g
    screenratio=0.5 screenht=7 crowd=0.9
    ''' % (custom,par['zmin'],par['zmax'],par['xmin'],par['xmax'])

def dgrey(custom,par):
    return '''
    grey labelrot=n wantaxis=y wanttitle=n
    title="" pclip=99 label1="t(s)" label2="x(m)" %s
    min2=%g max2=%g
    screenratio=1.5 screenht=21 crowd=0.9
    ''' % (custom,par['xmin'],par['xmax'])

def pgraph(custom,par):
    return '''
    graph labelrot=n  %s
    yreverse=y symbolsz=4 wantaxis=n title=" " wantscalebar=n
    min1=%g max1=%g min2=%g max2=%g
    screenratio=0.5 screenht=7 crowd=0.9
    ''' % (custom,par['xmin'],par['xmax'],par['zmin'],par['zmax'])

def wgrey(custom,par):
    return '''
    window min1=%g max1=%g min2=%g max2=%g |
    grey labelrot=n wantaxis=y wanttitle=y wantscalebar=n
    title="" pclip=99 label1="z(m)" label2="x(m)" %s
    screenratio=0.5 screenht=7 crowd=0.9
    ''' % (par['zmin'],par['zmax'],par['xmin'],par['xmax'],custom)

# ------------------------------------------------------------
# modeling function
def amodel(dat,wfl,wav,vel,den,sou,rec,custom):
    Flow([dat,wfl],[wav,vel,den,sou,rec],
         '''
         afmod
         verb=y abc=y free=n snap=y jsnap=50 %s
         nbz=100 tz=0.0035
         nbx=100 tx=0.0035
         vel=${SOURCES[1]}
         den=${SOURCES[2]}
         sou=${SOURCES[3]}
         rec=${SOURCES[4]}
         wfl=${TARGETS[1]}
         ''' % custom)
# ------------------------------------------------------------
# wavelet
Flow('wav',None,
         '''
         spike nsp=1 mag=1 n1=%(nt)d d1=%(dt)g o1=%(ot)g k1=%(kt)d |
         ricker1 frequency=50 |
         scale axis=123 |
         put label1=t label2=x label3=y 
         ''' % par)    
Result('wav','wav','window n1=200 | graph title="" label1="t(s)" label2=')

# ------------------------------------------------------------
# experiments

Flow('r_',None,'math n1=%(nr)d d1=%(dr)g o1=%(or)g output=0' % par)
Flow('s_',None,'math n1=1      d1=0      o1=0      output=0' % par)

# receivers
Flow('zr','r_','math output="0" ')
Flow('xr','r_','math output="x1"')
Flow('rr',['xr','zr'],
     '''
     cat axis=2 space=n
     ${SOURCES[0]} ${SOURCES[1]} | transp
     ''', stdin=0)
Plot('rr','window n1=2 | dd type=complex | window j2=10 | '
     + pgraph('symbol=. plotcol=6',par))

# sources
Flow('zs','s_','math output=0')
Flow('xs','s_','math output=400')
Flow('rs','s_','math output=1')
Flow('ss',['xs','zs','rs'],
     '''
     cat axis=2 space=n
     ${SOURCES[0]} ${SOURCES[1]} ${SOURCES[2]} | transp
     ''', stdin=0)
Plot('ss','window n1=2 | dd type=complex | window | '
     + pgraph('symbol=v plotcol=6',par))

# ------------------------------------------------------------
def wplot(wplot,w0,w1,w2,w3,par):
    _w0 = "_" + w0
    _w1 = "_" + w1
    _w2 = "_" + w2
    _w3 = "_" + w3

    Flow(_w0,w0,
         'window min1=%(zmin)g max1=%(zmax)g min2=%(xmin)g max2=%(xmax)g' % par)
    Flow(_w1,w1,
         'window min1=%(zmin)g max1=%(zmax)g min2=%(xmin)g max2=%(xmax)g' % par)
    Flow(_w2,w2,
         'window min1=%(zmin)g max1=%(zmax)g min2=%(xmin)g max2=%(xmax)g' % par)
    Flow(_w3,w3,
         'window min1=%(zmin)g max1=%(zmax)g min2=%(xmin)g max2=%(xmax)g' % par)

    _w01 = "_"+ w0+ w1
    Flow(_w01,[_w0,_w1],'cat  ${SOURCES[0]} ${SOURCES[1]} axis=2 space=n',stdin=0)

    _w23 = "_"+ w2+ w3
    Flow(_w23,[_w2,_w3],'cat  ${SOURCES[0]} ${SOURCES[1]} axis=2 space=n',stdin=0)

    Result(wplot,[_w01,_w23],
           '''
           cat ${SOURCES[0]} ${SOURCES[1]} axis=1 space=n |
           grey pclip=99 gainpanel=a title="" screenratio=0.66666 screenht=9 wantaxis=n
           grid=y g1num=1000
           ''', stdin=0)
# ------------------------------------------------------------
# smooth background
Flow('vo',None,
     '''
     math n1=%(nz)d o1=%(oz)g d1=%(dz)g output="1500+1.0*x1" |
     spray axis=2 n=%(nx)d o=%(ox)g d=%(dx)g
     ''' % par)
Flow('ro',None,
     '''
     math n1=%(nz)d o1=%(oz)g d1=%(dz)g output="2000" |
     spray axis=2 n=%(nx)d o=%(ox)g d=%(dx)g
     ''' % par)

# rough perturbations
for jm in range(par['nm']):
    if(jm==0):
        par['vmag']=0.1
        par['dmag']=0.4
    if(jm==1):
        par['vmag']=0.2
        par['dmag']=0.4
    if(jm==2):
        par['vmag']=0.3
        par['dmag']=0.4
    if(jm==3):
        par['vmag']=0.4
        par['dmag']=0.4

    vx = 'vx' + str(jm)
    Flow(vx,None,
         '''
         spike nsp=2 mag=-%(vmag)g,%(vmag)g
         n1=%(nz)d o1=%(oz)g d1=%(dz)g k1=065,101 l1=100,125
         n2=%(nx)d o2=%(ox)g d2=%(dx)g k2=150,175 l2=250,225 |
         smooth rect1=15 rect2=15 repeat=2
         ''' % par)
    rx = 'rx' + str(jm)
    Flow(rx,None,
         '''
         spike nsp=2 mag=%(dmag)g,-%(dmag)g
         n1=%(nz)d o1=%(oz)g d1=%(dz)g k1=130,150 l1=131,151 |
         spray axis=2 n=%(nx)d o=%(ox)g d=%(dx)g
         ''' % par)

# loop over models
for im in range(par['nm']):
    vv = 'vv' + str(im)
    wv = 'wv' + str(im)
    dv = 'dv' + str(im)
    vx = 'vx' + str(im)
    
    rr = 'rr' + str(im)
    wr = 'wr' + str(im)
    dr = 'dr' + str(im)
    rx = 'rx' + str(im)

    mm = 'mm' + str(im)

    # combined smooth+rough
    Flow(vv,['vo', vx ],'math c=${SOURCES[0]} r=${SOURCES[1]} output="c*(1+r)"')
    Flow(rr,['ro', rx ],'math c=${SOURCES[0]} r=${SOURCES[1]} output="c*(1+r)"')

    Plot(vv,igrey('color=j allpos=y bias=1000 pclip=100',par))
    Plot(rr,igrey('        allpos=y bias=1500 pclip=100',par))
    mcomp = 'mcomp' + str(im)
    Result(mcomp,[vv,rr],'SideBySideIso')

    # modeling
    amodel(dv,wv,'wav',vv,rr,'ss','rr','free=n dens=n')
    amodel(dr,wr,'wav',vv,rr,'ss','rr','free=n dens=y')

    wcomp = 'wcomp' + str(im)
    wbar  = 'wbar'  + str(im)
    Flow(wv+'f',wv,'window n3=1 f3=13')
    Flow(wr+'f',wr,'window n3=1 f3=13')
    Flow([wcomp,wbar],[wv+'f',wr+'f'],
         '''
         cat axis=3 space=n ${SOURCES[0:2]} |
         byte bar=${TARGETS[1]} gainpanel=all pclip=98
         ''', stdin=0)
    Plot(wv,[wcomp,wbar],'window n3=1 f3=0 |' + igrey('bar=${SOURCES[1]}',par))
    Plot(wr,[wcomp,wbar],'window n3=1 f3=1 |' + igrey('bar=${SOURCES[1]}',par))
    Result(wcomp,[wv,wr],'SideBySideIso')

    dcomp = 'dcomp' + str(im)
    dbar  = 'dbar'  + str(im)
    Flow([dcomp,dbar],[dv,dr],
         '''
         cat axis=3 space=n ${SOURCES[0:2]} |
         byte bar=${TARGETS[1]} gainpanel=all pclip=98
         ''', stdin=0)
    Plot(dv,[dcomp,dbar],'window n3=1 f3=0 | transp |' + dgrey('bar=${SOURCES[1]}',par))
    Plot(dr,[dcomp,dbar],'window n3=1 f3=1 | transp |' + dgrey('bar=${SOURCES[1]}',par))
    Result(dcomp,[dv,dr],'SideBySideIso')

#    Result(wv,wgrey('gainpanel=a',par))
#    Result(wr,wgrey('gainpanel=a',par))

wplot('vmovie','wv0','wv1','wv2','wv3',par)
wplot('rmovie','wr0','wr1','wr2','wr3',par)


# ------------------------------------------------------------

End()
