## 
 # F-D modeling in random media
 ##
from rsfproj import *
import spmig,fdmod

# ------------------------------------------------------------
par = {
    'nt':2000,   # no of time steps
    'dt':0.0005, #       time sampling
    'ot':0,      #       time origing
    'kt':50,     # wavelet delay
    #
    'ns':1,      # no of shots
    'os':0.5,   #       shots origin
    'ds':0.025,     #       shots sampling
    #
    'nr':401,    # no of receivers
    'or':0,      #       receivers origin
    'dr':0.0025,    #       receivers sampling
    #
    'nx':401, 'ox':0, 'dx':0.0025,
    'nz':201, 'oz':0, 'dz':0.0025,
    #
    'nw':100,'ow':1,'jw':1,'fs':0,'js':1,
    'nrmax':5,'dtmax':0.00001
    }
par['xmin']=par['ox']
par['xmax']=par['ox'] + (par['nx']-1) * par['dx']
par['zmin']=par['oz']
par['zmax']=par['oz'] + (par['nz']-1) * par['dz']
par['tmin']=par['ot']
par['tmax']=par['ot'] + (par['nt']-1) * par['dt']
# ------------------------------------------------------------

# ------------------------------------------------------------
# plotting functions

def igrey(custom,par):
    return '''
    grey labelrot=n wantaxis=y wanttitle=y wantscalebar=y
    title="" pclip=99
    label1="z" unit1=km label2="x" unit2=km %s
    min1=%g max1=%g min2=%g max2=%g
    screenratio=0.5 screenht=7
    ''' % (custom,par['zmin'],par['zmax'],par['xmin'],par['xmax'])

def dgrey(custom,par):
    return '''
    grey labelrot=n wantaxis=y wanttitle=n
    title="" pclip=99
    label1="t" unit1=s label2="x" unit2=km %s
    min2=%g max2=%g
    ''' % (custom,par['xmin'],par['xmax'])

def pgraph(custom,par):
    return '''
    graph labelrot=n  %s
    yreverse=y symbolsz=4 wantaxis=n title=" " wantscalebar=y
    min1=%g max1=%g min2=%g max2=%g
    screenratio=0.5 screenht=7
    ''' % (custom,par['xmin'],par['xmax'],par['zmin'],par['zmax'])

def wgrey(custom,par):
    return '''
    window min1=%g max1=%g min2=%g max2=%g |
    grey labelrot=n wantaxis=y wanttitle=y wantscalebar=n
    title="" pclip=100 gainpanel=a
    label1="z" unit1=km label2="x" unit2=km %s
    screenratio=0.5 screenht=7
    ''' % (par['zmin'],par['zmax'],par['xmin'],par['xmax'],custom)

# ------------------------------------------------------------
# modeling function
def amodel(dat,wfl,  wav,vel,den,sou,rec,custom):
    Flow( [dat,wfl],[wav,vel,den,sou,rec],
         '''
         afmodP ompchunk=1
         verb=y abc=y free=y dens=y snap=y jsnap=1 %s
         nbz=100 tz=0.0035
         nbx=100 tx=0.0035
         vel=${SOURCES[1]}
         den=${SOURCES[2]}
         sou=${SOURCES[3]}
         rec=${SOURCES[4]}
         wfl=${TARGETS[1]}
         ''' % custom)

# ------------------------------------------------------------
# wavelet
Flow('wav',None,
         '''
         spike nsp=1 mag=1 n1=%(nt)d d1=%(dt)g o1=%(ot)g k1=%(kt)d |
         ricker1 frequency=50 |
         scale axis=123 |
         put label1=t label2=x label3=y 
         ''' % par)    
Result('wav','window n1=200 | graph title="" label1="t" label2=')

# ------------------------------------------------------------
# experiments

Flow('r_',None,'math n1=%(nx)d d1=%(dx)g o1=%(ox)g output=0' % par)
Flow('s_',None,'math n1=1      d1=0      o1=0      output=0' % par)

# receivers
Flow('zr','r_','math output="0" ')
Flow('xr','r_','math output="x1"')
Flow('rr',['xr','zr'],
     '''
     cat axis=2 space=n
     ${SOURCES[0]} ${SOURCES[1]} | transp
     ''', stdin=0)
Plot('rr','window n1=2 | dd type=complex | window j2=10 | '
     + pgraph('symbol=* plotcol=6',par))

# sources
Flow('zs','s_','math output=0')
Flow('xs','s_','math output=0.5')
Flow('rs','s_','math output=1')
Flow('ss',['xs','zs','rs'],
     '''
     cat axis=2 space=n
     ${SOURCES[0]} ${SOURCES[1]} ${SOURCES[2]} | transp
     ''', stdin=0)
Plot('ss','window n1=2 | dd type=complex | window | '
     + pgraph('symbol=v plotcol=6',par))

# ------------------------------------------------------------
# smooth background
Flow('vo',None,
     '''
     math n1=%(nz)d o1=%(oz)g d1=%(dz)g output="1.5+0.0*x1" |
     spray axis=2 n=%(nx)d o=%(ox)g d=%(dx)g
     ''' % par)
# random perturbation
Flow('vx','vo',
     '''
     noise mean=0 range=2.0 |
     add add=-1.5 |
     window f1=35 |
     pad  beg1=35 |
     add add=1.5 |
     smooth rect1=3 rect2=3
     ''')

Flow('ro',None,
     '''
     spike nsp=1 mag=2
     n1=%(nz)d o1=%(oz)g d1=%(dz)g 
     n2=%(nx)d o2=%(ox)g d2=%(dx)g
     ''' % par)

Flow('rx',None,
     '''
     spike nsp=1 mag=1
     n1=%(nz)d o1=%(oz)g d1=%(dz)g k1=180 l1=181
     n2=%(nx)d o2=%(ox)g d2=%(dx)g  |
     add add=2
     ''' % par)

Plot('vo',igrey('color=j allpos=y bias=1.5 pclip=100',par))
Plot('vx',igrey('color=j allpos=y bias=1.5 pclip=100',par))
Plot('ro',igrey('        allpos=y bias=2.0 pclip=100',par))
Plot('rx',igrey('        allpos=y bias=2.0 pclip=100',par))

Result('vo',['vo','ss','rr'],'Overlay')
Result('vx',['vx','ss','rr'],'Overlay')
Result('ro',['ro','ss','rr'],'Overlay')
Result('rx',['rx','ss','rr'],'Overlay')

amodel('dd','ww','wav','vo','ro','ss','rr','free=y dens=y')
amodel('do','wo','wav','vo','rx','ss','rr','free=y dens=y')
amodel('dx','wx','wav','vx','rx','ss','rr','free=y dens=y')

Result('dd','transp |' + dgrey('pclip=99',par))
Result('do','transp |' + dgrey('pclip=99',par))
Result('dx','transp |' + dgrey('pclip=99',par))

Flow('dot','do dd','add ${SOURCES[1]} scale=1,-1')
Flow('dxt','dx dd','add ${SOURCES[1]} scale=1,-1')

Result('dot','transp |' + dgrey('pclip=99',par))
Result('dxt','transp |' + dgrey('pclip=99',par))

# ------------------------------------------------------------

Flow('so','vo','math output=1/input | transp | spray axis=2 n=1 o=0 d=1 | put label2=y')
Flow('sx','vx','math output=1/input | transp | spray axis=2 n=1 o=0 d=1 | put label2=y')

Flow('dos','wav',
     '''
     pad beg2=200 end2=200 |
     put o2=%(ox)g d2=%(dx)g |
     fft1 inv=n opt=n |
     window squeeze=n n1=%(nw)d min1=%(ow)g j1=%(jw)d |
     put label1=w label2=x unit2=km |
     transp plane=12 | transp plane=23
     ''' % par)

Flow('dow','dot',
     '''
     transp |
     fft1 inv=n opt=n |
     window squeeze=n n1=%(nw)d min1=%(ow)g j1=%(jw)d |
     put label1=w label2=x unit=km |
     transp plane=12 | transp plane=23
     ''' % par)

Flow('dxw','dxt',
     '''
     transp |
     fft1 inv=n opt=n |
     window squeeze=n n1=%(nw)d min1=%(ow)g j1=%(jw)d |
     put label1=w label2=x unit=km |
     transp plane=12 | transp plane=23
     ''' % par)

spmig.imagePW('io','co','so','dos','dow',par)
spmig.imagePW('ix','cx','sx','dos','dxw',par)
spmig.imagePW('ii','ci','so','dos','dxw',par)

Result('io','window | transp |' + igrey('pclip=100 title=io',par))
Result('ix','window | transp |' + igrey('pclip=100 title=ix',par))
Result('ii','window | transp |' + igrey('pclip=100 title=ii',par))

End()
