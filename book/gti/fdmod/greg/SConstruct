## 
 # Greg's toy
 ##
from rsfproj import *
import fdmod

# ------------------------------------------------------------
par = {
    'nt':3000, 'dt':0.001,'ot':0, 'lt':'label1=time unit1=s',
    'nx':401,  'ox':0,    'dx':0.01,  'lx':'label2=x unit2=km',
    'nz':201,  'oz':0,    'dz':0.01,  'lz':'label1=z unit1=km',
    'kt':100
    }
fdmod.param(par)

# ------------------------------------------------------------
# wavelet
fdmod.wavelet('wav',15,par)
Result('wav','window n1=200 | graph title="" label1="t" label2=')

# ------------------------------------------------------------
# receiver positions
fdmod.horizontal('rr',0,par)
Plot('rr','window n1=2 | dd type=complex | window j2=10 | '
     + fdmod.cgraph('symbol=* plotcol=6',par))

# source positions
fdmod.point('ss',2,0,1,par)
Plot('ss','window n1=2 | dd type=complex | window | '
     + fdmod.cgraph('symbol=v plotcol=6',par))

# image points
Flow('q_',None,
     '''
     math output=1
     n1=%(nz)d d1=%(dz)g o1=%(oz)g
     n2=%(nx)d d2=%(dx)g o2=%(ox)g
     ''' % par )

Flow('zq','q_','math output="x1" | put n1=%d n2=1' % (par['nz']*par['nx']))
Flow('xq','q_','math output="x2" | put n1=%d n2=1' % (par['nz']*par['nx']))
Flow('qq',['xq','zq'],
     '''
     cat axis=2 space=n
     ${SOURCES[0]} ${SOURCES[1]} | transp
     ''', stdin=0)

# ------------------------------------------------------------
# smooth model
Flow('vm',None,
     '''
     math n1=%(nz)d o1=%(oz)g d1=%(dz)g output="1.5+0.5*x1" |
     spray axis=2 n=%(nx)d o=%(ox)g d=%(dx)g
     ''' % par)
Flow('rm',None,
     '''
     spike nsp=3 mag=+0.5,-0.5,1
     n1=%(nz)d o1=%(oz)g d1=%(dz)g k1=31,51,91 l1=50,90,200 |
     spray axis=2 n=%(nx)d o=%(ox)g d=%(dx)g |
     add add=2
     ''' % par)

Plot('vm',fdmod.cgrey('allpos=y bias=1.5 pclip=100',par))
Plot('rm',fdmod.cgrey('allpos=y bias=1.5 pclip=100',par))
Result('vm',['vm','ss','rr'],'Overlay')
Result('rm',['rm','ss','rr'],'Overlay')

# ------------------------------------------------------------
# finite-differences modeling

fdmod.amodel('do','wo','wav','vm','rm','ss','rr','free=y dens=n',par)
fdmod.amodel('dd','ww','wav','vm','rm','ss','rr','free=y dens=y',par)

# receiver data
Flow('dx','dd do','math a=${SOURCES[0]} b=${SOURCES[1]} "output=a-b"')
# source wavefield
Flow('dw','wav',
     'pad beg2=200 end2=200 | put o2=%(ox)g d2=%(dx)g | transp' % par)

Result('wo',fdmod.wgrey('pclip=95',par))
Result('ww',fdmod.wgrey('pclip=95',par))

Result('do','transp |' + fdmod.dgrey('pclip=99',par))
Result('dd','transp |' + fdmod.dgrey('pclip=99',par))
Result('dx','transp |' + fdmod.dgrey('pclip=99',par))
Result('dw','transp |' + fdmod.dgrey('pclip=100',par))

Result('alld','dx dw',
       '''
       cat axis=3 space=n ${SOURCES[1:2]} |
       transp |
       grey gainpanel=e pclip=100
       ''')

# ------------------------------------------------------------
# RT migration

fdmod.rtm('ii','dw','dx','vm','rm','rr','rr','qq','free=y dens=n',1000,par)
Flow('kk','ii','put n1=%(nz)d o1=%(oz)g d1=%(dz)g n2=%(nx)d o2=%(ox)g d2=%(dx)g' % par)
Result('kk',fdmod.cgrey('pclip=99',par))

fdmod.rtm('io','dw','dx','vm','rm','rr','rr','qq','free=y dens=y',1000,par)
Flow('ko','io','put n1=%(nz)d o1=%(oz)g d1=%(dz)g n2=%(nx)d o2=%(ox)g d2=%(dx)g' % par)
Result('ko',fdmod.cgrey('pclip=99',par))

Flow('wr','ii_tdr',
     '''
     put
     n1=%d o1=%g d1=%g label1=z unit1=km
     n2=%d o2=%g d2=%g label2=x unit2=km
     n3=%d o3=%g d3=%g label3=t unit3=ks
     ''' % (par['nz'],par['oz'],par['dz'],
            par['nx'],par['ox'],par['dx'],
            par['nt'],par['ot'],par['dt']))

Result('wr','window j3=%(jsnap)d |' % par + fdmod.wgrey('pclip=95',par))

End()
