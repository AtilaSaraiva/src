from rsfproj import *

# x gathers with correct and incorrect velocity

for v in (0,2):
    gath = 'SRC%dx.hh' % v

    Fetch(gath,'sigsbee')

    # transpose to z,h,x

    tran = 'gath%d' % v

    Flow(tran,gath,'transp plane=15 | window')

    symes = 'symes%d' % v

    Flow(symes,tran,'math output="(input*x2)^2" | stack norm=n') 
    Result(symes,'grey color=j allpos=y title="Differential Semblance" ')

    # select a gather

    tran0 = tran + '0'
    
    Flow(tran0,tran,'window n3=1 f3=100')

    symes0 = symes + '0'

    Flow(symes0,tran0,'math output="(input*x2)^2" | stack norm=n')
    Result(symes0,'grey color=j allpos=y title="Differential Semblance" ')

    # convert to angle

    atran = 'a' + tran0
    
    Flow(atran,tran0,
         '''
         slant adj=y p0=-2 np=400 dp=0.01 verb=y |
         tan2ang a0=0 na=150 da=0.45
         ''')

    Result(atran,
           '''
           grey title="Angle Gather"
           label1=Depth unit1=ft
           label2=Angle unit2=degrees
           ''')

    # compute semblance

    clean = 'c' + atran
    Flow(clean,atran,
         '''
         window n2=128 |
         transp | dwt | cut f1=4 |
         dwt adj=y inv=y | transp
         ''')

    for c in ('','c'):
        num = c+'num%d' % v
        den = c+'den%d' % v
        sem = c+'sem%d' % v
        
        Flow(num,c+atran,'stack norm=n | math output="input*input"')
        Flow(den,c+atran,'math output="input*input" | stack norm=n')
        Flow(sem,[num,den],'divn den=${SOURCES[1]} rect1=20')
        
        Result(sem,[sem,c+atran],
               '''
               scale axis=1 | spray axis=2 n=%d d=0.45 o=0 |
               add ${SOURCES[1]} scale=500,1 |
               grey color=j allpos=y title=Semblance
               ''' % (150,128)[c=='c'])

    # convert all gathers to angles

    atran = 'a' + tran

    Flow(atran,tran,
         '''
         slant adj=y p0=-2 np=400 dp=0.01 verb=y |
         tan2ang a0=0 na=150 da=0.45
         ''')

    # compute semblance

    num = 'anum%d' % v
    den = 'aden%d' % v
    sem = 'asem%d' % v

    stack = 'stack%d' % v

    Flow(stack,atran,'stack')
    Result(stack,'grey title="Angle Stack" ')

    Flow(num,atran,'scale axis=3 | stack norm=n | math output="input*input"')
    Flow(den,atran,'scale axis=3 | math output="input*input" | stack norm=n')
    Flow(sem,[num,den],'divn den=${SOURCES[1]} rect1=20 rect2=20')

    Result(sem,[sem,stack],
           '''
           add ${SOURCES[1]} scale=6,1 |
           grey color=j allpos=y title=Semblance
           ''')

    tstack = 't'+stack

    Result(tstack,atran,
           '''
           thr thr=10 |
           stack | grey title="Thresholded Angle Stack"
           ''')

    zero = 'zero%d' % v

    Result(zero,tran,'window n2=1 min2=0 | grey title="Zero Offset" ')


End()
