## 
 # TEST wave-equation time-shift imaging condition
 # - flat and dipping reflectors
 # - incidence/reflection at various angles
 ##

from rsfproj import *
from math    import *
import spmig

# ------------------------------------------------------------
# plotting functions
def igrey(custom):
    return '''
    grey labelrot=n title="" pclip=100 grid=n gridcol=5
    label1="z(m)" wantaxis=y 
    %s
    ''' % custom
def igraph(custom,par):
    return '''
    graph labelrot=n title="" yreverse=y
    label2="z(m)" label1="x(m)"
    min2=%f max2=%f grid=y wantaxis=y
    %s
    ''' % (par['zmin'],par['zmax'],custom)

def p2x2(plot,p0,p1,p2,p3,ys,xs,yc,xc):
    j0 = '_' + p0
    j1 = '_' + p1
    j2 = '_' + p2
    j3 = '_' + p3

    Plot(j0,p0,'Overlay',vppen='yscale=%f xscale=%f ycenter=%f xcenter=0 '% (ys,xs,yc)   )
    Plot(j1,p1,'Overlay',vppen='yscale=%f xscale=%f ycenter=%f xcenter=%f'% (ys,xs,yc,xc))
    Plot(j2,p2,'Overlay',vppen='yscale=%f xscale=%f ycenter=0  xcenter=0 '% (ys,xs)      )
    Plot(j3,p3,'Overlay',vppen='yscale=%f xscale=%f ycenter=0  xcenter=%f'% (ys,xs,   xc))

    Plot  (plot,[j0,j1,j2,j3],'Overlay')
    Result(plot,[j0,j1,j2,j3],'Overlay')

SCREEN = " screenratio=2 screenht=22 labelsz=12"
# ------------------------------------------------------------
# modeling/migration parameters

par = {
    'ny':2000,'oy':-10000,'dy':20,                            # for kirmod
    'nh':500, 'oh':-5000, 'dh':20,                            # for kirmod
#    
    'nx':500, 'ox':0,     'dx':20, 'xcig':5000, 'zcig':2000,  # for WEM
    'nz':400, 'oz':0,     'dz':10,                            # for WEM
    'ns':50,  'os':0,     'ds':20, 'js':1, 'fs':0,
    'nt':2000,'ot':0,     'dt':0.01,
    'nht':200,'oht':-1.0, 'dht':0.01,
    'nhx':100,
    'vel':2000, 'vel2':2000,
    'nw':100,'ow':1,'jw':3, 'frq':6,
    #
    'verb':'y','eps':0.01,'nrmax':5,'dtmax':0.00005,
    'tmx':16,'tmy':0,'pmx':0,'pmy':0,
    'misc':'',
    #    
    'ns':1,'os':1500,'ds':500,
    'REF':0
    }
par['zmin']=par['oz']
par['zmax']=par['oz'] + par['nz'] * par['dz']

# ------------------------------------------------------------

# wavelet
Flow('wave',None,
     '''
     spike nsp=1 mag=1 k1=1
     n1=%(nt)d d1=%(dt)g o1=0 |
     put label1=t label2=x label3=y 
     ''' % par )   

# velocity
Flow('vel',None,
     '''
     spike nsp=1 mag=%(vel)g
     n1=%(nz)d o1=%(oz)g d1=%(dz)g
     n2=%(nx)d o2=%(ox)g d2=%(dx)g |
     put label1=z label2=x
     ''' % par)

# slowness
Flow('slo','vel',
     'math output=1/input | transp | spray axis=2 n=1')

# ------------------------------------------------------------
# CIG to slant-stack
def tcig2ssk():
    return '''
    slant adj=y p0=0 np=500 dp=10 |
    put label2=v
    '''
def hcig2ssk():
    return '''
    slant adj=y p0=-2.0 np=500 dp=0.01 |
    put label2=tan
    '''
# slant-stack to angle
def tssk2ang():
    return '''
    tshift cos=y a0=0 na=150 da=0.45
    velocity=${SOURCES[1]} |
    put label2=ang
    '''
def hssk2ang():
    return '''
    tan2ang a0=0 na=150 da=0.45 |
    put label2=ang
    '''
# ------------------------------------------------------------

Flow('von',  'vel', 'window n2=1 min2=%g'% par['xcig']) # velocity

for DIP in ('00','15','30'):
#for DIP in (['00']):

    par['REF'] = par['zcig'] - par['xcig'] * tan(pi*float(DIP) /180.)
    par['SOU'] = par['xcig']

    # ------------------------------------------------------------ 
    # modeling (Kirchhoff)
    # ------------------------------------------------------------
    dip = 'dip'+str(DIP)
    ref = 'ref'+str(DIP)
    kir = 'kir'+str(DIP)

    # reflector
    Flow(dip,None,'spike n1=%d o1=%g d1=%g mag=%g'
         % (par['ny'],par['oy'],par['dy'],
            tan(pi*float(DIP)/180.)))
    Flow(ref,dip,'math output="%(REF)g+x1*input"' % par)
    Result(ref,ref, igraph('title=%s',par) %DIP)

    # kirchhoff data
    Flow(kir,[ref,dip],
         '''
         kirmod vel=%(vel)g vel2=%(vel2)g dip=${SOURCES[1]}
         nt=%(nt)d  dt=%(dt)g freq=%(frq)f
         nh=%(nh)d  h0=%(oh)g  dh=%(dh)g
         ns=%(ns)d  s0=%(SOU)g ds=%(ds)g |
         put label1=t label2=h
         ''' % par)
    Result(kir,kir,'window max1=8 | ' + igrey('pclip=99 title=%s') %DIP)

    # ------------------------------------------------------------
    # source/receiver wavefields
    # ------------------------------------------------------------
    sou = 'sou'+str(DIP)
    rec = 'rec'+str(DIP)    
    spmig.wflds(sou,rec,'wave',kir,par)
    Result(rec,rec,'window | real | transp | ' + igrey('pclip=100'))

    # imaging type
    # x = space-shift
    # t =  time-shift
    for TYP in ('t','x'):

        imt = 'imt'+str(DIP)
        cit = 'cit'+str(DIP)

        imh = 'imx'+str(DIP)
        cih = 'cix'+str(DIP)

        # ------------------------------------------------------------
        # migration
        # ------------------------------------------------------------
        if(TYP=='t'):
            par['misc']='itype=t nht=%(nht)d oht=%(oht)g dht=%(dht)g jcx=1' % par
            spmig.imagePW(imt,cit,'slo',sou,rec,par)
        else:
            par['misc']='itype=x nhx=%(nhx)d hsym=y                  jcx=1' % par
            spmig.imagePW(imh,cih,'slo',sou,rec,par)

        Result(imt,'window | transp | ' + igrey('title=%s') %DIP)
        Result(imh,'window | transp | ' + igrey('title=%s') %DIP)

        # ------------------------------------------------------------
        # angle decomposition
        # ------------------------------------------------------------
        ct = 'ct'+str(DIP)
        Flow(ct,cit,'window n1=1 min1=%(xcig)g' % par)
        Plot(ct,igrey('pclip=99 label2="\F10 t\F3 (s)"'))
        
        st = 'st'+str(DIP)
        Flow(st,ct,        tcig2ssk())
        Plot(st,igrey('pclip=100 label2="\F10 n \F3  (m/s)"'))
        
        at = 'at'+str(DIP)
        Flow(at,[st,'von'],tssk2ang())
        Plot(at,igrey('pclip=100 label2="\F10 q\F3 (\^o\_)"'))

            
        # slant stack (in z-t plane)
        #            slt = 'slt'+str(DIP)
        #            Flow(slt,cig, 'window n1=1 min1=%(xcig)g |'% par + tcig2ssk())
        #            Result(slt,slt,'window |'+igrey('title=%s' %DIP))
        #            Plot  (slt,slt,'window |'+igrey('title=%s' %DIP))
        
        # angle mapping (w/o structural dip)
        #            vaz = 'vaz'+str(DIP)
        #            ant = 'ant'+str(DIP)            
        #            Flow(vaz,'vel','window n2=1 min2=%(xcig)g' % par)
        #            Flow(ant,[slt,vaz],'window |' + tssk2ang())
        #            Result(ant,ant,'window |'+igrey('title=%s' %DIP))
        #            Plot  (ant,ant,'window |'+igrey('title=%s' %DIP))
        
        # dip field
        #            dif = 'dif'+str(DIP)
        #            ANG = pi*float(DIP)/180.
        #            Flow(dif,img,'window | transp | math output=%g' % ANG)
        
        # angle mapping (w/  structural dip)
        #            vbz = 'vbz'+str(DIP)
        #            bnz = 'bnz'+str(DIP)
        #            Flow(vbz,[dif,'vel'],'math v=${SOURCES[1]} output="v/cos(input)"')
        #            Flow(bnz,[slt,vbz], tssk2ang())
        #            Result(bnz,bnz,'window |'+igrey('title=%s' %DIP))
        ch = 'ch'+str(DIP)
        Flow(ch,cih,'window n1=1 min1=%(xcig)g' % par)
        Plot(ch,igrey('pclip=99 label2="h(m)"'))
        
        sh = 'sh'+str(DIP)
        Flow(sh,ch,        hcig2ssk())
        Plot(sh,igrey('pclip=100 label2="tan \F10 q\F3 "'))
        
        ah = 'ah'+str(DIP)
        Flow(ah,sh,        hssk2ang())
        Plot(ah,igrey('pclip=100 label2="\F10 q\F3 (\^o\_)"'))
        
        csa = 'csa'+str(DIP)
        p2x2(csa,ct,at,ch,ah,0.5,0.5,-10,-12)
        
        # slant stack (in z-h plane)
#            anh = 'anh'+str(DIP)
#            Flow(anh,cig,'window n1=1 min1=%(xcig)g |' % par + hcig2ssk())
#            Result(anh,anh,'window |'+igrey('title=%s' %DIP))

# composite: time-shift CIG, slant-stack, angle-gather
#Result('comp',['cit00','slt00','ant00'],'SideBySideAniso')

# ------------------------------------------------------------
# FLAT REFLECTOR
# compare incidence at various angles

for j in range(5000,8000,1000):

    # time-shift
    ct = 'ci' + str(j)
    Flow(ct,'cit00','window n1=1 min1=%g' % j)
    Plot(ct,igrey('pclip=100 label2="\F10 t\F3 (s)"'))

    st = 'st' + str(j)
    Flow(st,ct,        tcig2ssk())
    Plot(st,igrey('pclip=100 label2="\F10 n \F3  (m/s)"'))

    at = 'at' + str(j)
    Flow(at,[st,'von'],tssk2ang())
    Plot(at,igrey('pclip=100 label2="\F10 q\F3 (\^o\_)"'))

    # space-shift
    ch = 'hi' + str(j)
    Flow(ch,'cix00','window n1=1 min1=%g' % j)
    Plot(ch,igrey('pclip=100 label2="h(m)"'))

    sh = 'sh' + str(j)
    Flow(sh,ch,        hcig2ssk())
    Plot(sh,igrey('pclip=100 label2="tan \F10 q\F3 "'))

    ah = 'ah' + str(j)
    Flow(ah,sh,        hssk2ang())
    Plot(ah,igrey('pclip=100 label2="\F10 q\F3 (\^o\_)"'))

    # composite (CIG,slant-stack,angle)
    csa = 'csa' + str(j)
    p2x2(csa,ct,at,ch,ah,0.5,0.5,-10,-12)

Result('csa','csa5000 csa6000 csa7000','Movie')

# ------------------------------------------------------------

Flow('stkt','cit00','window | transp | stack')
Plot('stkt',igrey('pclip=100 label2="\F10 t\F3 (s)"'))

Flow('slst','stkt',        tcig2ssk())
Flow('angt',['slst','von'],tssk2ang())
Plot('angt',igrey('pclip=100 label2="\F10 q\F3 (\^o\_)"'))


Flow('stkh','cix00','window | transp | stack')
Plot('stkh',igrey('pclip=100 label2="h(m)"'))

Flow('slsh','stkh',        hcig2ssk())
Flow('angh','slsh',        hssk2ang())
Plot('angh',igrey('pclip=100 label2="\F10 q\F3 (\^o\_)"'))

p2x2('stka','stkt','angt','stkh','angh',0.5,0.5,-10,-12)

# ------------------------------------------------------------
End()
