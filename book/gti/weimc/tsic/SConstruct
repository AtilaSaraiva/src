## 
 # TEST wave-equation time-shift imaging condition
 # - flat and dipping reflectors
 # - incidence/reflection at various angles
 ##

from rsfproj import *
import math
import spmig

# ------------------------------------------------------------
# plotting functions
def igrey(custom):
    return '''
    grey labelrot=n title="" pclip=100 grid=y gridcol=5 %s
    ''' % custom
def igraph(custom,par):
    return '''
    graph labelrot=n title="" yreverse=y
    label2=z label1=x
    min2=%f max2=%f grid=y %s
    ''' % (par['zmin'],par['zmax'],custom)

# ------------------------------------------------------------
# modeling/migration parameters

par = {
    'ny':2000,'oy':-10000,'dy':20,                            # for kirmod
    'nh':500, 'oh':-5000, 'dh':20,                            # for kirmod
    'nx':500, 'ox':0,     'dx':20, 'xcig':5000, 'zcig':2000,  # for WEM
    'nz':400, 'oz':0,     'dz':10,                            # for WEM
    'ns':50,  'os':0,     'ds':20, 'js':1, 'fs':0,
    'nt':2000,'ot':0,     'dt':0.01,
    'nht':100,'oht':-0.5, 'dht':0.01,
    'nhx':50,
    'vel':2000, 'vel2':2000,
    'nw':300,'ow':1,'jw':1, 'frq':6,
    'nw':100,'jw':3,
    #
    'verb':'y','eps':0.01,'nrmax':5,'dtmax':0.00005,
    'tmx':16,'tmy':0,'pmx':0,'pmy':0,
    'misc':'',
    #    
    'SOU':2000,'ns':1,'os':1500,'ds':500,
    'REF':0
    }
par['zmin']=par['oz']
par['zmax']=par['oz'] + par['nz'] * par['dz']

# ------------------------------------------------------------

# wavelet
Flow('wave',None,
     '''
     spike nsp=1 mag=1 k1=1
     n1=%(nt)d d1=%(dt)g o1=0 |
     put label1=t label2=x label3=y 
     ''' % par )   

# velocity
Flow('vel',None,
     '''
     spike nsp=1 mag=%(vel)g
     n1=%(nz)d o1=%(oz)g d1=%(dz)g
     n2=%(nx)d o2=%(ox)g d2=%(dx)g |
     put label1=z label2=x
     ''' % par)

# slowness
Flow('slo','vel',
     'math output=1/input | transp | spray axis=2 n=1')


# ------------------------------------------------------------
# time-shift CIG to slant-stack CIG 
def cig2ssk():
    return '''
    slant adj=y p0=0 np=400 dp=10 |
    put label2=v
    '''
# slant-stack CIG to angle CIG
def ssk2ang():
    return '''
    tshift a0=-2.0 na=400 da=0.01
    velocity=${SOURCES[1]} |
    put label2=tan
    '''
# ------------------------------------------------------------

#for DIP in ('00','15','30'):
for DIP in (['00']):

    par['REF'] = par['zcig'] - par['xcig'] * math.tan(math.pi*    float(DIP) /180.)
    par['SOU'] = par['xcig'] + par['zcig'] * math.tan(math.pi*(00-float(DIP))/180.)

    # ------------------------------------------------------------ 
    # modeling (Kirchhoff)
    # ------------------------------------------------------------
    dip = 'dip'+str(DIP)
    ref = 'ref'+str(DIP)
    kir = 'kir'+str(DIP)

    # reflector
    Flow(dip,None,'spike n1=%d o1=%g d1=%g mag=%g'
         % (par['ny'],par['oy'],par['dy'],
            math.tan(math.pi*float(DIP)/180.)))
    Flow(ref,dip,'math output="%(REF)g+x1*input"' % par)
    Result(ref,ref, igraph('title=%s',par) %DIP)

    # kirchhoff data
    Flow(kir,[ref,dip],
         '''
         kirmod vel=%(vel)g vel2=%(vel2)g dip=${SOURCES[1]}
         nt=%(nt)d  dt=%(dt)g freq=%(frq)f
         nh=%(nh)d  h0=%(oh)g  dh=%(dh)g
         ns=%(ns)d  s0=%(SOU)g ds=%(ds)g |
         put label1=t label2=h
         ''' % par)
    Result(kir,kir,'window max1=8 | ' + igrey('pclip=99 title=%s') %DIP)

    # mask
    msk = 'msk'+str(DIP)
    Flow(msk,None,
         '''
         spike nsp=2 mag=1,1
         n1=%(nt)d o1=%(ot)g d1=%(dt)g
         n2=%(nh)d o2=%(oh)g d2=%(dh)g k2=150,350 l2=150,350
         ''' % par)

    dat = 'dat'+str(DIP)
    Flow(dat,[kir,msk],'math k=${SOURCES[0]} m=${SOURCES[1]} output="k*m"', stdin=0)
    Result(dat,dat,'window max1=8 | ' + igrey('pclip=100 title=%s') %DIP)
    
    # ------------------------------------------------------------
    # source/receiver wavefields
    # ------------------------------------------------------------
    sou = 'sou'+str(DIP)
    rec = 'rec'+str(DIP)    
    spmig.wflds(sou,rec,'wave',kir,par)
    Result(rec,rec,'window | real | transp | ' + igrey('pclip=100'))

    # imaging type
    # x = space-shift
    # t =  time-shift
    for TYP in ('t','x'):

        # ------------------------------------------------------------
        # migration
        # ------------------------------------------------------------
        if(TYP=='t'):
            img = 'imt'+str(DIP)
            cig = 'cit'+str(DIP)
            par['misc']='itype=t nht=%(nht)d oht=%(oht)g dht=%(dht)g jcx=50' % par
        else:
            img = 'imx'+str(DIP)
            cig = 'cix'+str(DIP)
            par['misc']='itype=x nhx=%(nhx)d hsym=y                  jcx=50' % par

        spmig.imagePW(img,cig,'slo',sou,rec,par)
        Result(img,img,'window | transp | '                + igrey('title=%s          ') %DIP)
        Result(cig,cig,'window n1=1 min1=%(xcig)g |' % par + igrey('title=%s pclip=100') %DIP)
        Plot  (cig,cig,'window n1=1 min1=%(xcig)g |' % par + igrey('title=%s pclip=100') %DIP)

        # ------------------------------------------------------------
        # angle decomposition
        # ------------------------------------------------------------
        if(TYP=='t'):
            # slant stack (in z-t plane)
            slt = 'slt'+str(DIP)
            Flow(slt,cig, 'window n1=1 min1=%(xcig)g |'% par + cig2ssk())
            Result(slt,slt,'window |'+igrey('title=%s' %DIP))
            Plot  (slt,slt,'window |'+igrey('title=%s' %DIP))

            # angle mapping (w/o structural dip)
            vaz = 'vaz'+str(DIP)
            ant = 'ant'+str(DIP)            
            Flow(vaz,'vel','window n2=1 min2=%(xcig)g' % par)
            Flow(ant,[slt,vaz],'window |' + ssk2ang())
            Result(ant,ant,'window |'+igrey('title=%s' %DIP))
            Plot  (ant,ant,'window |'+igrey('title=%s' %DIP))

            # dip field
            dif = 'dif'+str(DIP)
            ANG = math.pi*float(DIP)/180.
            Flow(dif,img,'window | transp | math output=%g' % ANG)
            
            # angle mapping (w/  structural dip)
            vbz = 'vbz'+str(DIP)
            bnz = 'bnz'+str(DIP)
            Flow(vbz,[dif,'vel'],'math v=${SOURCES[1]} output="v/cos(input)"')
            Flow(bnz,[slt,vbz], ssk2ang())
            Result(bnz,bnz,'window |'+igrey('title=%s' %DIP))

        else:
            # slant stack (in z-h plane)
            anh = 'anh'+str(DIP)
            Flow(anh,cig,
                 '''
                 window n1=1 min1=%(xcig)g |
                 slant adj=y p0=-2.0 np=400 dp=0.01 |
                 put label2=tan
                 ''' % par)
            Result(anh,anh,'window |'+igrey('title=%s' %DIP))

# composite: time-shift CIG, slant-stack, angle-gather
Result('comp',['cit00','slt00','ant00'],'SideBySideAniso')


# ------------------------------------------------------------
# compare positive, normal, negative incidence
#Flow('cin','cit00', 'window n1=1 min1=4000 | stretch rule=l v0=0.001 delay=0'% par)
#Flow('cio','cit00', 'window n1=1 min1=5000 | stretch rule=l v0=0.001 delay=0'% par)
#Flow('cip','cit00', 'window n1=1 min1=6000 | stretch rule=l v0=0.001 delay=0'% par)
Flow('cin','cit00', 'window n1=1 min1=4000'% par) # negative incidence
Flow('cio','cit00', 'window n1=1 min1=5000'% par) # normal   incidence
Flow('cip','cit00', 'window n1=1 min1=6000'% par) # positive incidence

Flow('hin','cix00', 'window n1=1 min1=4000'% par) # negative incidence
Flow('hio','cix00', 'window n1=1 min1=5000'% par) # normal   incidence
Flow('hip','cix00', 'window n1=1 min1=6000'% par) # positive incidence

Flow('von',  'vel', 'window n2=1 min2=5000'% par) # velocity

#< cio.rsf sfstretch rule=l v0=0.001 delay=0 | sfcat cio.rsf |  sfgrey | tube

for j in ('n','o','p'):
    c = 'ci' + j
    Plot(c,c,igrey('title=%s pclip=100' %j ))
    h = 'hi' + j
    Plot(h,h,igrey('title=%s pclip=100' %j ))
    
    s = 'st' + j
#    Flow(s,c, 'slant adj=y p0=-2000 np=400 dp=10 | put o2=0' )
    Flow(s,c, cig2ssk() )
    Plot(s,s,igrey('title=%s' %j ))

    a = 'an' + j
    Flow(a,[s,'von'], ssk2ang())
    Plot(a,a,igrey('title=%s' %j ))

    b = 'bn' + j
    Flow(b,h,'slant adj=y p0=-2.0 np=400 dp=0.01')
    Plot(b,b,igrey('title=%s' %j ))

    csa = 'csa' + j
    Plot(csa,[c,s,a,h,b],'SideBySideAniso')

Result('csa','csan csao csap','Movie')

# ------------------------------------------------------------
# test time-shift to angle transformation
for i in (['0','1','2','3','4','5','6']):

    vv = 500 + int(i) * 500
    kt = vv * par['dht'] / par['dz']
    
    tspk=''
    tspk+=str(int(200-50*kt))+','
    tspk+=str(int(200-25*kt))+','
    tspk+=str(int(200-00*kt))+','
    tspk+=str(int(200+25*kt))+','
    tspk+=str(int(200+50*kt))

    # cig (time shift)
    tcig = 'tcig'+ i
    Flow(tcig,None,
         '''
         spike nsp=5 mag=1,1,1,1,1
         n1=%d  o1=%g   d1=%g   k1=%s                  l1=%s
         n2=200 o2=-1.0 d2=0.01 k2=050,075,100,125,150 l2=050,075,100,125,150 |
         ricker1 frequency=0.008 |
         put label1=z label2=t
         ''' % (par['nz'],par['oz'],par['dz'],tspk,tspk) )

    Plot(tcig,tcig,igrey('pclip=100'))

    # slant-stack (velocity parameter)
    tsla = 'tsla' + i
    Flow(tsla,tcig,cig2ssk())
    Plot(tsla,tsla,igrey('pclip=99'))
    
    # angle transform
    tvel = 'tvel' + i
    Flow(tvel,'vel','window n2=1 min2=%(xcig)g' % par)
    tang = 'tang' + i
    Flow(tang,[tsla,tvel],ssk2ang())
    Plot(tang,tang,igrey('pclip=99'))

    ttest = 'ttest' + i
    Plot(ttest,[tcig,tsla,tang],'SideBySideAniso')

    # ------------------------------------------------------------

    kh = int(i) - 3

    hspk=''
    hspk+=str(int(200-50*kh))+','
    hspk+=str(int(200-25*kh))+','
    hspk+=str(int(200-00*kh))+','
    hspk+=str(int(200+25*kh))+','
    hspk+=str(int(200+50*kh))

    # cig (space shift)
    hcig = 'hcig'+ i
    Flow(hcig,None,
         '''
         spike nsp=5 mag=1,1,1,1,1
         n1=%d  o1=%g    d1=%g k1=%s                  l1=%s
         n2=200 o2=-2000 d2=20 k2=050,075,100,125,150 l2=050,075,100,125,150 |
         ricker1 frequency=0.008 |
         put label1=z label2=h
         ''' % (par['nz'],par['oz'],par['dz'],hspk,hspk) )
    Plot(hcig,hcig,igrey('pclip=100'))

    # slant-stack (velocity parameter)
    hang = 'hang' + i
    Flow(hang,hcig,'slant adj=y p0=-2.0 np=400 dp=0.01 | put label2=tan')
    Plot(hang,hang,igrey('pclip=99'))

    htest = 'htest' + i
    Plot(htest,[hcig,hang],'SideBySideAniso')
    
Result('ttest','ttest0 ttest1 ttest2 ttest3 ttest4 ttest5 ttest6','Movie')
Result('htest','htest0 htest1 htest2 htest3 htest4 htest5 htest6','Movie')
# ------------------------------------------------------------

#
Flow('tspk',None,
     '''
     spike nsp=3 mag=-1,0,+1
     n1=%(nz)d  o1=%(oz)g  d1=%(dz)g k1=100,200,300 l1=100,200,300
     n2=400     o2=0       d2=10     k2=100,200,300 l2=100,200,300 |
     ricker1 frequency=0.008 |
     put label1=z label2=v
     ''' % par)
Plot('tspk','tspk','window |'+igrey('pclip=100'))

Flow('ttan',['tspk','von'],ssk2ang())
Plot('ttan','ttan','window |'+igrey('pclip=100'))

Result('tcod',['tspk','ttan'],'SideBySideAniso')

# ------------------------------------------------------------

End()
