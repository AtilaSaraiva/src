from rsfproj import *
import spmig,pplot
sys.path.append('.')
import itest

# ------------------------------------------------------------
par = {
    'xcig':3000,
    'zcig':1200,
#    
    'nx':2000,  'ox':0,    'dx':5,
    'nh':2001,  'oh':-1000,'dh':5,
    'ns':1,     'os':5000, 'ds':40, 'js':1,'fs':0,
    'nz':401,   'oz':0,    'dz':5,
    'nt':1000,  'ot':0,    'dt':0.008,
    'nw':80,    'ow':1,             'jw':3,
    'vel':2000,
    'vel2':2000,
    #
    'verb':'y','eps':0.01,'nrmax':1,'dtmax':0.00005,
    'tmx':16,'tmy':0,'pmx':0,'pmy':0
    }

par['jcx']=par['xcig']/par['dx']

par['zmin']=par['oz']
par['zmax']=par['oz']+(par['nz']-1)*par['dz']

# ------------------------------------------------------------

def igrey2(custom):
    return '''
    grey labelrot=n title="" pclip=100 labelsz=5 %s
    ''' % custom
def igrey3(custom,custom2):
    return '''
    byte gainpanel=all %s |
    grey3 labelrot=n title="" flat=y labelsz=5
          point2=0.5 point1=0.8 screenratio=2.25
          label1="z (m)"
          label2="h\s80 \_x\^\s100 (m)"
          label3="h\s80 \_z\^\s100 (m)"
          frame1=80 frame2=0 frame3=0 %s
    ''' % (custom,custom2)

DLABEL = ' label1="t (s)" label2="h (m)" '
XLABEL = ' label1="z (m)" label2="x (m)" '
OLABEL = ' label1="z (m)" label2="h (m)" '
ALABEL = ' label1="z (m)" label2="\F10 q\F3 (\^o\_)" grid1=y'

SCR = ' screenratio=0.5 screenht=7'
# ------------------------------------------------------------

# build velocity models
itest.model(par)

for wtype in ('p','c'):                  # wave type
    for DIP in (['00','45']):            # reflector dip
        for ANG in (['30']):             # incidence angle
            exp = wtype + DIP + ANG      # experiment label

            # generate data
            dat = 'dat-' + exp
            itest.data(wtype,dat,DIP,ANG,par)
            Result(dat,'window max1=5 |'
                   + igrey2('pclip=100'+SCR+DLABEL))

            for imco in ('x','z','h','m'):   # imaging condition
                img = 'img-' + exp + imco
                cig = 'cig-' + exp + imco
                off = 'off-' + exp + imco
                ang = 'ang-' + exp + imco

                # migrate
                itest.migrate(wtype,imco,dat,img,cig,par)
                Result(img,'window n4=1 min4=0 min1=%g max1=%g | transp |'
                       % (par['xcig']-2000,par['xcig']+2000)
                       + igrey2(''+SCR+XLABEL))
        
                if(imco != 'm'):
                    Flow(off,cig,'window n1=1 min1=%(xcig)g' % par)
                else:
                    Flow(off,cig,
                         '''
                         window squeeze=n n1=1 min1=%(xcig)g |
                         stack | transp | stack |
                         transp plane=12 |
                         transp plane=23 |
                         transp plane=34 |
                         window squeeze=n |
                         off2abs verb=y nh=40 |
                         transp 
                         ''' % par)

                    cub = 'cub-' + exp + imco
                    Result(cub,cig,
                           'window n1=1 min1=%g min3=%g max3=%g | '
                           % (par['xcig'],par['zcig']-400,par['zcig']+400)
                           + igrey3('',''))
                    
                Plot(off,'window min1=%(zmin)g max1=%(zmax)g |' % par
                     + igrey2('screenratio=4 screenht=10'+OLABEL))

                Flow(ang,off,
                     '''
                     radon adj=y p0=-3.0 np=401 dp=0.015 |
                     tan2ang a0=-50 na=201 da=0.50
                     ''')
                Plot(ang,'window min1=%(zmin)g max1=%(zmax)g |' % par
                     + igrey2('screenratio=1 screenht=10'+ALABEL))
                pplot.p1x2(cig,off,ang,1,1,-3.5)

            # END imco

        # END ang
        
    # END dip

# END wtype

End()
