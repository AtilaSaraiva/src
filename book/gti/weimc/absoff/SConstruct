from rsfproj import *
import spmig
sys.path.append('.')
import itest

# ------------------------------------------------------------
par = {
    'nx':1000,  'ox':0,    'dx':10,
    'nh':801,   'oh':-4000,'dh':10,
    'ns':1,     'os':5000, 'ds':40, 'js':1,'fs':0,
    'nz':250,   'oz':0,    'dz':10,
    'nt':1000,  'ot':0,    'dt':0.008,
    'nw':100,   'ow':1,'jw':3,
    'vel2':2000,
    #
    'verb':'y','eps':0.01,'nrmax':1,'dtmax':0.00005,
    'tmx':16,'tmy':0,'pmx':0,'pmy':0
    }
# ------------------------------------------------------------
#point2=0.5 point1=0.6

def igrey2(custom):
    return '''
    grey labelrot=n title="" pclip=100 labelsz=5 %s
    ''' % custom
def igrey3(custom,custom2):
    return '''
    transp plane=12 | transp plane=23 |
    byte gainpanel=all %s |
    grey3 labelrot=n title="" flat=n labelsz=5
          point2=0.6 point1=0.8
          label1="h\s80 \_x\^\s100 (m)"
          label2="h\s80 \_z\^\s100 (m)"
          label3="z (m)"
          frame1=50 frame2=50 frame3=40 labelsz=6 %s
    ''' % (custom,custom2)

DLABEL = ' label1="t (s)" label2="h (m)" '
XLABEL = ' label1="z (m)" label2="x (m)" '
OLABEL = ' label1="z (m)" label2="h (m)" grid=y '
ALABEL = ' label1="z (m)" label2="\F10 q\F3 (\^o\_)" grid=y'
#ALABEL = ' label1="depth (m)" label2="tan \F10 q\F3 " grid=y '


SCR = ' screenratio=0.5 screenht=7'
# ------------------------------------------------------------

# build velocity models
itest.model(par)

# generate data
for wtype in ('p'):
    for dip in ('00','15','30'):

        dat = wtype + 'dat' + dip
        itest.data(wtype,dat,int(dip),par)
        Result(dat,'window max1=5 |'
               + igrey2('pclip=100'+SCR+DLABEL))

        for imco in ('x','h','m'):

            img = wtype + 'img' + dip + imco
            cig = wtype + 'cig' + dip + imco
            itest.migrate(wtype,imco,dat,img,cig,par)
            Result(img,'window n4=1 min4=0 | transp |'
                   + igrey2('screenratio=0.25 screenht=3.5'+XLABEL))
        
            off = wtype + 'off' + dip + imco
            ang = wtype + 'ang' + dip + imco
            
            if(imco != 'm'):
                Flow(off,cig,'window n1=1 min1=%(os)g' % par)

                if(imco=='x'):
                    Result(off,igrey2('screenratio=2'+OLABEL))
                else:
                    Result(off,igrey2('screenratio=4'+OLABEL))
            else:
                cub = wtype + 'cub' + dip + imco
                Result(cub,cig,
                       'window n1=1 min1=%(os)g min3=1600 max3=2400 | ' % par +
                       igrey3('',''))
                
                Flow(off,cig,
                     '''
                     window squeeze=n n1=1 min1=%(os)g |
                     stack | transp | stack |
                     transp plane=12 |
                     transp plane=23 |
                     transp plane=34 |
                     window squeeze=n |
                     off2abs verb=y |
                     transp 
                     ''' % par)

            Flow(ang,off,
                 '''
                 slant adj=y p0=-1.5 np=201 dp=0.015 |
                 tan2ang a0=-45 na=201 da=0.45
                 ''')
            Result(ang,igrey2('screenratio=1'+ALABEL))

        # END imco

    # END dip

# END wtype


#Flow('coh','pcig30m',
#     '''
#     window squeeze=n n1=1 min1=5000 |
#     stack | transp | stack |
#     transp plane=12 |
#     transp plane=23 |
#     transp plane=34 |
#     /home/savap/RSF/user/savap/sfoff2abs verb=y |
#     transp 
#     ''')
#Result('coh',igrey2('screenratio=2'+OLABEL))
#Flow('coa',['coh'],
#     '''
#     slant adj=y p0=-1.5 np=201 dp=0.015 |
#     put label2=tan
#     ''' % par)
#
#
#Flow('off',None,
#     '''
#     spike nsp=1 mag=1
#     n1=100 o1=-500 d1=10 k1=71
#     n2=1   o2=0    d2=1
#     n3=100 o3=-500 d3=10 k3=71 |
#     put label1=hx label2=hy label3=hz
#     ''')
#Plot('off','window | grey pclip=100')
#Flow('abs','off',
#     '''
#     /home/savap/RSF/user/savap/sfoff2abs verb=y
#     ''')
#Plot('abs','graph')
#
#Result('offabs','off abs','SideBySideAniso')

End()
