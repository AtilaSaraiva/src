## 
 # 4D wavefield objects matching
 ##
from rsfproj import *

# ------------------------------------------------------------
par = {
    'nt':2000,   # no of time steps
    'dt':0.0005, #       time sampling
    'ot':0,      #       time origing
    'kt':50,     # wavelet delay
    #
    'ns':1,      # no of shots
    'os':2000,   #       shots origin
    'ds':20,     #       shots sampling
    #
    'nr':401,    # no of receivers
    'or':0,      #       receivers origin
    'dr':2.5,    #       receivers sampling
    #
    'ne':1,      # no of experiments
    'nm':4,      # no of models
    #
    'nx':401, 'ox':0, 'dx':2.5,
    'nz':301, 'oz':0, 'dz':2.5
    }
par['xmin']=par['ox']
par['xmax']=par['ox'] + (par['nx']-1) * par['dx']
par['zmin']=par['oz']
par['zmax']=par['oz'] + (par['nz']-1) * par['dz']
par['tmin']=par['ot']
par['tmax']=par['ot'] + (par['nt']-1) * par['dt']

# ------------------------------------------------------------

# ------------------------------------------------------------
# plotting functions

def igrey(custom,par):
    return '''
    grey labelrot=n wantaxis=y wanttitle=n wantscalebar=n
    title="" pclip=99 label1="z" unit1=m label2="x" unit2=m
    min1=%g max1=%g min2=%g max2=%g
    screenratio=0.75 screenht=10 %s
    ''' % (par['zmin'],par['zmax'],par['xmin'],par['xmax'],custom)

def wgrey(custom,par):
    return '''
    window min1=%g max1=%g min2=%g max2=%g |
    grey labelrot=n wantaxis=y wanttitle=y wantscalebar=n
    title="" pclip=99 label1="z" unit1=m label2="x" unit2=m
    screenratio=0.75 screenht=10 %s
    ''' % (par['zmin'],par['zmax'],par['xmin'],par['xmax'],custom)

def wtplot(wplot,ws,wr,par):
    _ws = "t_" + ws
    _wr = "t_" + wr

    Flow(_ws,ws,
         '''
         window j3=50 n3=20 min1=%(zmin)g max1=%(zmax)g min2=%(xmin)g max2=%(xmax)g f3=%(kt)d |
         put o3=0
         ''' % par)
    Flow(_wr,wr,
         '''
         window j3=50 n3=20 min1=%(zmin)g max1=%(zmax)g min2=%(xmin)g max2=%(xmax)g f3=%(kt)d |
         put o3=0
         ''' % par)
    Result(wplot,[_ws,_wr],
           '''
           cat ${SOURCES[1]} axis=2 space=n |
           grey pclip=97 gainpanel=a title="" screenratio=0.375 screenht=5 grid=y
           ''')
    
def wzplot(wplot,ws,wr,par):
    _ws = "z_" + ws
    _wr = "z_" + wr

    Flow(_ws,ws,
         '''
         window j1=40 min1=%(zmin)g max1=%(zmax)g min2=%(xmin)g max2=%(xmax)g f3=%(kt)d n3=1000 |
         put o3=0 |
         transp plane=13
         ''' % par)
    Flow(_wr,wr,
         '''
         window j1=40 min1=%(zmin)g max1=%(zmax)g min2=%(xmin)g max2=%(xmax)g f3=%(kt)d n3=1000 |
         put o3=0 |
         transp plane=13
         ''' % par)
    Result(wplot,[_ws,_wr],
           '''
           cat ${SOURCES[1]} axis=2 space=n |
           grey pclip=98 gainpanel=a title="" grid=y
           ''')


# ------------------------------------------------------------
# modeling function
def amodel(dat,wfl,wav,vel,den,sou,rec,custom):
    Flow([dat,wfl],[wav,vel,den,sou,rec],
         '''
         afmod
         verb=y abc=y free=n snap=y jsnap=1 %s
         nbz=100 tz=0.0035
         nbx=100 tx=0.0035
         vel=${SOURCES[1]}
         den=${SOURCES[2]}
         sou=${SOURCES[3]}
         rec=${SOURCES[4]}
         wfl=${TARGETS[1]}
         ''' % custom)
# ------------------------------------------------------------
# wavelet
Flow('wav',None,
         '''
         spike nsp=1 mag=1 n1=%(nt)d d1=%(dt)g o1=%(ot)g k1=%(kt)d |
         ricker1 frequency=50 |
         scale axis=123 |
         put label1=t label2=x label3=y unit1="s"
         ''' % par)    
Result('wav','wav','window n1=200 | graph title="" label1="t" label2=')

# ------------------------------------------------------------
# experiments

Flow('r_',None,'math n1=%(nr)d d1=%(dr)g o1=%(or)g output=0' % par)
Flow('s_',None,'math n1=1      d1=0      o1=0      output=0' % par)

# receivers
Flow('xr','r_','math output="x1"')
Flow('zr','r_','math output=0')
Flow('rr',['xr','zr'],
     '''
     cat axis=2 space=n
     ${SOURCES[0]} ${SOURCES[1]} | transp
     ''', stdin=0)

# sources
Flow('zs','s_','math output=0')
Flow('xs','s_','math output=500')
Flow('rs','s_','math output=1')
Flow('ss',['xs','zs','rs'],
     '''
     cat axis=2 space=n
     ${SOURCES[0]} ${SOURCES[1]} ${SOURCES[2]} | transp
     ''', stdin=0)
# ------------------------------------------------------------
# smooth background
Flow('vo',None,
     '''
     math n1=%(nz)d o1=%(oz)g d1=%(dz)g output="2000+0*x1" |
     spray axis=2 n=%(nx)d o=%(ox)g d=%(dx)g
     ''' % par)
Flow('ro',None,
     '''
     math n1=%(nz)d o1=%(oz)g d1=%(dz)g output="2000" |
     spray axis=2 n=%(nx)d o=%(ox)g d=%(dx)g
     ''' % par)

# rough perturbations
for jm in range(par['nm']):
    if(jm==0):
        par['vmag']='0.0'
        par['dmag']='0.1,-.1,0.0,0.0'
    if(jm==1):
        par['vmag']='0.0'
        par['dmag']='0.0,0.0,0.1,-.1'
    if(jm==2):
        par['vmag']='-0.60'
        par['dmag']='0.0,0.0,0.1,-.1'
    if(jm==3):
        par['vmag']='-0.0'
        par['dmag']='0.0,0.0,0.1,-.1'

    vx = 'vx' + str(jm)
    Flow(vx,None,
         '''
         spike nsp=1 mag=%(vmag)s
         n1=%(nz)d o1=%(oz)g d1=%(dz)g k1=021 l1=081 
         n2=%(nx)d o2=%(ox)g d2=%(dx)g k2=181 l2=221 |
         smooth rect1=20 rect2=20 repeat=5
         ''' % par)

    rx = 'rx' + str(jm)
    if(jm==3):
        Flow(rx,None,
             '''
             spike nsp=1 mag=1 n1=%(nz)d o1=%(oz)g d1=%(dz)g |
             noise range=0.1 |
             spray axis=2 n=%(nx)d o=%(ox)g d=%(dx)g
             ''' % par)
    else:
        Flow(rx,None,
             '''
             spike nsp=4 mag=%(dmag)s
             n1=%(nz)d o1=%(oz)g d1=%(dz)g k1=161,161,121,201 
             n2=%(nx)d o2=%(ox)g d2=%(dx)g k2=001,201,001,101 l2=200,401,301,401
             ''' % par)
        
# loop over models
for im in range(par['nm']):
    ve = 've' + str(im)
    vx = 'vx' + str(im)
    wv = 'wv' + str(im)
    dv = 'dv' + str(im)
    
    de = 'de' + str(im)
    rx = 'rx' + str(im)
    wr = 'wr' + str(im)
    dr = 'dr' + str(im)

    ww = 'ww' + str(im)
    dd = 'dd' + str(im)

    # combined smooth+rough
    Flow(ve,['vo',vx],'math c=${SOURCES[0]} r=${SOURCES[1]} output="c*(1+r)"')
    Flow(de,['ro',rx],'math c=${SOURCES[0]} r=${SOURCES[1]} output="c*(1+r)"')
    Plot(ve,igrey('allpos=y bias=1100 pclip=100',par))
    Plot(de,igrey('allpos=y bias=1700 pclip=100',par))
    model = 'model' + str(im)
    Result(model,[ve,de],'SideBySideIso')

    # modeling 
    amodel(dv,wv,'wav',ve,de,'ss','rr','free=n dens=n')
    amodel(dr,wr,'wav',ve,de,'ss','rr','free=n dens=y')

    Flow(ww,[wr,wv],'add scale=1,-1 ${SOURCES[1]}')
    Flow(dd,[dr,dv],'add scale=1,-1 ${SOURCES[1]}')

    # wavefield movies
    Result(wv,'window j3=50 |'+wgrey('gainpanel=a pclip=99',par))
    Result(wr,'window j3=50 |'+wgrey('gainpanel=a pclip=99',par))
    Result(ww,'window j3=50 |'+wgrey('gainpanel=a pclip=99',par))

    tmovie = 'tmovie' + str(im)
    wtplot(tmovie,wv,ww,par)

    zmovie = 'zmovie' + str(im)
    wzplot(zmovie,wv,ww,par)

    # image
    mm = 'mm' + str(im)

    m0 = mm + '_0'
    Flow(m0,wv,'add mode=p ${SOURCES[0]} | stack axis=3 norm=n')

    m1 = mm + '_1'
    Flow(m1,[wv,ww],'add mode=p ${SOURCES[1]} | stack axis=3 norm=n')

    eps = 0.01

    m2 = mm + '_2'
    Flow(m2,[wv,ww],
         '''
         math d=${SOURCES[0]} u=${SOURCES[1]} output="d*u/(d*d+%g)" |
         stack axis=3 norm=n
         ''' % eps)
    
    m3 = mm + '_3'
    Flow(m3,[m0,m1],
         'math du=${SOURCES[1]} output="du/(input+%g)" ' % eps)

    m4 = mm + '_4'
    Flow(m4,[ww,m0,m1],
         '''
         add mode=p ${SOURCES[0]} | stack axis=3 norm=n |
         math dd=${SOURCES[1]} du=${SOURCES[2]}
         output="du/sqrt(input*dd+%g)"
         ''' % eps)

    m5 = mm + '_5'
    Flow(m5,[m3,m0,m1],
         '''
         math dd=${SOURCES[1]} du=${SOURCES[2]} 
         output="abs(input)*du/(abs(input)*dd+%g)" |
         math dd=${SOURCES[1]} du=${SOURCES[2]} 
         output="abs(input)*du/(abs(input)*dd+%g)"
         ''' % (eps,eps))

    m6 = mm + '_6'
    Flow(m6,[m3,m0,m1],
         '''
         math dd=${SOURCES[1]} du=${SOURCES[2]} 
         output="input*input*du/(input*input*dd+%g)" |
         math dd=${SOURCES[1]} du=${SOURCES[2]} 
         output="input*input*du/(input*input*dd+%g)"
         ''' % (eps,eps))

    for ic in range(6):
        par['ic']=ic+1
        mi = '%s_%d' % (mm,ic+1)
        Plot(mi,igrey('pclip=99',par))
        Plot(mi+'g',mi,
             '''
             window min1=%(zmin)g max1=%(zmax)g min2=%(xmin)g max2=%(xmax)g|
             window n1=3 f1=119 j1=40 | transp |
             scale axis=123 |
             graph title=%(ic)d min2=-1 max2=+1
             ''' % par)
        Result(mi,[mi,mi+'g'],'SideBySideAniso')
        
# ------------------------------------------------------------

End()
