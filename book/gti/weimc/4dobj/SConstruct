## 
 # F-D modeling 
 ##
from rsfproj import *

# ------------------------------------------------------------
par = {
    'nt':1500,    # no of time steps
    'dt':0.0005,  #       time sampling
    'ot':0,       #       time origing
    'kt':100,     # wavelet delay
    #
    'ns':1,       # no of shots
    'os':2000,    #       shots origin
    'ds':20,      #       shots sampling
    #
    'nr':401,     # no of receivers
    'or':0,       #       receivers origin
    'dr':2.5,     #       receivers sampling
    #
    'ne':1,       # no of experiments
    'nm':1,       # no of models
    #
    'nx':401, 'ox':0, 'dx':2.5,
    'nz':201, 'oz':0, 'dz':2.5
    }
par['xmin']=par['ox']
par['xmax']=par['ox'] + (par['nx']-1) * par['dx']
par['zmin']=par['oz']
par['zmax']=par['oz'] + (par['nz']-1) * par['dz']
par['tmin']=par['ot']
par['tmax']=par['ot'] + (par['nt']-1) * par['dt']

# ------------------------------------------------------------

# ------------------------------------------------------------
# plotting functions

def igrey(custom,par):
    return '''
    grey labelrot=n wantaxis=y wanttitle=n wantscalebar=n
    title="" pclip=99 label1=z unit1=m label2="x" unit2=m %s
    min1=%g max1=%g min2=%g max2=%g
    screenratio=0.5 screenht=7 crowd=0.9
    ''' % (custom,par['zmin'],par['zmax'],par['xmin'],par['xmax'])

def dgrey(custom,par):
    return '''
    grey labelrot=n wantaxis=y wanttitle=n
    title="" pclip=99 label1=t unit1=s label2=x unit2=m %s
    min2=%g max2=%g
    screenratio=1.5 screenht=21 crowd=0.9
    ''' % (custom,par['xmin'],par['xmax'])

def pgraph(custom,par):
    return '''
    graph labelrot=n  %s
    yreverse=y symbolsz=4 wantaxis=n title=" " wantscalebar=n
    min1=%g max1=%g min2=%g max2=%g
    screenratio=0.5 screenht=7 crowd=0.9
    ''' % (custom,par['xmin'],par['xmax'],par['zmin'],par['zmax'])

def wgrey(custom,par):
    return '''
    window min1=%g max1=%g min2=%g max2=%g |
    grey labelrot=n wantaxis=y wanttitle=y wantscalebar=n
    title="" pclip=99 label1=z unit1=m label2=x unit2=m %s
    screenratio=0.5 screenht=7 crowd=0.9
    ''' % (par['zmin'],par['zmax'],par['xmin'],par['xmax'],custom)

# ------------------------------------------------------------
# modeling function
def lmodel(dat,wfl,lid,liw,wav,vel,sou,rec,ref,custom):
    Flow([dat,wfl,lid,liw],[wav,vel,sou,rec,ref],
         '''
         born2d
         verb=y abc=y free=n snap=y jsnap=100 %s
         nbz=100 tz=0.0035
         nbx=100 tx=0.0035
         vel=${SOURCES[1]}
         sou=${SOURCES[2]}
         rec=${SOURCES[3]}
         ref=${SOURCES[4]}
         wfl=${TARGETS[1]}
         lid=${TARGETS[2]}
         liw=${TARGETS[3]}
         ''' % custom)

def amodel(dat,wfl,wav,vel,sou,rec,custom):
    Flow([dat,wfl],[wav,vel,sou,rec],
         '''
         afdm2d
         verb=y abc=y free=n snap=y jsnap=10 %s
         nbz=100 tz=0.0035
         nbx=100 tx=0.0035
         vel=${SOURCES[1]}
         sou=${SOURCES[2]}
         rec=${SOURCES[3]}
         wfl=${TARGETS[1]}
         ''' % custom)
# ------------------------------------------------------------
# wavelet
Flow('wav',None,
         '''
         spike nsp=1 mag=1 n1=%(nt)d d1=%(dt)g o1=%(ot)g k1=%(kt)d |
         ricker1 frequency=50 |
         scale axis=123 |
         put label1=t label2=x label3=y 
         ''' % par)    
Result('wav','wav','window n1=200 | graph title="" label2=')

# ------------------------------------------------------------
# experiments

Flow('ro',None,'math n1=%(nr)d d1=%(dr)g o1=%(or)g output=0' % par)
Flow('so',None,'math n1=1      d1=0      o1=0      output=0' % par)

# receivers
Flow('zr','ro','math output="0" ')
Flow('xr','ro','math output="x1"')
Flow('rr',['xr','zr'],
     '''
     cat axis=2 space=n
     ${SOURCES[0]} ${SOURCES[1]} | transp
     ''', stdin=0)
Plot('rr','window n1=2 | dd type=complex | window j2=10 | '
     + pgraph('symbol=. plotcol=6',par))

# sources
Flow('zs','so','math output=0')
Flow('xs','so','math output=500')
Flow('rs','so','math output=1')
Flow('ss',['xs','zs','rs'],
     '''
     cat axis=2 space=n
     ${SOURCES[0]} ${SOURCES[1]} ${SOURCES[2]} | transp
     ''', stdin=0)
Plot('ss','window n1=2 | dd type=complex | window | '
     + pgraph('symbol=v plotcol=6',par))

# ------------------------------------------------------------
def wplot(wplot,wm,wo,wx,ww,par):
    _wm = "_" + wm
    _wo = "_" + wo
    _wx = "_" + wx
    _ww = "_" + ww

    Flow(_wm,wm,
         'window min1=%(zmin)g max1=%(zmax)g min2=%(xmin)g max2=%(xmax)g' % par)
    Flow(_wo,wo,
         'window min1=%(zmin)g max1=%(zmax)g min2=%(xmin)g max2=%(xmax)g' % par)
    Flow(_wx,wx,
         'window min1=%(zmin)g max1=%(zmax)g min2=%(xmin)g max2=%(xmax)g' % par)        
    Flow(_ww,ww,
         'window min1=%(zmin)g max1=%(zmax)g min2=%(xmin)g max2=%(xmax)g' % par)

    _wowx = "_" + wo + wx
    Flow(_wowx,[_wo,_wx],'cat  ${SOURCES[0]} ${SOURCES[1]} axis=1 space=n',stdin=0)

    _wwwm = "_" + ww + wm
    Flow(_wwwm,[_ww,_wm],'cat  ${SOURCES[0]} ${SOURCES[1]} axis=1 space=n',stdin=0)

    Result(wplot,[_wowx,_wwwm],
           '''
           cat ${SOURCES[0]} ${SOURCES[1]} axis=2 space=n |
           grey pclip=95 gainpanel=a title="" screenratio=0.5 screenht=7 wantaxis=n
           grid=y g1num=1000
           ''', stdin=0)
# ------------------------------------------------------------
# smooth background
Flow('mo',None,
     '''
     math n1=%(nz)d o1=%(oz)g d1=%(dz)g output="1500+1.0*x1" |
     spray axis=2 n=%(nx)d o=%(ox)g d=%(dx)g
     ''' % par)

# rough perturbations
for jm in range(3):
    if(jm==0): par['mag']=0.01
    if(jm==1): par['mag']=0.05
    if(jm==2): par['mag']=0.40

    mx = 'mx' + str(jm)
    Flow(mx,None,
         '''
         spike nsp=2 mag=%(mag)g,-%(mag)g
         n1=%(nz)d o1=%(oz)g d1=%(dz)g k1=50,100 l1=51,101 |
         spray axis=2 n=%(nx)d o=%(ox)g d=%(dx)g
         ''' % par)

for jm in range(3,5):
    if(jm==3): par['mag']=0.05
    if(jm==4): par['mag']=0.20

    mx = 'mx' + str(jm)
    Flow(mx,None,
         '''
         spike nsp=1 mag=0 n1=%(nz)d o1=%(oz)g d1=%(dz)g |
         noise range=%(mag)g |
         spray axis=2 n=%(nx)d o=%(ox)g d=%(dx)g
         ''' % par)
    
for jm in range(5,7):
    if(jm==5): par['mag']=0.05
    if(jm==6): par['mag']=0.40

    mx = 'mx' + str(jm)
    Flow(mx,None,
         '''
         spike nsp=2 mag=%(mag)g,-%(mag)g
         n1=%(nz)d o1=%(oz)g d1=%(dz)g k1=50,100 l1=99,149 |
         spray axis=2 n=%(nx)d o=%(ox)g d=%(dx)g         
         ''' % par)
    
for jm in range(7,9):
    if(jm==7): par['mag']=0.05
    if(jm==8): par['mag']=0.40

    mx = 'mx' + str(jm)
    Flow(mx,None,
         '''
         spike nsp=1 mag=0
         n1=%(nz)d o1=%(oz)g d1=%(dz)g
         n2=%(nx)d o2=%(ox)g d2=%(dx)g  |
         noise range=%(mag)g
         ''' % par)

for jm in range(9,10):
    if(jm==9): par['mag']=0.5

    mx = 'mx' + str(jm)
    Flow(mx,None,
         '''
         spike nsp=2 mag=%(mag)g,%(mag)g
         n1=%(nz)d o1=%(oz)g d1=%(dz)g k1=080,100 l1=083,103
         n2=%(nx)d o2=%(ox)g d2=%(dx)g k2=190,210 l2=193,213
         ''' % par)

# loop over models
for im in range(par['nm']):
    mm = 'mm' + str(im)
    mo = 'mo' + str(im)
    mx = 'mx' + str(im)
    mw = 'mw' + str(im)
    me = 'me' + str(im)

    # combined smooth+rough
    Flow(mm,['mo', mx ],'math c=${SOURCES[0]} r=${SOURCES[1]} output="c*(1+r)"')
    Flow(me,[ mm, 'mo'],'add scale=+1,-1 ${SOURCES[1]}')

    wm = 'wm' + str(im)
    wo = 'wo' + str(im)
    wx = 'wx' + str(im)
    ww = 'ww' + str(im)
    we = 'we' + str(im)

    dm = 'dm' + str(im)
    do = 'do' + str(im)
    dx = 'dx' + str(im)
    dw = 'dw' + str(im)
    de = 'de' + str(im)

    # modeling
    amodel(dm,wm,      'wav', mm ,'ss','rr',   'free=n')
    lmodel(do,wo,dx,wx,'wav','mo','ss','rr',mx,'free=n')

    # wavefield
    Flow(ww,[wo,wx],'add scale=+1,-1 ${SOURCES[1]}')
    Flow(we,[wm,ww],'add scale=+1,-1 ${SOURCES[1]}')

    # data
    Flow(dw,[do,dx],'add scale=+1,-1 ${SOURCES[1]}')
    Flow(de,[dm,dw],'add scale=+1,-1 ${SOURCES[1]}')

    # plot model
    mcomp = 'mcomp' + str(im)
    mbar  = 'mbar'  + str(im)
    Flow([mcomp,mbar],[mm,'mo'],
         '''
         cat axis=3 space=n ${SOURCES[0:2]} |
         byte bar=${TARGETS[1]} gainpanel=all pclip=95 bias=1500
         ''', stdin=0)
    Plot(mm,[mcomp,mbar],'window n3=1 f3=0 |' + igrey('bar=${SOURCES[1]} color=j',par))
    Plot(mo,[mcomp,mbar],'window n3=1 f3=1 |' + igrey('bar=${SOURCES[1]} color=j',par))
    Plot(me ,igrey('pclip=100',par))
    Result(mcomp,[mm,mo,me],'SideBySideIso')

    # plot wavefield
    wmovie = 'wmovie' + str(im)
    wplot(wmovie,wm,wo,wx,ww,par)

    wcomp = 'wcomp' + str(im)
    wbar  = 'wbar'  + str(im)
    Flow(wm+'f',wm,'window n3=1 f3=6')
    Flow(ww+'f',ww,'window n3=1 f3=6')
    Flow(we+'f',we,'window n3=1 f3=6')
    Flow([wcomp,wbar],[wm+'f',ww+'f',we+'f'],
         '''
         cat axis=3 space=n ${SOURCES[0:3]} |
         byte bar=${TARGETS[1]} gainpanel=all pclip=95
         ''', stdin=0)
    Plot(wm,[wcomp,wbar],'window n3=1 f3=0 |' + igrey('bar=${SOURCES[1]}',par))
    Plot(ww,[wcomp,wbar],'window n3=1 f3=1 |' + igrey('bar=${SOURCES[1]}',par))
    Plot(we,[wcomp,wbar],'window n3=1 f3=2 |' + igrey('bar=${SOURCES[1]}',par))
    Result(wcomp,[wm,ww,we],'SideBySideIso')

    # plot data
    dcomp = 'dcomp' + str(im)
    dbar  = 'dbar'  + str(im)
    Flow([dcomp,dbar],[dm,dw,de],
         '''
         cat axis=3 space=n ${SOURCES[0:3]} |
         byte bar=${TARGETS[1]} gainpanel=all pclip=95
         ''', stdin=0)
    Plot(dm,[dcomp,dbar],'window n3=1 f3=0 | transp |' + dgrey('bar=${SOURCES[1]}',par))
    Plot(dw,[dcomp,dbar],'window n3=1 f3=1 | transp |' + dgrey('bar=${SOURCES[1]}',par))
    Plot(de,[dcomp,dbar],'window n3=1 f3=2 | transp |' + dgrey('bar=${SOURCES[1]}',par))
    Result(dcomp,[dm,dw,de],'SideBySideIso')
# ------------------------------------------------------------

End()
