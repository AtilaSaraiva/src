from rsfproj import *
import math

# Velocity model
################

dx=0.02
dz=0.01

nx=1024
nz=601

Flow('mod',None,
     '''
     math n1=%d n2=5 o2=1 d2=1 o1=0 d1=%g
     output=x2
     ''' % (nx,dx))
Flow('mod2','mod',
     'transp | pad beg1=1 | remap1 n1=%d d1=%g | math output="1.5+0.3*x1" ' % (nz,dz))
Plot('mod2',
     '''
     grey color=j allpos=y title=Model scalebar=y
     barlabel=Velocity barunit=km/s min1=0 max1=6
     label1=Depth unit1=km label2=Lateral unit2=km
     barreverse=y pclip=100 
     ''')

Plot('mod1','mod',
     '''
     graph yreverse=y pad=n min2=0 max2=6 
     plotcol=0 plotfat=20 wantaxis=n wanttitle=n scalebar=y
     ''')
Plot('mod0','mod',
     '''
     graph yreverse=y pad=n min2=0 max2=6 
     plotcol=7 plotfat=5 wantaxis=n wanttitle=n scalebar=y
     ''')
Result('mod','mod2 mod1 mod0','Overlay')


# Generating data
#################

Flow('dat','mod',
     '''
     kirmod nt=2001 dt=0.004 freq=10
     ns=2 s0=8 ds=4
     nh=401 h0=-10 dh=0.05
     vel=1.5 gradz=0.3 type=v |
     tpow tpow=1 |
     put
     label1=Time unit1=s
     label2=Offset unit2=km
     label3=Shot unit3=km
     ''')

Plot('dat1','dat','window n3=1 f3=0 | grey title="Shot 1"')
Plot('dat2','dat','window n3=1 f3=1 | grey title="Shot 2"')
Result('dat','dat1 dat2','SideBySideAniso')

# Wave-equation migration
#########################

# Waveform
Flow('wav',None,'spike n1=2001 d1=0.004 k1=1 | fft1 | window max1=30')

# Velocity to slowness
Flow('slo','mod2','transp | spray axis=2 n=1 d=%g | math output=1/input' % dx)

# Source and receiver wavefield at the surface
Flow('rwfl swfl','dat wav',
     '''
     fft1 | window max1=30 |
     spray axis=3 n=1 o=0 d=1 |
     spray axis=5 n=1 o=0 d=1 |
     srsyn nx=%d dx=%g ox=0 wav=${SOURCES[1]} swf=swf.rsf |
     transp plane=12 |
     transp plane=23 | stack axis=4 norm=n > ${TARGETS[0]} &&
     transp plane=12 < swf.rsf |
     transp plane=23 | stack axis=4 norm=n > ${TARGETS[1]} &&
     rm swf.rsf
     ''' % (nx,dx),stdout=-1)

# Migrate and create common-image gathers
Flow('image cigs','swfl rwfl slo',
     '''
     srmig2 slo=${SOURCES[2]} rwf=${SOURCES[1]} cig=${TARGETS[1]}
     itype=x nhz=25 hsym=y jcz=1 readwrite=y verb=y 
     ''')

def implot(title):
    return '''
    window | transp |
    grey label1=Depth unit1=km label2=Lateral unit2=km title="%s"
    ''' % title

Plot('image',implot('Image'))

# Snell filtering
#################

# Smoothing horizontally

slow = 0.30303 # minimum slowness
freq = 2*math.pi*0.12207 # minimum frequency
omega = 1/(16*slow*freq)

Flow('image2','image','smooth rect1=%d repeat=3' % int(omega/dx))
Plot('image2',implot('Smoothed Image'))

# Weighting vertically

Flow('stack','cigs',
     '''
     window |
     math output="input*exp(-(x3/%g)^2)" |
     stack axis=3 norm=n
     ''' % (4.*omega))

Plot('stack',implot('Weighted Image'))

# Smooth horizontally and weight vertically

Flow('stack2','stack','smooth rect1=%d repeat=3' % int(omega/dx))
Plot('stack2',implot('Smoothed and Weighted Image'))

Result('image','image stack image2 stack2','TwoRows')

# Velocity model
################

Flow('smod',None,
     '''
     math n1=%d n2=5 o2=1 d2=1 o1=0 d1=%g
     output="x2+0.15*sin(x1)"
     ''' % (nx,dx))
Plot('smod1','smod',
     '''
     graph yreverse=y pad=n min2=0 max2=6 
     plotcol=0 plotfat=20 wantaxis=n wanttitle=n scalebar=y
     ''')
Plot('smod0','smod',
     '''
     graph yreverse=y pad=n min2=0 max2=6 
     plotcol=7 plotfat=5 wantaxis=n wanttitle=n scalebar=y
     ''')
Result('smod','mod2 smod1 smod0','Overlay')

# Generating data
#################

# dip
Flow('sdip','smod','math output="0.15*cos(x1)" ')

Flow('sdat','smod sdip',
     '''
     kirmod nt=2001 dt=0.004 freq=10
     ns=2 s0=8 ds=4 dip=${SOURCES[1]}
     nh=401 h0=-10 dh=0.05
     vel=1.5 gradz=0.3 type=v |
     tpow tpow=1 |
     put
     label1=Time unit1=s
     label2=Offset unit2=km
     label3=Shot unit3=km
     ''')

Plot('sdat1','sdat','window n3=1 f3=0 | grey title="Shot 1"')
Plot('sdat2','sdat','window n3=1 f3=1 | grey title="Shot 2"')
Result('sdat','sdat1 sdat2','SideBySideAniso')


# Wave-equation migration
#########################

# Source and receiver wavefield at the surface
Flow('srwfl sswfl','sdat wav',
     '''
     fft1 | window max1=30 |
     spray axis=3 n=1 o=0 d=1 |
     spray axis=5 n=1 o=0 d=1 |
     srsyn nx=%d dx=%g ox=0 wav=${SOURCES[1]} swf=swf.rsf |
     transp plane=12 |
     transp plane=23 | stack axis=4 norm=n > ${TARGETS[0]} &&
     transp plane=12 < swf.rsf |
     transp plane=23 | stack axis=4 norm=n > ${TARGETS[1]} &&
     rm swf.rsf
     ''' % (nx,dx),stdout=-1)

# Migrate and create common-image gathers

Flow('simage scigs','sswfl srwfl slo',
     '''
     srmig2 slo=${SOURCES[2]} rwf=${SOURCES[1]} cig=${TARGETS[1]}
     itype=x nhz=25 hsym=y jcz=1 readwrite=y verb=y 
     ''')

Plot('simage',implot('Image'))


# Snell filtering
#################

# Smoothing along the reflector

# dip field
Flow('dip','sdip','window n2=1 | scale dscale=%g | spray axis=1 n=%d d=%g o=0' % (dx/dz,nz,dz))

# seislet transform
Flow('seis','simage dip','window | transp | seislet dip=${SOURCES[1]} adj=y inv=y type=l')

Result('seis','grey title="Seislet Transform" ')

Flow('simage2','seis dip','cut f2=32 | seislet dip=${SOURCES[1]} adj=n type=l | transp')
Plot('simage2',implot('Smoothed Image'))

#Result('simage','simage simage2','SideBySideIso')

# Weighting perpendicular to the reflector

Flow('sstack','scigs',
     '''
     window |
     math output="input*exp(-((x3)/%g)^2)" |
     stack axis=3 norm=n
     ''' % (4.*omega))

Plot('sstack',implot('Weighted Image'))

# Smooth horizontally and weight vertically

Flow('seis2','sstack dip','window | transp | seislet dip=${SOURCES[1]} adj=y inv=y type=l')

Result('seis2','grey title="Seislet Transform After Weighted" ')

Flow('sstack2','seis2 dip','cut f2=32 | seislet dip=${SOURCES[1]} adj=n type=l | transp')

Plot('sstack2',implot('Smoothed and Weighted Image'))

Result('simage','simage sstack simage2 sstack2','TwoRows')


End()
