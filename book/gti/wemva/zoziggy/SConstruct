from rsfproj import *
import spmig,zomig,pplot

par = {
    'nx':500,'ox':10925,'dx':150,
    'nx':500,
    'nt':1500,'ot':0,    'dt':0.008,'kt':1,'ft':0,
    'nz':1057,'oz':6100, 'dz':25,
#    'nz':800,
    'ns':1,'fs':0,'js':1,
#
    'nw':1,  'ow':5,'jw':1,
    'nw':220,'ow':3,'jw':1,
#    'nw':360,'ow':1,'jw':1,
#
    'verb':'y','eps':0.01,'nrmax':3,'dtmax':0.00005,
    'tmx':16,'tmy':0,'pmx':0,'pmy':0
    }
def igrey(custom):
    return '''
    grey  labelrot=n wantaxis=y wanttitle=y title=""
    pclip=100
    label1=z label2=x
    %s 
    ''' % (custom)    
# ------------------------------------------------------------
# from SGY to RSF
# ------------------------------------------------------------
data = 'sigsbee2a_nfs.sgy'
velo = 'sigsbee2a_migvel.sgy'

Fetch(data,'sigsbee')
Fetch(velo,'sigsbee')

Flow('zdata tzdata ./dhead ./bdhead',data,
     '''
     segyread
     tape=$SOURCE
     tfile=${TARGETS[1]}
     hfile=${TARGETS[2]}
     bfile=${TARGETS[3]}
     ''',stdin=0)
Flow('zvelo tzvelo ./vhead ./bvhead',velo,
     '''
     segyread
     tape=$SOURCE
     tfile=${TARGETS[1]}
     hfile=${TARGETS[2]}
     bfile=${TARGETS[3]}
     ''',stdin=0)
# ------------------------------------------------------------

# ------------------------------------------------------------
# VELOCITY
# ------------------------------------------------------------
# migration slowness
Flow('velo','zvelo',
     'put d1=25 o2=10025 d2=37.5 label1=z label2=x')
Flow('velopad','velo',
     '''
     window n1=1 f1=1200 |
     spray axis=1 n=100 o=0 d=25
     ''')
Flow('slo','velo velopad',
     '''
     cat axis=1 space=n ${SOURCES[1]} |
     window |
     math "output=1/input" |
     transp |
     spray axis=2 n=1 o=0 d=1 |
     put label2=y |
     window squeeze=n      f3=244 n3=%(nz)d
     ''' % par)

# datuming slowness
Flow('sdt','velo velopad',
     '''
     cat axis=1 space=n ${SOURCES[1]} |
     window |
     math "output=1/input" |
     transp |
     spray axis=2 n=1 o=0 d=1 |
     put label2=y |
     window squeeze=n n3=2 j3=244
     ''')

# ------------------------------------------------------------
# SHOTS
# ------------------------------------------------------------
# create sraw(t,o,s): o=full offset
Flow('ss','tzdata','dd type=float | headermath output="10925+fldr*150" | window')
Flow('oo','tzdata','dd type=float | headermath output="offset"         | window')
Flow('si','ss','math output=input/150')
Flow('oi','oo','math output=input/75')
Flow('os','oi si','cat axis=2 space=n ${SOURCES[1]} | transp | dd type=int')
Flow('sraw','zdata os',
     '''
     intbin head=${SOURCES[1]} xkey=0 ykey=1
     ''')
Flow('shot','sraw',
     '''
     put d2=75 d3=150 o3=10925 label1=t label2=o label3=s |
     mutter half=false t0=1.0 v0=6000
     ''')

# ------------------------------------------------------------
# WAVELET
# ------------------------------------------------------------
Flow('wave',None,
     '''
     spike nsp=1 mag=1 k1=%(kt)d
     n1=%(nt)d d1=%(dt)g o1=%(ot)g
         ''' % par )    
#Result('wave','wave','graph')
# ------------------------------------------------------------

# ------------------------------------------------------------
# DELTA SLOWNESS
# ------------------------------------------------------------

Flow('dsl',None,
     '''
     spike nsp=1 mag=0.00005
     n1=%(nx)d d1=%(dx)g o1=%(ox)g k1=050 l1=300
     n2=1      d2=1      o2=0
     n3=%(nz)d d3=%(dz)g o3=%(oz)g k3=450 l3=650 |
     smooth rect1=25 rect3=100 |
     rtoc |
     put label1=x label2=y label3=z
     ''' % par )
#  k1=070 l1=080
#  k3=150 l3=200 |

# ------------------------------------------------------------


# ------------------------------------------------------------
# ZERO-OFFSET
# ------------------------------------------------------------
# data
Flow('zoff','shot',
     '''
     window n2=1 n3=%(nx)d |
     bandpass flo=3 fhi=16 |
     put label1=t label2=x
     ''' % par)
Result('zoff','zoff',igrey('title="zoff" pclip=99'))

# wavefields
zomig.wflds('doo','zoff',par)
zomig.Adttwo('ddo','doo','sdt',par)  # datuming in water
zomig.Awftwo('woo','ddo','slo',par)

# migration
zomig.image('imgZ','slo','ddo',par)
Result('imgZ','imgZ','window | transp |' + igrey('title="image" pclip=99'))

# ------------------------------------------------------------
zomig.s2i('dsl' ,'dimZ','woo','slo',par) # forward WEMVA
zomig.i2s('dimZ','bslZ','woo','slo',par) # adjoint WEMVA
# ------------------------------------------------------------

Plot('dsl' ,'dsl' ,'window | real | transp |'+ igrey('title="dsl" color=F'))

Plot('dimZ','dimZ','window | real | transp |'+ igrey('title="dim" pclip=99'))
Plot('imgZ','imgZ','window |        transp |'+ igrey('title="img" pclip=99'))
Plot('bslZ','bslZ','window | real | transp |'+ igrey('title="bsl" color=F pclip=99'))

pplot.p2x2('scatZ','imgZ','dsl','dimZ','bslZ',0.5,0.55,-10,-12)
# ------------------------------------------------------------


# ------------------------------------------------------------
# SHOT-RECORD
# ------------------------------------------------------------
# data
Flow('sone','shot','window n3=1 min3=40000 | put label1=t')
Result('sone','sone',igrey('title="sone" pclip=99'))

# wavefields
spmig.wflds('dos','dor','wave','sone',par)
spmig.datum('dds','ddr','sdt','dos','dor',par)
zomig.Cwfone('wos','dos','slo',par) # source
zomig.Awfone('wor','dor','slo',par) # receiver

# migration
spmig.imagePW('imgS','cig','slo','dds','ddr',par)
Result('imgS','imgS','window | transp |' + igrey('title="image" pclip=99'))

# ------------------------------------------------------------
spmig.s2i('dsl' ,'dimS','wos','wor','slo',par) # forward WEMVA
spmig.i2s('dimS','bslS','wos','wor','slo',par) # adjoint WEMVA
# ------------------------------------------------------------

Plot('dimS','dimS','window | real | transp |'+ igrey('title="dim" pclip=99'))
Plot('imgS','imgS','window |        transp |'+ igrey('title="img" pclip=99'))
Plot('bslS','bslS','window | real | transp |'+ igrey('title="bsl" color=F pclip=99'))
pplot.p2x2('scatS','imgS','dsl','dimS','bslS',0.5,0.55,-10,-12)
# ------------------------------------------------------------


End()
