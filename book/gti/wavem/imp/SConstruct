from rsfproj import *

mpar = {
    'nz':120, 'dz':1, 'oz':0,
    'nx':256, 'dx':1, 'ox':0, 'kx':180, 'ks':139, 'kr': 219, 
    'ny':1  , 'dy':1, 'oy':0,
    'nh':100, 'dh':1, 'oh':0, 'kh':41,
    'nt':129, 'dt':1, 'ot':0, 'kt':100, 'ct':99,
#
    'SSR':'sstep2 readwrite=y verb=y       eps=0.1   nt=32 nr=5 dt=0.016',
    'ZOM':' zomig readwrite=y verb=y inv=n eps=0.1  tmx=32 nr=5 dt=0.016 pmx=32 pmy=0',
    'CAZ':' camig readwrite=y verb=y inv=n eps=0.1  tmx=32 nr=5 dt=0.016 pmx=32 pmy=0 phx=0',
    'DSR':'  dsr2 readwrite=y verb=y       eps=0.1   nt=32 nr=5 dt=0.016 npad=32',
    'CAP':' camig readwrite=y verb=y inv=n eps=0.1  tmx=32 nr=5 dt=0.016 pmx=32 pmy=0 phx=32'
    }

# ------------------------------------------------------------
# DATA
# ------------------------------------------------------------
# zero-offset
Flow('impulsz',None,
     '''
     spike nsp=1
        n1=%(nt)d d1=%(dt)g k1=%(kt)d
        n2=%(nx)d d2=%(dx)g k2=%(kx)d |
     bandpass flo=0.05 fhi=0.2 | transp |
     bandpass          fhi=0.5 | transp |
     fft1       | window squeeze=n | transp |
     spray axis=2 n=%(ny)d |
     window squeeze=n n3=3 f3=10 |
     put label1=x label2=y label3=w
     ''' % mpar )
#Flow('impuls',None,
#     '''
#     spike nsp=1
#        n1=%(nt)d d1=%(dt)g k1=%(kt)d
#        n2=%(nx)d d2=%(dx)g 
#     bandpass flo=0.05 fhi=0.2 | transp |
#     bandpass          fhi=0.5 | transp |
#     fft1       | window squeeze=n | transp |
#     spray axis=2 n=%(ny)d |
#     window squeeze=n n3=3 f3=20
#     ''' % mpar )

# 2-D prestack
Flow('impulsp',None,
     '''
     spike nsp=1
        n1=%(nt)d d1=%(dt)g k1=%(kt)d
        n3=%(nh)d d3=%(dh)g k3=%(kh)d
        n2=%(nx)d d2=%(dx)g k2=%(kx)d |
     bandpass flo=0.05 fhi=0.2 |
     transp          | bandpass fhi=0.5 | transp |
     transp plane=13 | bandpass fhi=0.5 | transp plane=13 |
     fft1 | transp plane=13 |
     window squeeze=n n3=3 f3=10 |
     put label1=h label2=x label3=w
     ''' % mpar )
#Flow('impuls2',None,
#     '''
#     spike nsp=1
#        n1=%(nt)d d1=%(dt)g k1=%(kt)d
#        n3=%(nh)d d3=%(dh)g k3=1
#        n2=%(nx)d d2=%(dx)g k2=64 l2=192 |
#     bandpass flo=0.05 fhi=0.2 |
#     transp          | bandpass fhi=0.5 | transp |
#     transp plane=13 | bandpass fhi=0.5 | transp plane=13 |
#     fft1 | transp plane=13 |
#     window squeeze=n n3=1 f3=20
#     ''' % mpar )

# ------------------------------------------------------------
# for SSTEP2
Flow('dssr','impulsz','window squeeze=n')
# for ZOMIG
Flow('dzom','impulsz','window squeeze=n')
# for DSR2
Flow('ddsr','impulsp','window squeeze=n')
# for CAMIG
Flow('dcaz','impulsz','         spray axis=2 n=1 | put label2=y')
Flow('dcap','impulsp','transp | spray axis=2 n=1 | put label2=y')
# ------------------------------------------------------------

# ------------------------------------------------------------
# MODELS
# ------------------------------------------------------------
Flow('const',None,
     '''
     spike nsp=1 mag=0.5
        n1=%(nx)d d1=%(dx)g
        n2=%(ny)d d2=%(dy)g
        n3=%(nz)d d3=%(dz)g |
     put label1=x label2=y label3=z
     ''' % mpar )
Flow('wall',None,
     '''
     spike nsp=2 mag=1,0.5
        n1=%(nx)d d1=%(dx)g k1=1,151 l1=150,%(nx)d
        n2=%(ny)d d2=%(dy)g
        n3=%(nz)d d3=%(dz)g
     ''' % mpar )
Flow('brick',None,
     '''
     spike nsp=2 mag=0.5,0.5
        n1=%(nx)d d1=%(dx)g k1=1,121 l1=%(nx)d,%(nx)d
        n2=%(ny)d d2=%(dy)g
        n3=%(nz)d d3=%(dz)g k3=1,080 l3=%(nz)d,%(nz)d
     ''' % mpar )

Flow('noise','const',
     '''
     spike nsp=1 mag=200
        n1=%(nx)d d1=%(dx)g k1=80
        n2=%(ny)d d2=%(dy)g
        n3=%(nz)d d3=%(dz)g k3=100 |
     add $SOURCE
     ''' % mpar , stdin=0)
Flow('vofz' ,'const','math output="1/(1+0.027*x3)" ')
Flow('vofx' ,'const','math output="1/(1+0.007*x1)" ')
Flow('vofx2','const','math output="1/(1+0.006*x1*(1+0.0006*x1))" ')
Flow('vofx3','const','math output="0.625*sqrt(1-0.003*x1)" ')

def gauss(r=25,a=1,c1=64,c2=149):
    return '''
    math output="input+%g*exp(-((x3-%g)^2+(x1-%g)^2)/(%g^2))"
    ''' % (a,c1,c2,r)

Flow('pgauss','const',gauss(c1=33,a=0.5))
Flow('mgauss','const',gauss(c1=33,a=-0.25))

# ------------------------------------------------------------
# IMAGE
# ------------------------------------------------------------
def tcont(c0): return 'contour nc=1 c0=%d plotcol=2 plotfat=3 wanttitle=n wantaxis=n' % (c0)

for mod in (
    'const',
#    'wall',
#    'brick',
#    'noise',
#    'vofz',
#    'vofx','vofx2','vofx3',
#    'pgauss','mgauss'
            ):

# ------------------------------------------------------------
    tssr = mod + '-tssr'
    tdsr = mod + '-tdsr'
    trec = mod + '-tsou'
    tsou = mod + '-trec'

    Flow(tsou,mod,
         '''
         add mode=p $SOURCE |
         window | transp | eikonal yshot=%(ks)d vel=n
         ''' % mpar)
    Flow(trec,mod,
         '''
         add mode=p $SOURCE |
         window | transp | eikonal yshot=%(kr)d vel=n
         ''' % mpar)
    Plot(tssr,mod,
         '''
         add mode=p $SOURCE | scale dscale=4 |
         window | transp | eikonal yshot=%(kx)d vel=n |
         ''' % mpar
         + tcont(mpar['ct']))
    Plot(tdsr,[tsou,trec],'add ${SOURCES[1]} |'
         + tcont(mpar['ct']))
# ------------------------------------------------------------
    issr = mod + '-issr'
    izom = mod + '-izom'
    icaz = mod + '-icaz'
    idsr = mod + '-idsr'
    icap = mod + '-icap'
    
    Flow(issr,['dssr',mod],'%(SSR)s slowness=${SOURCES[1]}' % mpar)
    Flow(izom,['dzom',mod],'%(ZOM)s slo=${SOURCES[1]}' % mpar)
    Flow(icaz,['dcaz',mod],'%(CAZ)s slo=${SOURCES[1]}' % mpar)
    Flow(idsr,['ddsr',mod],'%(DSR)s slowness=${SOURCES[1]}' % mpar)
    Flow(icap,['dcap',mod],'%(CAP)s slo=${SOURCES[1]}' % mpar)

    Plot(issr,'window      | transp | grey pclip=99 title="SSR %s"' % mod)
    Plot(izom,'window      | transp | grey pclip=99 title="ZOM %s"' % mod)
    Plot(icaz,'window      | transp | grey pclip=99 title="CAZ %s"' % mod)
    Plot(idsr,'window n1=1 | transp | grey pclip=99 title="DSR %s"' % mod)
    Plot(icap,'window n3=1 | transp | grey pclip=99 title="CAP %s"' % mod)

    Result(issr,[issr,tssr],'Overlay') # zero offset: sstep2
    Result(izom,[izom,tssr],'Overlay') # zero offset: zomig
    Result(icaz,[icaz,tssr],'Overlay') # zero offset: camig
    Result(idsr,[idsr,tdsr],'Overlay') # prestack:    dsr2
    Result(icap,[icap,tdsr],'Overlay') # prestack:    camig
# ------------------------------------------------------------

End()
