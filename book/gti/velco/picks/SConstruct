from rsfproj import *

for case in Split('fmg stk2 slp npk'):
    dat = 'elf-%s.rsf' % case
    Fetch(dat,'masha')
    Flow(case,dat,'dd form=native')

dt = 0.004
dx = 13.3333

Flow('slp2','slp','scale dscale=%g' % (dt/dx))

Flow('picks cmp ydip hdip','npk slp2',
     '''
     pgen dip=${SOURCES[1]} 
     cmp=${TARGETS[1]} ydip=${TARGETS[2]} hdip=${TARGETS[3]}
     ''')

Flow('energy','fmg',
     'envelope | scale axis=2 | math output="input*input" ')

clip = 0.0333

Result('energy',
       'grey color=IC clip=%g title="Reflection Energy" unit1=s' % clip)

Flow('mask','energy','mask min=%g' % clip)

Flow('pick','picks cmp ydip mask',
     '''
     cat ${SOURCES[1:3]} |
     transp plane=13 |
     headerwindow mask=${SOURCES[3]}
     ''') 

for case in ('+','-'):
    Flow('t'+case,'pick','headermath t=0 p=2 output="t%sp*%g" ' % (case,dx))
    Flow('x'+case,'pick','headermath x=1 output="x%s%g" ' % (case,dx))
    Flow('c'+case,['t'+case,'x'+case],'cmplx $SOURCES',stdin=0)

Plot('pick','c- c+',
     '''
     cat axis=1 ${SOURCES[1]} |
     graph plotcol=6 transp=y yreverse=y min1=0 min2=0 max1=3.196 max2=13320
     pad=n wanttitle=n wantaxis=n
     ''')

Plot('stk2','grey title="Zero Offset" unit1=s')

Result('stk2','stk2 pick','Overlay')

End()
