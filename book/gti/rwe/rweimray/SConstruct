from rsfproj import *
import math

# minimum and maximum velocity

vmin=1.5
vmax=2.5

smin=1/(vmax*vmax)
smax=1/(vmin*vmin)

# length in x and z
xmax=10.22
zmax=5.0

nz=501
nx=512

# gradent of velocity squared
g = (smax-smin)/xmax
g2 = 0.5*g

# Velocity model in (x,z)
Flow('vxz',None,
     '''
     math n1=%d n2=%d d1=%g d2=%g
     label1=Depth label2=Lateral unit1=km unit2=km
     label=Velocity unit=km/s
     output="1/sqrt(%g+%g*x2)"
     ''' % (nz,nx,zmax/(nz-1),xmax/(nx-1),smin,g))
Plot('vxz',
     '''
     grey color=j scalebar=y
     bias=%g allpos=y wanttitle=n screenht=%g screenwd=%g
     ''' % (vmin,zmax,xmax))

# square root factor
Flow('sq','vxz',
     '''
     math output="sqrt((%g+%g*x2)^2-(%g*x1)^2)"
     ''' % (smin,g,g))

Flow('x0','sq',
     '''
     math output="(2*%g*x2-%g*x1*x1)/(%g-%g*x2+input)"
     ''' % (smin,g2,smin,g))
Flow('t0','sq',
     '''
     math output="sqrt(2)*x1*(2*%g+2*%g*x2+input)/(3*sqrt(%g+%g*x2+input))"
     ''' % (smin,g,smin,g))


nc = 50

Plot('imray','x0',
     '''
     contour nc=%d c0=0 dc=%g scalebar=y wanttitle=n wantaxis=n
     screenht=%g screenwd=%g plotcol=7
     ''' % (nc,xmax/nc,zmax,xmax))

Result('imray','vxz imray','Overlay')

Plot('imfront','t0',
     '''
     contour nc=%d c0=0 dc=%g scalebar=y wanttitle=n wantaxis=n
     screenht=%g screenwd=%g plotcol=7
     ''' % (nc,zmax/(nc*vmin),zmax,xmax))

Result('imfront','vxz imfront','Overlay')
Result('imrayfront','vxz imray imfront','Overlay')

tmax = zmax/vmin
nt = nz

# Slowness squared in (x0,t0)
Flow('slow2',None,
     '''
     math n1=%d n2=%d d1=%g d2=%g
     label1=Time label2=Lateral unit1=s unit2=km
     output="%g+%g*x2"
     ''' % (nt,nx,tmax/(nt-1),xmax/(nx-1),smin,g))

# Intermediate factor
Flow('fact','slow2',
     '''
     math
     output="(-3*(%g)^4*x1 + sqrt(4*(%g)^6*input^3 + 9*(%g)^8*x1^2))^(1/3)"
     ''' % (g2,g2,g2))

# sigma factor
Flow('sigma','slow2 fact',
     '''
     math fact=${SOURCES[1]}
     output="-(fact/(2^(1/3)*(%g)^2)) + (2^(1/3)*input)/fact"
     ''' % g2)

Flow('x','sigma','math output="x2+%g*input*input" ' % (g2/2))

Flow('z','sigma slow2','math slow2=${SOURCES[1]} output="input*sqrt(slow2)" ')

Flow('zx','z x','cmplx ${SOURCES[:2]}',stdin=0)

# Velocity in (x0,t0)
Flow('vxt','x','math output="1/sqrt(%g+%g*input)" ' % (smin,g))

Result('vxt',
       '''
       grey color=j scalebar=y bias=%g allpos=y wanttitle=n
       barlabel=Velocity barunit=km/s
       ''' % vmin)

Plot('imray2','zx',
     '''
     window j2=20 |
     graph scalebar=y wanttitle=n wantaxis=n yreverse=y transp=y
     screenht=%g screenwd=%g plotcol=7 pad=n min1=0 min2=0 max1=%g max2=%g
     ''' % (zmax,xmax,zmax,xmax))

Result('imray2','vxz imray2','Overlay')

Plot('imfront2','zx',
     '''
     window j1=10 | transp |
     graph scalebar=y wanttitle=n wantaxis=n yreverse=y transp=y
     screenht=%g screenwd=%g plotcol=7 pad=n min1=0 min2=0 max1=%g max2=%g
     ''' % (zmax,xmax,zmax,xmax))

Result('imfront2','vxz imfront2','Overlay')

####################################
#
# . . Model data

freq = 2*math.pi/xmax
Amp = 1.5
Depth = 3
Flow('refl',None,
     '''
     math output="%g+%g*sin(%g*x1)" n1=%d d1=%g o1=%g
     ''' % (Depth,Amp,freq,5*nx,3*xmax/(5*nx-1),-0.9*xmax))

# Reflector dip
Flow('rdip','refl','math output="%g*%g*cos(%g*x1)" ' % (Amp,freq,freq))

Plot('refl',
     '''
     graph yreverse=y min2=0 max2=%g min1=0 max1=%g wanttitle=n wantaxis=n pad=n
     scalebar=n screenht=%g screenwd=%g plotcol=7 plotfat=5
     
     ''' % (zmax,xmax,zmax,xmax))

Result('refl','vxz refl','Overlay')

Flow('shot','refl rdip',
     '''
     kirmod nt=2048 dt=0.004 ns=41 s0=3 ds=0.1 nh=601 dh=0.01 h0=-3
     freq=15 type=s vel=%g gradx=%g refx=0 rgrad=${SOURCES[1]}
     ''' % (vmax,-g2*vmax*vmax*vmax))

shots = []
for shot in (0,10,20,30):
    fig = 'shot%d' % shot
    Plot(fig,'shot',
         '''
         window n3=1 f3=%d |
         grey title="Shot %g"
         ''' % (shot,4+shot*0.05))
    shots.append(fig)
Result('shots',shots,'SideBySideAniso',vppen='txscale=1.5')

## Cartesian migration
#####################
fft = 'fft1 | window min1=3 max1=30'

# . . Create wavelet
Flow('wav',None,'spike n1=2048 d1=0.004 k1=1 | ' + fft)

# . . Create slowness modl
Flow('slow','vxz','math output=1/input | transp | spray axis=2 n=1 d=0.01')

# . . Generate Shot and receiver wavefields
Flow('rwfl swfl','shot wav',
     fft + ''' |
     spray axis=3 n=1 o=0 d=1 |
     spray axis=5 n=1 o=0 d=1 |
     srsyn nx=%g dx=%g ox=0 wav=${SOURCES[1]} swf=swf.rsf |
     transp plane=12 | transp plane=23 > ${TARGETS[0]} &&
     transp plane=12 < swf.rsf | transp plane=23 > ${TARGETS[1]} &&
     rm swf.rsf &&
     echo "d4=0.0" >> ${TARGETS[1]} &&
     echo "d4=0.0" >> ${TARGETS[0]}
     ''' %(nx,xmax/(nx-1)), stdout=-1)
# RSF MIGRATION

#Flow('image cigs','PSdata PRdata slow',
#     '''
#     srmig2 slo=${SOURCES[2]} rwf=${SOURCES[1]} cig=${TARGETS[1]}
#     itype=o hsym=y jcx=50 readwrite=y verb=y nrmax=10
#     ''')
#Result('image',
#       '''
#       window | grey pclip=100
#       title=Image transp=n
#       label2=Depth unit2=km
#       label1=Lateral unit1=km
#       ''')

#####################################
#
# . . Cart Mig with Jeff's Code  
# . . constant velocity
# . . Cartesian Coordinate System
for axis in ('x2','x1'):
     Flow(axis,None,
         'math n1=501 d1=0.01 o1=0. n2=%g o2=0. d2=%g output='%(nx,xmax/(nx-1)) +axis  )

# . . Cartesian Coordinate System
Flow('Rays','x2 x1',
     '''
     cat axis=3 space=n ${SOURCES[1]}
     ''')

# . . Single Test shot

Flow('Rdata0','rwfl','window | window f3=0 max2=22.5')
Flow('Sdata0','swfl','window | window f3=0 max2=22.5')
Flow('v0','vxz','math output="input" ' )

# . . Migration Single SHot
Flow('CartMig0 RMig0','Rdata0 Sdata0 v0 Rays',
     '''
     rwe2d rwf=${SOURCES[0]} swf=${SOURCES[1]} vel=${SOURCES[2]} rays=${SOURCES[3]}
     image=${TARGETS[0]} Rimage=${TARGETS[1]} nref=36 verbose=1 eps=0.
     min_region_pct=.125 del_dist=.125 verb=0 niter_lloyd=40 ntap=25 nloop=3
     norm=1 nsx=2 nsz=2
     ''',stdin=0,stdout=0)

# . . Migration Results
Plot('CartMig0',
       '''
       window | agc rect1=501  rect2=25 | grey pclip=99 scalebar=n  
       wanttitle=n screenht=%g  screenwd=%g
       title="Cartesian Single-shot Image" 
       label1=Depth   unit1=km
       label2=Lateral unit2=km
       ''' %(zmax,xmax))

Plot('CM0','CartMig0 refl','Overlay')

Result('CM1','CM0 CartMig0','Movie')

Result('RMig0',
       '''
       window | grey pclip=100
       title="RWE Single-shot Image"
       label1=Depth   unit1=km
       label2=Lateral unit2=km
       ''')


#######################
#
# . . v(x,z) velocity
# . . RWE Migration

Flow('irays','x z','cat axis=3 space=n  ${SOURCES[1]} ')
Flow('PRdata','rwfl','window | window j3=1 f3=0 min2=3 max2=22.5 squeeze=y')
Flow('PSdata','swfl','window | window j3=1 f3=0 min2=3 max2=22.5 squeeze=y')

Flow('RWEMig RRWEMig','PRdata PSdata vxz irays',
     '''
     rwe2d rwf=${SOURCES[0]} swf=${SOURCES[1]} vel=${SOURCES[2]} rays=${SOURCES[3]}
     image=${TARGETS[0]} Rimage=${TARGETS[1]} nref=36 verbose=1 eps=0.
     min_region_pct=.125 del_dist=.125 verb=0 niter_lloyd=40 ntap=25 nloop=3
     norm=1 nsx=1 nsz=1
     ''',stdin=0,stdout=0)

Plot('RWEMig',
       '''
       window | agc rect1=501 rect2=20 | grey pclip=100 scalebar=n pad=n
       wanttitle=n screenht=%g screenwd=%g
       title="Mapped Cartesian Image"
       label1=Depth   unit1=km
       label2=Lateral unit2=km
       ''' %(zmax,xmax) )

Plot('CM','RWEMig refl','Overlay')

Result('CMX','CM RWEMig','Movie')

Flow('RWEsum','RRWEMig',
     '''
      transp plane=23   | stack axis=2 | agc rect1=501 rect2=20
     ''')

Result('RWEsum',
       '''
       window | grey pclip=100 scalebar=n
       wanttitle=n s
       title="RWE IR Image"
       label1=Time   unit1=s
       label2=Lateral unit2=km
       '''  )

End()

