from rsfproj import *
import rwezo,zomig,fdmod

par = {    
    'nz':1911, 'dz':0.00625, 'oz':0,  'lz':'z','uz':'km',
    'nx':3500, 'dx':0.01250, 'ox':0,  'lx':'x','ux':'km',
    'nt':12000,'dt':0.001,   'ot':0,  'lt':'label1="\F10 t\F3 " unit1="s"',
    'ng':600,  'dg':0.1,     'og':-85,'lg':'label2="\F10 g\F3 " unit2="\^o\_"',
    'kt':100,    # wavelet delay
    'ow':1,
    'nT':1600, 'dT':0.004,    'oT':0
    }

# compute parameters
rwezo.param(par)
zomig.migpar(par)
fdmod.param(par)

# ------------------------------------------------------------
# velocity
velo = 'bpaitvel.hh'
Fetch(velo,'bpait')

Flow('velo','bpaitvel.hh',
     '''
     dd form=native |
     window n2=%(nx)d |
     scale rscale=0.001 |
     put d1=%(dz)g d2=%(dx)g label1=z label2=x
     ''' % par)
Flow('dens','velo','math output=10')

Plot  ('velo',rwezo.cgrey('allpos=y pclip=100 bias=1.4',par))
Result('velo',rwezo.cgrey('allpos=y pclip=100 bias=1.4',par))

Flow(  'salt','velo','add add=-4.7 | clip clip=0.5')
Result('salt',rwezo.cgrey('allpos=y pclip=100',par))

# ------------------------------------------------------------

Flow(  'edge','salt','igrad square=y')
Result('edge','sfdd type=float |' + rwezo.cgrey('pclip=100',par))

Flow(  'mask','edge','mask min=0.002')
Result('mask','sfdd type=float |' + rwezo.cgrey('pclip=100',par))

for x in ('x1','x2'):
    if(x=='x1'): o='zs'
    if(x=='x2'): o='xs'

    Flow(o,'edge mask',
         '''
         math output=%s |
         put n1=1 n2=%d |
         headerwindow mask=${SOURCES[1]} |
         window
         ''' % (x,par['nz']*par['nx']))

Flow('rs','edge mask',
     '''
     scale axis=123 |
     put n1=1 n2=%d |
     headerwindow mask=${SOURCES[1]} |
     window
     ''' % (par['nz']*par['nx']))

Flow('ss',['xs','zs','rs'],
     '''
     cat axis=2 space=n
     ${SOURCES[0]} ${SOURCES[1]} ${SOURCES[2]} | transp |
     window j2=2
     ''', stdin=0)

Plot('ss','window n1=2 | dd type=complex | window | '
     + fdmod.cgraph('symbol=. plotcol=0 symbolsz=8',par))
#Result('ss',['velo','ss'],'Overlay')

# ------------------------------------------------------------

# ------------------------------------------------------------
# receiver (flat)

Flow('ro',None,'math n1=%(nx)d d1=%(dx)g o1=%(ox)g output=0' % par)

Flow('zo','ro','math output="%g"' % par['oz'])
Flow('xo','ro','math output="x1"')
Flow('oo',['xo','zo'],
     '''
     cat axis=2 space=n
     ${SOURCES[0]} ${SOURCES[1]} | transp
     ''', stdin=0)

Plot('oo','window n1=2 | dd type=complex | window j2=10 | '
     + fdmod.cgraph('symbol=* plotcol=5',par))
#Result('oo',['velo','oo'],'Overlay')

Result('model','velo ss oo','Overlay')

# ------------------------------------------------------------
# wavelet
Flow('wav',None,
     '''
     spike nsp=1 mag=1 n1=%(nt)d d1=%(dt)g o1=%(ot)g k1=%(kt)d |
     ricker1 frequency=20 | 
     put label1=t label2=x label3=y 
     ''' % par)    
Result('wav','wav','window n1=1000 | graph title=" "')

# ------------------------------------------------------------
# modeling
fdmod.amodel('do','wo','wav','velo','dens','ss','oo','free=n',par)

# ------------------------------------------------------------
Result('wo',
       'window j3=2 min1=%(oz)g n1=%(nz)d min2=%(ox)g n2=%(nx)d |' % par
       + rwezo.cgrey('pclip=99 gainpanel=a',par))
Result('do','window j2=4 | transp memsize=1000 |' + rwezo.dgrey('',par))

for j in range(2,120,2):
    par['j'] = j
    
    Plot('wo'+str(j/2),'wo',
         '''
         window n3=1 f3=%(j)d
         min1=%(oz)g n1=%(nz)d min2=%(ox)g n2=%(nx)d |
         ''' % par
         + rwezo.cgrey('pclip=100',par))
    Result('wo'+str(j/2),['wo'+str(j/2),'cos1','ss'],'Overlay')
    
Flow(  'dd','do','window f2=%(kt)d | put o2=0 d2=0.002 | window j2=2' % par)
Result('dd','transp memsize=1000 |' + rwezo.dgrey('',par))

# ------------------------------------------------------------

# ------------------------------------------------------------
Flow('vel1','velo','smooth rect1=351 rect2=351 repeat=3')

# coordinate system: rays(g,t)
Flow('mzs1',None,'spike nsp=1 n1=%(ng)d d1=%(dg)g o1=%(og)g | math output="04+0.025*x1"' % par)
Flow('mxs1',None,'spike nsp=1 n1=%(ng)d d1=%(dg)g o1=%(og)g | math output="56+0.025*x1"' % par)
Flow('sou1','mxs1 mzs1','cat axis=2 space=n ${SOURCES[1]} | transp | dd type=complex | window')

# wavefronts (by HWT)
Flow('hwt1','vel1 sou1',
     '''
     hwt2d verb=n
     xsou=38 zsou=3
     nt=%(nt)d ot=0 dt=%(dt)g
     ng=%(ng)d og=%(og)g dg=%(dg)g
     ''' % par)
Flow('cos1','hwt1',
     '''
     window f2=900 |
     reverse which=2 |
     put o2=0 d2=%(dt)g |
     window j2=8
     ''' % par)

# ------------------------------------------------------------
Flow('vel2','velo','math output=3.5')

# coordinate system: rays(g,t)
Flow('mzs2',None,'spike nsp=1 n1=%(ng)d d1=%(dg)g o1=%(og)g | math output="-15+0.5*(x1-(%(og)g))"' % par)
Flow('mxs2',None,'spike nsp=1 n1=%(ng)d d1=%(dg)g o1=%(og)g | math output="+0-0.2*(x1-(%(og)g))"' % par)
Flow('sou2','mxs2 mzs2','cat axis=2 space=n ${SOURCES[1]} | transp | dd type=complex | window')

# wavefronts (by HWT)
Flow('hwt2','vel2 sou2',
     '''
     hwtex verb=n sou=${SOURCES[1]}
     nt=%(nt)d ot=%(ot)g dt=%(dt)g
     ''' % par)
Flow('cos2','hwt2','window j2=8')

# ------------------------------------------------------------
# time data CC: (t,x)
Flow(  'datCC','dd','transp memsize=1000')
Result('datCC','grey pclip=99 wanttitle=n %s label2=x unit2=kft' % par['lt'])

# ------------------------------------------------------------
# WEM image CC: (z,x)
zomig.image('imgCC','sloCC','frqCC',par)
Plot  ('imgCC','window | transp |' + rwezo.cgrey('pclip=99',par))
Result('imgCC',['imgCC','cos1'],'Overlay')

# loop over coordinate systems
# 1 - Riemannian coordinate system
# 2 - Cartesian  coordinate system
for i in ('1','2'):
    # coordinate system plot
    rwezo.cos(   'cos'+i,10,50,par)
    Result('cos'+i,['velo','cos'+i],'Overlay')
    
    # slowness
    rwezo.slow(  'sloCC','sloRC'+i,'velo','cos'+i,par)
    Result('sloRC'+i,'transp |'
           + rwezo.rgrey('pclip=99 allpos=y color=j bias=0.065',par))

    # ------------------------------------------------------------
    # coordinate system coefficients (A,B,M=mask) and references (A,B)
    rwezo.abm(    'abmRC'+i,'abrRC'+i,'sloRC'+i,'cos'+i,par)
    rwezo.abmplot('abmRC'+i,par)

    # ------------------------------------------------------------
    # frequency data RC: (g,w)
    rwezo.frq('frqRC'+i,'frqCC','datCC','cos'+i,par)

    # ------------------------------------------------------------
    # RWE image
    rwezo.mig('migCC'+i,'migRC'+i,'frqRC'+i,'abmRC'+i,'abrRC'+i,'cos'+i,par)

# ------------------------------------------------------------
# PLOTS
#plots(par)

# ------------------------------------------------------------
zoompar = {
    'nz':30,    'dz':1,     'oz':0, 'lz':'label1=z unit1=kft',
    'nx':40,    'dx':1,     'ox':30,'lx':'label2=x unit2=kft',
    'nt':32000, 'dt':0.0005,'ot':0, 'lt':'label1="\F10 t\F3 " unit1="s"', 
    'ng':200,   'dg':2.0,   'og':0, 'lg':'label2="\F10 g\F3 " unit2=""',
    'nT':1600, 'dT':0.004,    'oT':0
    }
rwezo.param(zoompar)

Plot('zoomvel','velo',rwezo.cgrey('',zoompar))
Flow('zoomcos','cos1','window')
rwezo.cos('zoomcos',5,25,zoompar)
Result('zoomcos','zoomvel zoomcos','Overlay')

Plot('zoomvel-ovl',['zoomvel','zoomcos'],'Overlay')

Flow('vscale','velo','scale axis=123 | add add=-0.6')

    
End()
