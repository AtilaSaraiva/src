from rsfproj import *

###########################################################################
Flow('spike',None,"spike n1=101 n2=101 d1=0.01 d2=0.01 mag=1")

def gauss(r=25,a=1,c1=0.5,c2=0.5):
    return '''
    math output="input+%g*exp(-((x1-%g)*(x1-%g)+(x2-%g)*(x2-%g))/(%g*%g))"
    ''' % (a,c1,c1,c2,c2,r,r)

Flow('mgauss','spike',gauss(0.1,-0.5))
Flow('pgauss','spike',gauss(0.1,+0.5))

Flow('spike2',None,"spike n1=5 n2=5 d1=0.2 d2=0.2 mag=1")
Flow('mgauss2','spike2',gauss(1,-0.5,0.4,0.4))
Flow('pgauss2','spike2',gauss(1,+0.5,0.4,0.4))

Flow('spike3',None,"spike n1=201 n2=201 d1=0.005 d2=0.005 mag=1")
Flow('mgauss3','spike3',gauss(0.1,-0.5))

def hale(nz,nx,x0=4,z0=1.5,v0=1.5,g=0.6,a=1,d=1):
    d=d*d
    return '''
    math n1=%d n2=%d d1=%g d2=%g
    output="%g+%g*x1+(%g)*exp(-((x1-%g)^2+(x2-%g)^2)/(%g^2))"
    ''' % (nz,nx,4./(nz-1),6./(nx-1),v0,g,a,z0,x0,d)

Flow('hale',None,hale(201,301,a=-1))
Plot('hale',
     '''
     grey color=j allpos=y pclip=100 bias=1
     wanttitle=n scalebar=y
     label1='Depth (km)' label2='Lateral (km)' barlabel='Velocity (km/s)'
     ''')
meiko = 'meiko-hale'
Flow(meiko,'hale','eikonal yshot=5')
Plot(meiko,
     '''
     contour title='Fast marching' nc=35 c0=0 dc=0.1 plotcol=7
     scalebar=y wantaxis=n
     ''')
Result(meiko,['hale',meiko],'Overlay')

Flow(['call-hale','size-hale','grid-hale'],'hale',
          '''trace2 size=${TARGETS[1]} grid=${TARGETS[2]}
          a0=-140 na=71 da=4''')
#Flow('call-hale','call-hale-safe','cp $SOURCE $TARGET',stdin=0)
#Flow('size-hale','size-hale-safe','cp $SOURCE $TARGET',stdin=0)
#Flow('grid-hale','grid-hale-safe','cp $SOURCE $TARGET',stdin=0)

modo = 'cmodo-hale'
Flow(modo,['call-hale','size-hale','grid-hale'],
          'interp2 sx=5 size=${SOURCES[1]} grid=${SOURCES[2]}')
for branch in range(3):
    mode = 'cmode%d-hale' % branch
    Flow(mode,modo,'window n1=1 f1=%d | transp' % branch)
    Plot(mode,
         '''contour wanttitle=n scalebar=y plotcol=7 wantaxis=n
         nc=35 c0=0 dc=0.1''')    
all = 'cmode-hale'
Plot(all,map(lambda x: "cmode%d-hale" % x, range(3)),'Overlay')
Result(all,['hale',all],'Overlay')
#       pstexpen='color=y fat=1 fatmult=1.5 invras=y'

#######################################################

modo = 'pmodo-hale'
Flow(modo,['call-hale','size-hale','grid-hale'],
          '''interp2 sx=0 plane=4
          size=${SOURCES[1]} grid=${SOURCES[2]}''')
for branch in range(3):
    mode = 'pmode%d-hale' % branch
    Flow(mode,modo,'window n1=1 f1=%d | transp' % branch)
    Plot(mode,
         '''
         contour wanttitle=n scalebar=y plotcol=7 wantaxis=n
         nc=35 c0=0 dc=0.1
         ''')    
all = 'pmode-hale'
Plot(all,map(lambda x: "pmode%d-hale" % x, range(3)),'Overlay')
Result(all,['hale',all],'Overlay')
#       pstexpen='color=y fat=1 fatmult=1.5 invras=y'

######## Z marching ####################################

Flow(['zeiko-hale','zplac-hale','zdept-hale','zangl-hale'],'hale',
          '''ztrace a0=-140 na=561 nt=600
          place=${TARGETS[1]} depth=${TARGETS[2]} angle=${TARGETS[3]}
          ''')

################## Fixed source #########################
modo = 'modo-hale'
Flow(modo,['zeiko-hale','zplac-hale','zdept-hale'],
          '''interp3 sx=5 dt=0.002 z=0.1
          place=${SOURCES[1]} depth=${SOURCES[2]}''')
for branch in range(3):
    mode = 'mode%d-hale' % branch
    Flow(mode,modo,'window n1=1 f1=%d | transp' % branch)
    Plot(mode,
         '''
         contour wanttitle=n scalebar=y plotcol=7
         nc=35 c0=0 dc=0.1
         ''')
all = 'mode-hale'
Plot(all,map(lambda x: "mode%d-hale" % x, range(3)),'Overlay')
Result(all,['hale',all],'Overlay')
#       pstexpen='color=y fat=1 fatmult=1.5 invras=y')

################## Fixed angle #########################
podo = 'podo-hale'
Flow(podo,['zeiko-hale','zangl-hale','zdept-hale'],
          '''interp3 sx=0 dt=0.002 z=0.1
          place=${SOURCES[1]} depth=${SOURCES[2]}''')
for branch in range(3):
    pode = 'pode%d-hale' % branch
    Flow(pode,podo,'window n1=1 f1=%d | transp' % branch)
    Plot(pode,
         'contour wanttitle=n scalebar=y plotcol=7 nc=35 c0=0 dc=0.1')
all = 'pode-hale'
Plot(all,map(lambda x: "pode%d-hale" % x, range(3)),'Overlay')
Result(all,['hale',all],'Overlay')
#       pstexpen='color=y fat=1 fatmult=1.5 invras=y')

######################## Green's function ##############
Flow('wave',None,
          'spike n1=1024 nsp=3 k1=125,325,525 | bandpass fhi=40 flo=10 | fft1')
Flow('pwave',None,
          'spike n1=1000 nsp=3 k1=125,250,375 | bandpass fhi=40 flo=10 | fft1')

Flow('green',['zeiko-hale','zplac-hale','zdept-hale','wave'],
          '''green sx=5 wave=${SOURCES[3]} dx=0.04
          place=${SOURCES[1]} depth=${SOURCES[2]}''')
Result('green',
       '''transp plane=13 |
       grey wanttitle=n label1='Depth (km)' label2='Lateral (km)'
       ''')

Flow('green2',['zeiko-hale','zangl-hale','zdept-hale','pwave'],
          '''green sx=0 wave=${SOURCES[3]} dx=1
          place=${SOURCES[1]} depth=${SOURCES[2]}''')
Result('green2',
       '''transp plane=13 |
       grey wanttitle=n label1='Depth (km)' label2='Lateral (km)'
       ''')

for inp in ['zeiko-hale','zangl-hale','zdept-hale','zplac-hale']:
    Flow(inp+'0',inp,'window max1=-90')
    Flow(inp+'1',inp,'window min1=-90 max1=-60')
    Flow(inp+'2',inp,'window min1=-60 max1=-30')
    Flow(inp+'3',inp,'window min1=-30 max1=0')
    Flow(inp+'4',inp,'window min1=0 max1=30')
    Flow(inp+'5',inp,'window min1=30 max1=60')
    Flow(inp+'6',inp,'window min1=60 max1=90')
    Flow(inp+'7',inp,'window min1=90')

sgreen=[]
pgreen=[]
for slice in range(8):
    green = 'green-%d' % slice
    eiko = 'zeiko-hale%d' % slice
    plac = 'zplac-hale%d' % slice
    dept = 'zdept-hale%d' % slice
    Flow(green,[eiko,plac,dept,'wave'],
              '''green sx=5 wave=${SOURCES[3]} dx=0.04
              place=${SOURCES[1]} depth=${SOURCES[2]}''')
    res = Result(green,
                 '''transp plane=13 |
                 grey clip=150
                 wanttitle=n label1='Depth (km)' label2='Lateral (km)'
                 ''')
    sgreen.append(res)
    
    green = 'green2-%d' % slice
    eiko = 'zeiko-hale%d' % slice
    angl = 'zangl-hale%d' % slice
    dept = 'zdept-hale%d' % slice
    Flow(green,[eiko,angl,dept,'pwave'],
              '''green sx=0 wave=${SOURCES[3]} dx=1
              place=${SOURCES[1]} depth=${SOURCES[2]}''')
    res = Result(green,
                 '''transp plane=13 | 
                 grey clip=200 verb=y
                 wanttitle=n label1='Depth (km)' label2='Lateral (km)'
                 ''')
    pgreen.append(res)
Alias('sgreen',sgreen)   
Alias('pgreen',pgreen)

arrivals = {'spike':1,'pgauss':3,'mgauss':3,
            'pgauss2':3,'mgauss2':3,'mgauss3':3}

for model in ('spike','pgauss','mgauss','pgauss2','mgauss2','mgauss3'):
    # Fast marching
    meiko = 'meiko-' + model
    Flow(meiko,model,'eikonal yshot=0.5')
    Plot(meiko,
         "contour title='Fast marching' nc=30 c0=0 dc=0.05")
    narr = arrivals[model]
    if model == 'mgauss3':
        na=121
        a0=-60
        da=1
    elif model == 'mgauss':
        na=481
        a0=-60
        da=0.25
    else:
        na=361
        a0=-180
        da=1
    for method in (1,2):
        # Dependency tree
        mod = "-%d-%s" % (method,model)
        Flow('tree' + mod,model,
                  "tree method=%d na=%d a0=%g da=%g" % (method,na,a0,da))
        # Interpolation
        Flow('trdo' + mod,'tree' + mod,"interpt sx=0.5")
        for branch in xrange(narr):
            interp = "trde%d%s" % (branch,mod)
            Flow(interp,'trdo' + mod,
                      "window n2=1 f2=%d | transp" % branch)
            Plot(interp,"contour wanttitle=n nc=30 c0=0 dc=0.05")
        if narr > 1:
            all = 'trde' + mod
            Plot(all,map(lambda x: "trde%d%s" % (x,mod), xrange(narr)),
                 'Overlay')
        else:
            all = 'trde0' + mod
        Result(all,[all,meiko],'SideBySideAniso')


for model in ('spike','pgauss','mgauss'):
    call = 'call-' + model
    size = 'size-' + model
    grid = 'grid-' + model
    modo = 'cmodo-' + model
    Flow([call,size,grid],model,
              'trace2 size=${TARGETS[1]} grid=${TARGETS[2]}')
    Flow(modo,[call,size,grid],
              'interp2 sx=0.5 size=${SOURCES[1]} grid=${SOURCES[2]}')
    narr = arrivals[model]
    for branch in range(narr):
        mode = 'cmode%d-%s' % (branch,model)
        Flow(mode,modo,'window n1=1 f1=%d | transp' % branch)
        Plot(mode,"contour wanttitle=n nc=30 c0=0 dc=0.05")
    if narr > 1:
        all = 'cmode-' + model
        Plot(all,map(lambda x: "cmode%d-%s" % (x,model), range(narr)),
             'Overlay')
    else:
        all = 'cmode0-' + model
    Result(all,[all,'meiko-'+model],'SideBySideAniso')
     
###########################################################################
End()
