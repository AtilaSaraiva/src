from rsfproj import *
import sys
sys.path.append('../../Scons')
import zomig

#def igrey(custom):
#    return '''
#    grey labelrot=n title=""
#    min2=%(xmin)g max2=%(xmax)g min1=%(zmin)g max1=%(zmax)g
#    ''' % par
def igrey(custom,par):
    return '''
    grey labelrot=n title="" %s
    screenratio=0.3 screenht=4.5 labelsz=6 label1="z (m)" label2="x (m)"
    min2=%g max2=%g min1=%g max1=%g
    ''' % (custom,par['xmin'],par['xmax'],par['zmin'],par['zmax'])
def tgrey(custom,par):
    return '''
    window max1=0.15 |
    grey labelrot=n title="" %s
    screenratio=0.5 screenht=7.5 labelsz=6 label1="t (s)" label2="x (m)"
    min2=%g max2=%g pclip=100
    ''' % (custom,par['xmin'],par['xmax'])
def igraph(custom,par):
    return '''
    graph labelrot=n yreverse=y title="" %s
    screenratio=0.3 screenht=4.5 wantaxis=n
    min1=%g max1=%g min2=%g max2=%g
    ''' % (custom,par['xmin'],par['xmax'],par['zmin'],par['zmax'])
# ------------------------------------------------------------
par = {
    'nz':600,  'dz':0.25,  'oz':0, 'zmin':0, 'zmax':150,
    'nx':10800,'dx':0.50,  'ox':0, 'xmin':0, 'xmax':5400,
    'nt':3000, 'dt':0.00005,'ot':0, 'kt':400, 'fone':200, 'ftwo':400,
#
    'nrmax':1,'dtmax':0.01,
    'tmx':0,'tmy':0,
    'pmx':0,'pmy':0,
    'nw':751,  'ow':0, 'dw':3.33333,
    'nw':125,
#    
    'nbz':50,'tz':0.006125,
    'nbx':50,'tx':0.006125,
    'verb':'y', 'abc':'y', 'free':'n',
    'snap':'y', 'jsnap':100,
    's_o':1500,'s_d':100, 's_n':1,
    'r_o':000, 'r_d':6,   'r_n':400
    }
# ------------------------------------------------------------
Fetch(['vel2.hh'],'frst2')
Fetch(['rho2.hh'],'frst2')
# ------------------------------------------------------------
# density
Flow('den','rho2.hh','put label1=z label2=x')
Plot('den','den',igrey('pclip=99 bias=2.17',par))

# velocity
Flow('vel','vel2.hh',' put label1=z label2=x')
Plot('vel','vel',igrey('pclip=99 bias=2429.15',par))

# slowness
Flow('slo','vel',
     '''
     math "output=1/input" |
     transp plane=12 | transp plane=23 |
     put label1=x label2=y label3=z
     ''')

# acoustic impedance
Flow('aim','vel den',
     '''
     math
     v=${SOURCES[1]}
     d=${SOURCES[1]} output=v*d
     ''', stdin=0)
Result('aim','aim',igrey('pclip=99 allpos=y bias=4.7 color=j',par))

# reflectivity
Flow('ref','aim','ai2refl | scale axis=12')
Plot('ref','ref',igrey('pclip=99',par))

# wavelet
Flow('wav',None,
         '''
         spike nsp=1 mag=1 k1=%(kt)d
         n1=%(nt)d d1=%(dt)g o1=0 |
         ricker1 frequency=%(ftwo)s |
         put label1=t label2=x label3=y 
         ''' % par )    
Result('wav','wav','graph title=" "')

# ------------------------------------------------------------
# source
Flow('sou','ref','cube2list verb=y clip=0.05')
Flow('xs','sou','window n1=1 f1=0')
Flow('zs','sou','window n1=1 f1=1')
Flow('sss','xs zs',
     'cat axis=2 space=n ${SOURCES[1]} | transp | dd type=complex | window')
Plot('sou','sss',igraph('symbol=. plotcol=2',par))
# ------------------------------------------------------------
# receiver
Flow('zr',None,'math n1=%(nx)d d1=%(dx)g o1=%(dx)g "output=0 "' % par)
Flow('xr',None,'math n1=%(nx)d d1=%(dx)g o1=%(dx)g "output=x1"' % par)
Flow('rec','xr zr','cat axis=2 space=n ${SOURCES[1]} | transp')
Flow('rrr','rec','dd type=complex | window')
Plot('rec','rrr',igraph('symbol=. plotcol=3',par))
# ------------------------------------------------------------
Result('sourec','ref sou rec','Overlay')
# ------------------------------------------------------------


# ------------------------------------------------------------
# two-way modeling
# ------------------------------------------------------------
Flow('dat wfl','wav vel sou rec',
     '''
     afdm2d verb=y abc=y free=n snap=y jsnap=50
         nbz=50 tz=0.006125 nbx=50 tx=0.006125 
         vel=${SOURCES[1]}
         sou=${SOURCES[2]}
         rec=${SOURCES[3]}
         wfl=${TARGETS[1]}
     ''' % par)
Flow('dtwo','dat',
     '''
     transp memsize=400 |
     window min1=0.02 |
     pad n1out=%(nt)d |
     put o1=0 d1=0.0001
     ''' % par)
Result('dtwo','dtwo',tgrey('',par))
# ------------------------------------------------------------


# ------------------------------------------------------------
# one-way modeling
# ------------------------------------------------------------
Flow('r_r',['ref','vel'],
     '''
     depth2time velocity=${SOURCES[1]} dt=%(dt)g nt=%(nt)d |
     ricker1 frequency=%(fone)s | halfint | halfint | math output="-input" |
     time2depth velocity=${SOURCES[1]} dz=%(dz)g nz=%(nz)d |
     transp plane=12 | transp plane=23
     ''' % par )
Plot('r_r','r_r','window | transp |'+igrey('pclip=99',par))
zomig.model('d_d','slo','r_r',par)
Flow('done','d_d',
     '''
     window | transp memsize=400 |
     pad n1out=1501 |
     fft1 inv=y
     ''' % par )
Result('done','done',tgrey('',par))
# ------------------------------------------------------------

#Flow('ror',['ref','vel'],
#     '''
#     depth2time velocity=${SOURCES[1]} dt=%(dt)g nt=%(nt)d |
#     ricker1 frequency=%(fone)s | halfint | halfint | math output="-input" |
#     time2depth velocity=${SOURCES[1]} dz=%(dz)g nz=%(nz)d |
#     transp plane=12 | transp plane=23
#     ''' % par )
#Plot('ror','ror','window | transp |'+igrey('pclip=99',par))
#zomig.model('dod','slo','ror',par)
#Flow('dooo','dod',
#     '''
#     window | transp memsize=400 |
#     pad n1out=1501 |
#     fft1 inv=y
#     ''' % par )
#Result('dooo','dooo',tgrey('title=one-way',par))

End()
