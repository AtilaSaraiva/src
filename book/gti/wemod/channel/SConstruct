from rsfproj import *
import spmig, sgmig, zomig
# ------------------------------------------------------------
# PLOTTING
# ------------------------------------------------------------
def igrey(custom):
    return '''
    byte gainpanel=all %s |
    grey3 flat=y frame1=190 frame2=180 frame3=120  title="" 
    ''' % (custom)
def dgrey(custom):
    return '''
    byte gainpanel=all %s |
    grey3 flat=y frame1=400 frame2=180 frame3=120  title="" label1=t
    ''' % (custom)
def vgrey(custom):
    return '''
    byte gainpanel=all %s |
    grey3 flat=y frame1=190 frame2=180 frame3=120 color=j title="" 
    ''' % (custom)
# ------------------------------------------------------------
# parameters
# ------------------------------------------------------------
par = {
    'nw':70,'ow':0,  'dw':2.5,
    'nx':360,'ox':7.5,'dx':15, 'xsou':2707.5,'xpad':180, 'xmin':7.5, 'xmax':5392.5,
    'ny':200,'oy':7.5,'dy':15, 'ysou':1807.5,'ypad':120, 'ymin':7.5, 'ymax':2992.5,
    'nz':300,'oz':0,  'dz':1,                            'zmin':0,   'zmax':300,
    'nt':1000,'dt':0.0004,'ot':0, 'kt':250, 'ft':0.1,
    'f':5,
    'verb':'y',
    'eps':0.01,
    'nrmax':5,
    'dtmax':0.00005,
    'tmx':16, 'tmy':16,
    'pmx':0,  'pmy':0
    }
# ------------------------------------------------------------
Fetch(['vp2.hh'], 'frst')
Fetch(['rho2.hh'],'frst')

# density
Flow('den','rho2.hh',
     '''
     window |
     transp plane=23 | transp plane=12 |
     reverse which=1 opt=i |
     put label1=z label2=x label3=y o1=0
     ''')
Result('den','den',vgrey('pclip=99 bias=2.12221'))
# ------------------------------------------------------------
# velocity
Flow('vel','vp2.hh',
     '''
     window |
     transp plane=23 | transp plane=12 |
     reverse which=1 opt=i |
     put label1=z label2=x label3=y o1=0
     ''')
Result('vel','vel',vgrey('pclip=99 bias=2290.4'))
# slowness
Flow('slo','vel',
     '''
     math "output=1/input" |
     transp plane=12 | transp plane=23 |
     put label1=x label2=y label3=z
     ''')
Result('slo','slo','transp plane=23 | transp plane=12 | ' + vgrey('pclip=99 bias=0.000347411'))
Flow('sss','vel',
     '''
     math "output=1/input" |
     smooth rect1=11 rect2=11 |
     transp plane=12 | transp plane=23 |
     put label1=x label2=y label3=z
     ''')
Result('sss','sss','transp plane=23 | transp plane=12 | ' + vgrey('pclip=99 bias=0.000347366'))
# ------------------------------------------------------------
# acoustic impedance
Flow('aim','vel den','math v=${SOURCES[1]} d=${SOURCES[1]} output=v*d', stdin=0)
#Result('aa','aa',vgrey('pclip=99 bias=4.50379'))

# reflectivity
Flow('ref','aim','ai2refl')
Flow('rrr','ref','transp plane=12 | transp plane=23')

# ------------------------------------------------------------
# 2D files
Flow('_ref','ref','window squeeze=n n3=1 f3=100')
Flow('_vel','vel','window squeeze=n n3=1 f3=100')

Flow('l_l','slo','window squeeze=n n2=1 f2=100')
Flow('s_s','sss','window squeeze=n n2=1 f2=100')
Flow('r_r','rrr','window squeeze=n n2=1 f2=100')
# ------------------------------------------------------------
## 
 # z-x-y cubes: den, vel, aim, ref
 # x-y-z cubes:      sss,      rrr
 # x-.-z cubes:      s_s,      r_r
 ##
# ------------------------------------------------------------

#for k in ('0','1','2','3'):
#    f = 20 + int(k)*20
for k in ('0'):
    f = 80 + int(k)*20
    par['f']=f

    wv = 'wav' + k # wavelet

    d_d = 'd_d' + k # data
    ddd = 'ddd' + k
    f_f = 'f_f' + k
    fff = 'fff' + k

    r_r = 'r_r' + k # reflectivity
    rrr = 'rrr' + k

    i_i = 'i_i' + k # image
    iii = 'iii' + k

    u_u = 'u_u' + k # source wavefield
    uuu = 'uuu' + k
    
    e_e = 'e_e' + k # data
    eee = 'eee' + k
    c_c = 'c_c' + k
    ccc = 'ccc' + k
    g_g = 'g_g' + k # data
    
    w_w = 'w_w' + k # downgoing wavefield
    www = 'www' + k
    
    j_j = 'j_j' + k # image
    jjj = 'jjj' + k

    # ------------------------------------------------------------
    
    Flow(wv,None,
         '''
         spike nsp=1 mag=1 k1=%(kt)d
         n1=%(nt)d d1=%(dt)g o1=0
         n2=1    d2=%(dx)g   o2=%(xsou)g
         n3=1    d3=%(dy)g   o3=%(ysou)g |
         ricker1 frequency=%(f)s |
         put label1=t label2=x label3=y 
         ''' % par )    
    Result(wv,wv,'graph title=" "')
    
    # ------------------------------------------------------------
    # SURVEY SINKING
    # ------------------------------------------------------------
    # the wavelet is in the reflectivity;
    # the source is a delta function

    # reflectivity
    Flow(r_r,['_ref','_vel'],
         '''
         depth2time velocity=${SOURCES[1]} dt=%(dt)g nt=%(nt)d |
         ricker1 frequency=%(f)s | 
         time2depth velocity=${SOURCES[1]} dz=%(dz)g nz=%(nz)d |
         transp plane=12 | transp plane=23
         ''' % par )
    Flow(rrr,['ref','vel'],
         '''
         depth2time velocity=${SOURCES[1]} dt=%(dt)g nt=%(nt)d |
         ricker1 frequency=%(f)s | 
         time2depth velocity=${SOURCES[1]} dz=%(dz)g nz=%(nz)d |
         transp plane=12 | transp plane=23
         ''' % par )

    # modeling
    zomig.model(d_d,'l_l',r_r,par)
    Flow(f_f,d_d,'window | transp | pad n1out=501 | fft1 inv=y' % par )
    zomig.model(ddd,'slo',rrr,par)
    Flow(fff,ddd,'transp plane=23 | transp plane=12 | pad n1out=501 | fft1 inv=y' % par )

    # migration
    zomig.image(i_i,'s_s',d_d,par)
    zomig.image(iii,'sss',ddd,par)

# 4 Mark
# zomig.model(data,slowness,reflectivity,par)
# zomig.image(image,slowness,data,par)

    # ------------------------------------------------------------
    # SHOT PROFILE
    # ------------------------------------------------------------
    # the wavelet is in the source wavefield;
    # the reflectivity is made of delta functions

    # source wavefield
    Flow(u_u,wv,
         '''
         fft1 |
         window squeeze=n n1=%(nw)d min1=%(ow)g |
         pad beg2=%(xpad)d n2out=%(nx)d |
         put label1=w label2=x label3=y |
         transp plane=12 | transp plane=23 
         ''' % par)
    Flow(uuu,wv,
         '''
         fft1 |
         window squeeze=n n1=%(nw)d min1=%(ow)g |
         pad beg2=%(xpad)d n2out=%(nx)d |
         pad beg3=%(ypad)d n3out=%(ny)d |
         put label1=w label2=x label3=y |
         transp plane=12 | transp plane=23 
         ''' % par)

    # S-P modeling/migration
    spmig.model(e_e,'l_l',u_u,'r_r',par)
    Flow(c_c,e_e,
         '''
         window | transp | pad n1out=501 | fft1 inv=y |
         window min1=%(ft)g | pad n1out=%(nt)d | put o1=0
         ''' % par)
    spmig.image(j_j,'s_s',u_u,e_e,par)

    # S-P modeling/migration
    spmig.model(eee,'slo',uuu,'rrr',par)
    Flow(ccc,eee,
         '''
         transp plane=23 | transp plane=12 | pad n1out=501 | fft1 inv=y |
         window min1=%(ft)g | pad n1out=%(nt)d | put o1=0
         ''' % par )
    spmig.image(jjj,'sss',uuu,eee,par)

    # RESULTS
    Result(c_c,c_c,'window        | grey labelrot=n pclip=100 title="" label1=t label2=x ')
    Result(f_f,f_f,'window        | grey labelrot=n pclip=100 title="" label1=t label2=x ')
    Result(j_j,j_j,'window | transp | grey labelrot=n pclip=100 title="" label2=x')
    Result(r_r,r_r,'window | transp | grey labelrot=n pclip=100 title="" label2=x')
    Result(i_i,i_i,'window | transp | grey labelrot=n pclip=100 title="" label2=x')

    Result(ccc,ccc,dgrey('pclip=99'))
    Result(fff,fff,dgrey('pclip=99'))
    Result(jjj,jjj,'transp plane=23 | transp plane=12 | ' + igrey('pclip=99'))
    Result(rrr,rrr,'transp plane=23 | transp plane=12 | ' + igrey('pclip=99'))
    Result(iii,iii,'transp plane=23 | transp plane=12 | ' + igrey('pclip=99'))

End()
