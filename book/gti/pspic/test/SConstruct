from rsfproj import *

###########################################################################

# for mathfig in ['phaseerr','errcomp','xerr']:
# for xfig in ['scheme']:

Flow('impuls0',None,
     '''
     spike n1=256 n2=401 d1=0.01 d2=0.01 nsp=1 k1=151 k2=201 |
     bandpass fhi=30 flo=5
     ''')

Flow('vz1',None,'math n1=2560 d1=0.001 output="1+2*x1" ')

for dz in [1,10,40]:
    vz = 'vz%d' % dz
    if dz > 1:
        Flow(vz,'vz1','window j1=%d' % dz)
    for rule in ('simple','linear','midpoint'):
        test = rule + str(dz)
        Flow(test,['impuls0',vz],
             '''
             cosft sign2=1 |
             gazdag rule=%s velocity=${SOURCES[1]} eps=1 depth=y |
             cosft sign2=-1
             ''' % rule)
    
def plot(title):
    return '''
    grey min2=0.5 max2=3.5 min1=0 max1=2 clip=0.0312972 
    label1=Depth unit1=km label2=Lateral unit2=km title="%s"
    ''' % title

Plot('linear1',plot('a: Curved ray, dz=1 m'))
Plot('simple1',['simple1','linear1'],
     'add scale=1,-1 ${SOURCES[1]} | ' + plot('b: Straight-ray error, dz=1 m'))
Plot('midpoint1',['midpoint1','linear1'],
     'add scale=1,-1 ${SOURCES[1]} | ' + plot('b: Midpoint error, dz=1 m'))
Plot('serrtop','linear1 simple1','SideBySideAniso')
Plot('merrtop','linear1 midpoint1','SideBySideAniso')

k = 2
def letter():
    global k
    ch = chr(ord('a') + k)
    k = k+1
    return ch
for dz in [10,40]:
    ref = 'ref%d' % dz
    simple = 'simple%d' % dz
    midpoint = 'midpoint%d' % dz
    linear = 'linear%d' % dz
    serr = 'serr%d' % dz
    merr = 'merr%d' % dz

    Flow(ref,'linear1','window j1=%d' % dz)
    Flow('err-'+linear,[linear,ref],'add scale=1,-1 %s.rsf' % ref)
    Flow('err-'+simple,[simple,ref],'add scale=1,-1 %s.rsf' % ref)
    Flow('err-'+midpoint,[midpoint,ref],'add scale=1,-1 %s.rsf' % ref)
    Plot(linear,'err-'+linear,
              plot('%s: Curved-ray error, dz=%d m' % (letter(),dz)))
    ch = letter()
    Plot(simple,'err-'+simple,
              plot('%s: Straight-ray error, dz=%d m' % (ch,dz)))
    Plot(midpoint,'err-'+midpoint,
              plot('%s: Midpoint error, dz=%d m' % (ch,dz)))
    Plot(serr,[linear,simple],'SideBySideAniso')
    Plot(merr,[linear,midpoint],'SideBySideAniso')

Result('serr','serrtop serr10 serr40','OverUnderAniso',vppen='txscale=2.4')
Result('merr','merrtop merr10 merr40','OverUnderAniso',vppen='txscale=2.4')

###########################################################################

End()
