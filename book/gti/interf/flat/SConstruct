## 
 # 
 ##
from rsfproj import *
import fdmod,zomig

# ------------------------------------------------------------
par = {
    'nt':1000, 'ot':0, 'dt':0.001, 'lt':'label1=time unit1=s',
    'nx':401,  'ox':0, 'dx':0.005, 'lx':'label2=x unit2=km',
    'nz':201,  'oz':0, 'dz':0.005, 'lz':'label1=z unit1=km',
    'kt':50,    # wavelet delay
    'verb':'y','tmx':20, 'jsnap':50
    }
# add F-D modeling parameters
fdmod.param(par)

# ------------------------------------------------------------
# wavelet
Flow('wav',None,
     '''
     spike nsp=1 mag=1 n1=%(nt)d d1=%(dt)g o1=%(ot)g k1=%(kt)d |
     ricker1 frequency=35 |
     scale axis=123 |
     put label1=t label2=x label3=y 
     ''' % par)
Result('wav','window n1=200 | graph title="" label1="t" label2=')

# ------------------------------------------------------------
# experiment setup
Flow('r_',None,'math n1=%(nx)d d1=%(dx)g o1=%(ox)g output=1' % par)
Flow('s_',None,'math n1=1      d1=0      o1=0      output=0' % par)

# receiver positions
Flow('zr','r_','math output="0" ')
Flow('xr','r_','math output="x1"')
Flow('rr',['xr','zr'],
     '''
     cat axis=2 sace=n
     ${SOURCES[0]} ${SOURCES[1]} | transp
     ''', stdin=0)
Plot('rr','window n1=2 | dd type=complex | window j2=10 | '
     + fdmod.cgraph('symbol=* plotcol=6',par))

# source positions
Flow('zs','s_','math output=0')
Flow('xs','s_','math output=1.0')
Flow('rs','s_','math output=1')
Flow('ss',['xs','zs','rs'],
     '''
     cat axis=2 space=n
     ${SOURCES[0]} ${SOURCES[1]} ${SOURCES[2]} | transp
     ''', stdin=0)
Plot('ss','window n1=2 | dd type=complex | window | '
     + fdmod.cgraph('symbol=v plotcol=6',par))

# ------------------------------------------------------------
# model
Flow('vo',None,
     '''
     math output="2.0+0.25*x1"
     n1=%(nz)d o1=%(oz)g d1=%(dz)g
     n2=%(nx)d o2=%(ox)g d2=%(dx)g
     ''' % par)
Flow('vv','vo','noise mean=0 range=2 | smooth rect1=2 rect2=2')
Flow('rm',None,
     '''
     spike nsp=1 mag=+0.5
     n1=%(nz)d o1=%(oz)g d1=%(dz)g k1=101 l1=%(nz)d
     n2=%(nx)d o2=%(ox)g d2=%(dx)g k2=1   l2=200 |
     add add=2
     ''' % par)

Plot('vo',fdmod.cgrey('allpos=y bias=2.0 pclip=100',par))
Plot('vv',fdmod.cgrey('allpos=y bias=2.0 pclip=100',par))
Plot('rm',fdmod.cgrey('allpos=y bias=2.0 pclip=100',par))

Result('vo',['vo','ss','rr'],'Overlay')
Result('vv',['vv','ss','rr'],'Overlay')
Result('rm',['rm','ss','rr'],'Overlay')

# ------------------------------------------------------------
# finite-differences modeling
fdmod.amodel('do','wo','wav','vv','rm','ss','rr','free=y dens=n',par)
fdmod.amodel('dd','ww','wav','vv','rm','ss','rr','free=y dens=y',par)

Flow('wx','ww wo','add ${SOURCES[1]} scale=1,-1')

Result('wo',fdmod.wgrey('pclip=99',par))
Result('ww',fdmod.wgrey('pclip=99',par))
Result('wx',fdmod.wgrey('pclip=99',par))

# source wavefield
Flow('dw','wav',
     'pad beg2=200 n2out=%(nx)d | put o2=%(ox)g d2=%(dx)g | transp' % par)

# ------------------------------------------------------------
# RTM
Flow('dx','dd do','add ${SOURCES[1]} scale=1,-1')

fdmod.rtm('io','dw','dx','vo','rm','rr','rr','free=y dens=n',2000,par)
fdmod.rtm('ii','dw','dx','vv','rm','rr','rr','free=y dens=n',2000,par)

Result('io',fdmod.cgrey('pclip=100',par))
Result('ii',fdmod.cgrey('pclip=100',par))

# ------------------------------------------------------------
# WEM
wpar={'nw':100, 'ow':1, 'jw':1,'nrmax':1}
par.update(wpar)

zomig.wem('jo','dw','dx','vo','',par)
zomig.wem('jj','dw','dx','vv','',par)

Result('jo',fdmod.cgrey('pclip=100',par))
Result('jj',fdmod.cgrey('pclip=100',par))

# ------------------------------------------------------------

End()
