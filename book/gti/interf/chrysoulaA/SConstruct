## 
 # Chrysoula Tsogka
 # active array setup
 ##
from rsfproj import *
import fdmod,zomig
import math

# ------------------------------------------------------------
par = {
    'lo':3,    # wavelength (m)
    'co':3000, # velocity (m/s)
    'fo':1000, # central frequency (Hz)
    'nt':20000, 'ot':0, 'dt':0.000015,'lt':'label1=t unit1=s',
    'ox':0,                           'lx':'label2=x unit2=m',
    'oz':0,                           'lz':'label1=z unit1=m',
    'kt':40,  # wavelet delay
    'nbx':250, 'tx':0.0015,
    'nbz':250, 'tz':0.0015,
    'jsnap':100, 'height':10
    }

par['dx']=0.1
par['nx']=2880

par['dz']=0.1
par['nz']=2880

par['To'] = 1./par['fo']
par['pi'] = 4*math.atan(1.)

# ------------------------------------------------------------

par['jx']=1
par['dr']=par['dx']*par['jx']
par['nr']=par['nx']/par['jx']
par['or']=par['dx']*par['jx']/2

# add F-D modeling parameters
fdmod.param(par)

# ------------------------------------------------------------
# wavelet
Flow('del',None,
     '''
     spike n1=%(nt)d d1=%(dt)g o1=%(ot)g |
     math output="x1" |
     math output="%(pi)g*%(fo)g*(input-%(To)g)"
     ''' % par)
Flow(  'wav','del','math output="-2*2*%(pi)g*%(fo)g*input*exp(-input*input)"' % par )
Result('wav','window n1=200 | graph title="" label1="t" label2=')

# ------------------------------------------------------------
# source coordinates
zt = par['oz']+85*par['lo']
xt = par['ox']+par['nx']/2*par['dx']

zs = par['lo']
xs = xt

ls = 6*par['lo']

zs0 = zt+2*ls/3
xs0 = xt

zs1 = zt-ls/3
xs1 = xt-0.58*ls

zs2 = zt-ls/3
xs2 = xt+0.58*ls

par['jzt'] = zt / par['dz']
par['jxt'] = xt / par['dx']

par['jzs0'] = zs0 / par['dz']
par['jxs0'] = xs0 / par['dx']

par['jzs1'] = zs1 / par['dz']
par['jxs1'] = xs1 / par['dx']

par['jzs2'] = zs2 / par['dz']
par['jxs2'] = xs2 / par['dx']

Flow('s_',None,'math n1=1      d1=1      o1=0      output=0' % par)

# source position
Flow('zs','s_','math output="%g"' % zs)
Flow('xs','s_','math output="%g"' % xs)
Flow('rs','s_','math output=1')
Flow('ss',['xs','zs','rs'],
     '''
     cat axis=2 space=n
     ${SOURCES[0]} ${SOURCES[1]} ${SOURCES[2]} | transp
     ''', stdin=0)
Plot('ss','window n1=2 | dd type=complex | window | '
     + fdmod.cgraph('symbol=o plotcol=0 wantscalebar=y',par))

# ------------------------------------------------------------
# experiment setup
Flow('r_',None,'math n1=%(nr)d d1=%(dr)g o1=%(or)g output=1' % par)

# receiver positions
Flow('zr','r_','math output="%g"'% (par['lo']) )
Flow('xr','r_','math output="x1"')
Flow('rr',['xr','zr'],
     '''
     cat axis=2 sace=n
     ${SOURCES[0]} ${SOURCES[1]} | transp
     ''', stdin=0)
Plot('rr','window n1=2 | dd type=complex | window j2=1 | '
     + fdmod.cgraph('symbol=. plotcol=0 wantscalebar=y',par))

# ------------------------------------------------------------
# receivers around target
nq = 15  * par['lo']/par['dx']
oq =     xt - nq/2 * par['dx']
dq =                 par['dx']
np =     nq
op =     zt - np/2 * par['dz']
dp =                 par['dz']

Flow('q_',None,
     '''
     math output=1
     n1=%d d1=%g o1=%g
     n2=%d d2=%g o2=%g
     ''' % (np,dp,op,nq,dq,oq) )

Flow('zq','q_','math output="x1" | put n1=%d n2=1' % (np*nq))
Flow('xq','q_','math output="x2" | put n1=%d n2=1' % (np*nq))
Flow('qq',['xq','zq'],
     '''
     cat axis=2 sace=n
     ${SOURCES[0]} ${SOURCES[1]} | transp
     ''', stdin=0)

Plot('qq','window n1=2 | dd type=complex | window | '
     + fdmod.cgraph('symbol=. plotcol=0 wantscalebar=y',par))

# ------------------------------------------------------------
Flow('mask',None,
     '''
     spike nsp=1 mag=1
     n1=%(nz)d o1=%(oz)g d1=%(dz)g k1=100 l1=%(nz)d
     n2=%(nx)d o2=%(ox)g d2=%(dx)g |
     smooth rect1=25
     ''' % par)
Flow('dask',None,
     '''
     spike nsp=3 mag=1,1,1
     n1=%(nz)d o1=%(oz)g d1=%(dz)g k1=%(jzs0)d,%(jzs1)d,%(jzs2)d l1=%(jzs0)d,%(jzs1)d,%(jzs2)d
     n2=%(nx)d o2=%(ox)g d2=%(dx)g k2=%(jxs0)d,%(jxs1)d,%(jxs2)d l2=%(jxs0)d,%(jxs1)d,%(jxs2)d |
     smooth rect1=5 rect2=5 repeat=15 |
     scale axis=123 |
     mask min=0.5 max=1 |
     dd type=float |
     scale rscale=-1 |
     add add=1
     ''' % par)

Result('dask',fdmod.cgrey('pclip=100 grid=y gridcol=2 g2num=%(lo)g g1num=%(lo)g'% par,par))

# ------------------------------------------------------------
# velocity
Flow('vv','velo.hh mask dask',
     '''
     scale rscale=1000 |
     add add=-%(co)g |
     add mode=p ${SOURCES[1]} |
     add add=+%(co)g |
     add mode=p ${SOURCES[2]}
     ''' % par)
Flow('vx','vv','math output=3000')
Flow('vo','vx dask','add mode=p ${SOURCES[1]}' % par)

Flow('rm',None,
     '''
     spike nsp=1 mag=1
     n1=%(nz)d o1=%(oz)g d1=%(dz)g
     n2=%(nx)d o2=%(ox)g d2=%(dx)g
     ''' % par)

Plot('vx',fdmod.cgrey('allpos=y bias=2500 pclip=100 color=j wantscalebar=y',par))
Plot('vo',fdmod.cgrey('allpos=y bias=2500 pclip=100 color=j wantscalebar=y',par))
Plot('vv','add add=-3000 | clip clip=500 | add add=3000 |' +
     fdmod.cgrey('allpos=y bias=2500 pclip=100 color=j wantscalebar=y',par))
Plot('rm',fdmod.cgrey('allpos=y pclip=100 wantscalebar=y',par))

Result('vx',['vx','rr',     'ss'],'Overlay')
Result('rm',['rm','rr','qq','ss'],'Overlay')

# ------------------------------------------------------------
# source wavefield
Flow('dw','wav',
     '''
     pad beg2=%d n2out=%d |
     put o2=%g d2=%g | 
     transp
     ''' % (par['nr']/2,par['nr'],par['or'],par['dr']))

# ------------------------------------------------------------
fdmod.amodel('dx','wx','wav','vx','rm','ss','rr','free=n dens=n',par)

# ------------------------------------------------------------
for kt in ('to','tt'):
    if(kt=='to'):
        kw='wo'
        kd='do'
        kv='vo'
        ki='io'
    else:
        kw='ww'
        kd='dd'
        kv='vv'
        ki='ii'

    Result(kv,[kv,'rr',     'ss'],'Overlay')

    # FDM
    fdmod.amodel(kd,kw,'wav',kv,'rm','ss','rr','free=n dens=n',par)
    Flow(kt,[kd,'dx'],
         '''
         add ${SOURCES[1]} scale=1,-1 |
         window f2=%(kt)d |
         pad end2=%(kt)d |
         put o2=%(ot)g
         ''' % par)
    Result(kw,            fdmod.wgrey('pclip=99',par))
    Result(kt,'transp|' + fdmod.dgrey('',par))

    # RTM
    fdmod.rtm('t'+ki,'dw',kd,'vx','rm','rr','rr','qq','free=y dens=n',2000,par)
    Flow(ki,'t'+ki,
         '''
         put
         n1=%d o1=%g d1=%g
         n2=%d o2=%g d2=%g 
         ''' % (np,op,dp,nq,oq,dq) )
    
    Plot(ki,fdmod.cgrey('pclip=100 wantscalebar=y',par))
    Result(ki,[ki,'ss','rr'],'Overlay')

# ------------------------------------------------------------
fdmod.wom('wom','ww','vv',par['co'],par)
Result(   'wom',fdmod.wgrey('pclip=95',par))

End()

