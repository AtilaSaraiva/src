from rsfproj import *
import math

private = {'login':os.environ.get('BEG_LOGIN'),
           'password':os.environ.get('BEG_PASSWORD'),
           'server':os.environ.get('BEG_SERVER')}

parts = []
for x in range(16):
    # pattern substitution
    segy = 'S076_1P1765_SSL%d_HDRSRMC.sgy' % (x+1)
    # get the data
    Fetch(segy,'claudio',private)

    # convert segy to RSF
    part = 'part%d' % x
    Flow([part,part+'.asc',part+'.bin'],segy,
         '''
         segyread tape=$SOURCE tfile=${TARGETS[0]} read=h
         hfile=${TARGETS[1]} bfile=${TARGETS[2]}
         ''',stdin=0,stdout=0)
    parts.append(part)

# merged parts
Flow('head',parts,'cat axis=2 ${SOURCES[1:16]}')

# integer to floating point
refx = 311000  # reference point
refy = 3004700 # reference point

header = {'sx':21,'sy':22,'gx':23,'gy':24}
keys = header.keys()

for key in keys:
    # window a particular key, subtract the reference, convert to float
    Flow(key,'head',
         '''
         window n1=1 f1=%d |
         add add=-%d |
         dd type=float
         ''' % (header[key],(refx,refy)[key[1]=='y']))

az = 0.79 + 0.5*math.pi
sin = math.sin(az)
cos = math.cos(az)
rotate = '''
math
sx=${SOURCES[0]} sy=${SOURCES[1]}
gx=${SOURCES[2]} gy=${SOURCES[3]}
output="((%g)*%sx+(%g)*%sy)/1000"
'''

for key in ('s','g'):
    Flow(key+'x2',keys,rotate % (cos,key,sin,key)) 
    Flow(key+'y2',keys,rotate % (-sin,key,cos,key))
    Plot(key,[key+'x2',key+'y2'],
         '''
         cmplx $SOURCES |
         window j1=100 |
         graph symbol=%s title="%s Distribution"
         label1=%sx label2=%sy unit1=km unit2=km
         transp=y
         ''' % (key,('Source','Receiver')[key=='g'],key,key),
         stdin=0)

Result('geom','s g','SideBySideAniso')

# Create a geometry cube [4 (sx,sy,gx,gy) * receivers * shots]
Flow('hmat','sx2 sy2 gx2 gy2',
     '''
     cat axis=2 ${SOURCES[1:4]} |
     transp |
     headersort head=$SOURCE |
     put n2=2544 n3=1799
     ''')

Result('hmat',
       '''
       window j2=2 | dd type=complex |
       transp | graph symbol=* symbolsz=6,2 wanttitle=n
       ''')

# Offsets
Flow('hx','hmat','headermath sx=0 gx=1 output=gx-sx')
Flow('hy','hmat','headermath sy=0 gy=1 output=gy-sy')


End()
