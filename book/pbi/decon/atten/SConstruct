from rsfproj import *
import os,math

private = {'login':os.environ.get('BEG_LOGIN'),
           'password':os.environ.get('BEG_PASSWORD'),
           'server':os.environ.get('BEG_SERVER')}

Fetch('1522.h','fugro',private)

Flow('deep','1522.h',
     'dd form=native | window min2=160000 max2=210000 | scale dscale=10000')
Result('deep','grey title="Original Image" ')

Flow('dip','deep','dip rect1=50 rect2=50')
Result('ddip','dip','grey color=j scalebar=y title="Local Dip" ')

Flow('vg','deep dip','pwdsigk dips=${SOURCES[1]} verb=y eps=1 nliter=3')

Flow('dips','dip','transp | remap1 n1=4096 | transp')

Flow('seis','deep dips','pad n2=4096 | seislet dip=${SOURCES[1]} adj=y inv=y')

Flow('svg','seis dips','cut f2=256 | seislet dip=${SOURCES[1]} adj=n | window n2=4001')

Result('svg','grey title=Cleaned ')

ifreq = 'iphase rect1=50 rect2=50 order=100 verb=y'
plotfreq = '''
       math output="%g/input" |
       grey color=j scalebar=y title="Attenuation" 
       barlabel="Local Wavelength (m)" label1="Depth (m)"
       minval=20 maxval=200
       bias=20 allpos=y clip=180
       ''' % (2.*math.pi*7)

Flow('freq','deep',ifreq)
Result('dfreq','freq',plotfreq)

Flow('rect','freq',
     'math output="sqrt(1+12*(1/input^2-1/1.26^2))" | dd type=int')

for iter in (1,2):
    debl = 'debl%d' % iter
    Flow(debl,'deep rect',
         '''
         deblur rect=${SOURCES[1]} verb=y niter=20 eps=0.01 nliter=%d
         ''' % iter)
    
Result('debl1','grey title="Deblurred" ')

Plot('deep','window min1=10000 | grey title="Original" ')
Plot('debl1','window min1=10000 | grey title="Deblurred" ')

Result('debl','deep debl1','OverUnderAniso')

Plot('deep0','deep', 'window max1=5000 | grey title="Original" ')
Plot('debl0','debl1','window max1=5000 | grey title="Deblurred" ')

Result('debl0','deep0 debl0','OverUnderAniso')

Flow('freq2','debl1',ifreq)
Result('dfreq2','freq2',plotfreq)

Flow('dspec','deep','spectra all=y')
Flow('dspec2','debl1','spectra all=y')

Result('dspec','dspec dspec2',
       '''
       cat axis=2 ${SOURCES[1]} |
       graph title="Vertical Spectra"
       dash=0,1
       label1="1/m"
       ''')

End()
