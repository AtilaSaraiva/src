from rsfproj import *

Flow('mod_spike',None,
     '''
     spike n1=1200 n2=40 o2=-0.2 d2=0.02
     k1=200,620,970,200,620,970
     k2=13,13,13,38,18,15
     mag=2,2,2,2,2,2
     nsp=6 |
     bandpass flo=10 fhi=30
     ''')
Flow('dat_spike','mod_spike','radon parab=y nx=60 ox=0 dx=0.025 adj=n')

gmod = '''
grey transp=y poly=y yreverse=y crowd=0.89
label2="q s.km^2" label1=time unit1=s title="radon domain"
'''

wmod = '''
wiggle transp=y poly=y yreverse=y crowd=0.89
label2="q s.km^2" label1=time unit1=s title="radon domain"
'''

gdat = '''
grey transp=y poly=y yreverse=y crowd=0.89
label2="offset(km)" label1=time unit1=s title="cmp domain"
'''

Plot('mod_spike',gmod + ' pclip=100')
Plot('dat_spike',gdat)
Result('datasynt','mod_spike dat_spike','SideBySideAniso')

Flow('data','data.hh','dd form=native')
Flow('gulf','gulf.hh','dd form=native | window min1=8 max1=13')

for data in ('data','gulf'):
    Fetch(data+'.hh','rad')
    Plot(data,gdat)

prange = {
    'data': 'p0=-0.05 np=201 dp=0.001',
    'gulf': 'p0=-0.02 np=101 dp=0.0004'
}

xrange = {
    'data': 'nx=60 ox=0.275 dx=0.05',
    'gulf': 'nx=90 ox=0.255 dx=0.1'
    }

clip = {
    'data': 131.365,
    'gulf': 0.903304
    }

mutter = {
    'data': 1.8,
    'gulf': 1
    }

gate = {
    'data': 'min2=-0.02 max2=0.02 | pad beg2=30 n2=201',
    'gulf': 'min2=-0.004 max2=0.004 | pad beg2=40 n2=101'
    }

for case in range(4):
    rad = 'rad%d' % case
    frw = 'frw%d' % case
    mul = 'mul%d' % case
    Flow(rad,'dat_spike',
         'radon parab=y adj=y inv=%d spk=%d p0=-0.2 np=60 dp=0.02' %
         (case > 0, case > 1))
    Flow(frw,rad,
         'radon parab=y adj=n nx=60 ox=0 dx=0.025')
    Flow(mul,rad,
         'window n2=14 | pad n2=60 | radon parab=y adj=n nx=60 ox=0 dx=0.025')

    Plot(rad,gmod + ' pclip=100')
    Plot(frw,gdat)
    Plot(mul,gdat + ' title=primaries')

    Result('radon%d' % case,[rad,frw,mul],'SideBySideAniso')

    for data in ('data','gulf'):
        rad = '%s_rad%d' % (data,case)
        frw = '%s_frw%d' % (data,case)
        mul = '%s_mul%d' % (data,case)
        pri = '%s_pri%d' % (data,case)
        err = '%s_err%d' % (data,case)

        Flow(rad,data,
             'radon parab=y adj=y inv=%d spk=%d ns=%d %s eps=1' %
             (case > 0, case > 1, case-1, prange[data]))
        Flow(frw,rad,
             'radon parab=y adj=n %s | mutter half=n v0=%g' %
             (xrange[data],mutter[data]))

        Plot(rad,gmod)
        Plot(frw,gdat)

        if case==0:
            Result('%s-radon%d' % (data,case),[rad,frw,data],'SideBySideAniso')
        else:
            Plot(err,[frw,data],
                 'add scale=1,-1 ${SOURCES[1]} | %s clip=%g' %
                 (gdat,clip[data]))
            Result('%s-radon%d' % (data,case),[rad,frw,err],'SideBySideAniso')

            Flow(mul,rad,
                 'window %s | radon parab=y adj=n %s' %
                 (gate[data],xrange[data]))
            Plot(mul,'mutter half=n v0=%g | %s title=primaries clip=%g' %
                 (mutter[data],gdat,clip[data]))

            Flow(pri,[data,mul],'add scale=1,-1 ${SOURCES[1]}')
            Plot(pri,'mutter half=n v0=%g | %s title=multiples clip=%g' %
                 (mutter[data],gdat,clip[data]))
            Result('%s%d' % (data,case),[data,mul,pri],'SideBySideAniso')

############################################################################

End()
