from rsfproj import *
from math import pi,cos,sin

Fetch('bay.h','bay')

Flow('bay','bay.h',
     '''
     dd form=native |
     window f2=500 n2=1600 f1=50 n1=1050 |
     reverse which=1 |
     costaper nw1=50 nw2=50
     ''')

Flow('p','bay','deriv')
Flow('q','bay','transp | deriv | transp')
Flow('n','p q','math p=${SOURCES[0]} q=${SOURCES[1]} output="1/sqrt(p*p+q*q+1)" ',stdin=0)
Flow('p2','p n','add mode=p ${SOURCES[1]}')
Flow('q2','q n','add mode=p ${SOURCES[1]}')

sembs = []
for theta in range(0,91,10):
    semb = 'semb%d' % theta
    sembs.append(semb)
    shades = []
    for phi in range(0,361,10):
        shade = 'shade%d-%d' % (theta,phi)
        theta2 = theta*pi/180
        phi2 = phi*pi/180
        Flow(shade,'n p2 q2',
             '''
             add scale=%g,%g,%g ${SOURCES[1:3]} |
             math output="log(1+cos(input)^4)"
             ''' % (cos(theta2),-sin(theta2)*cos(phi2),-sin(theta2)*sin(phi2)))
        Flow(shade+'-2',shade,'stack norm=n | stack norm=n axis=1 | math output="input*input" ')
        Flow(shade+'-4',shade,'add mode=p $SOURCE | stack norm=n | stack norm=n axis=1')
        Flow(shade+'-1',[shade+'-4',shade+'-2'],'add mode=d ${SOURCES[1]}')
        shades.append(shade+'-1')
    Flow(semb,shades,'cat axis=1 ${SOURCES[1:%d]} | put o1=0 d1=10' % len(shades))
Flow('semb',sembs,'cat axis=2 ${SOURCES[1:%d]} | put o2=0 d2=10' % len(sembs))

Result('shade','shade60-60','grey allpos=y title="Optimal Shading" ')

End()
