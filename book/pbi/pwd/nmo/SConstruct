import string

from rsfproj import *

Fetch('midpts.hh','midpts')
Flow('cdp','midpts.hh','window n3=1 | dd form=native')
Flow('mutter','cdp','mutter half=n v0=1.4')
Plot('mutter','grey title=Input')

Flow('mask','cdp','math output=1 | mutter half=n v0=1.4 tp=0.4')

Flow('velsmb','mutter',
     'vscan slowness=y half=n v0=0.3 nv=81 dv=0.005 semblance=y')
Flow('velpick','velsmb','blindpick2 eps=500')
Plot('pick','velpick',
     '''
     window | graph yreverse=y transp=y
     wheretitle=b wherexlabel=t title=Slowness
     min2=0.3 max2=0.7 pad=y
     ''')

d2=0.134
d1=0.004

def dip(slow2):
    return '''
    math output="(%g*x2/x1)" | mutter half=n v0=1.6 tp=0.4
    ''' % (slow2*d2/d1)
    
Flow('dip0','mutter',dip(1./3.-1./9.))
Flow('dip1','mutter',dip(1./9.))

Flow('dip2',['mutter','dip0','dip1'],
     '''
     nmostretch half=n v0=3 |
     twodip2 dip1=${SOURCES[1]} q0=0
     order=3 niter=10 eps=50 lam=10 |
     window n3=1 |
     math ref=${SOURCES[2]} output="input+ref" 
     ''')

Flow('dip3',['mutter','dip2'],
     'dip2 gauss=n dip0=${SOURCES[1]} order=3 niter=10 eps=50 lam=10')
Plot('dip','dip3','grey title=Slope allpos=y')

Flow('pwd','mutter dip3','pwd order=3 dip=${SOURCES[1]}')
Plot('pwd','grey title=Residual clip=4.38943e+06')

Result('npwd','mutter dip pwd','SideBySideAniso',vppen='txscale=1.5')

Flow('txt','mutter dip3',
     '''
     noise rep=y seed=2004 |
     trismooth2 rect2=10 dip=${SOURCES[1]} |
     mutter half=n v0=1.4
     ''')
Plot('txt','grey title=Texture')

Flow('txt2','mutter dip3',
     '''
     noise rep=y seed=2004 |
     pwdsmooth2 rect2=10 dip=${SOURCES[1]} |
     mutter half=n v0=1.4
     ''')
Plot('txt2','grey title=Texture')

Result('ntxt','mutter dip txt','SideBySideAniso',vppen='txscale=1.5')

Flow('nmo','mutter velpick','nmo velocity=${SOURCES[1]} slowness=y half=n')
Plot('nmo','grey title="Normal Moveout" ')

Result('nmo','mutter pick nmo','SideBySideAniso',vppen='txscale=1.5')

Flow('pnmo vel','mutter dip3',
     'pnmo dip=${SOURCES[1]} vel=${TARGETS[1]} half=n')
Plot('pnmo','grey title="Oriented Normal Moveout" ')

Result('pnmo','mutter dip pnmo','SideBySideAniso',vppen='txscale=1.5')

Flow('dip05','dip3','window min2=0.5')
Flow('vtr','mutter dip05',
     '''
     window min2=0.5 |
     pveltran v0=1.5 dv=0.01 nv=151 half=n dip=${SOURCES[1]}
     ''')
Plot('vtr',
     '''
     envelope | 
     grey allpos=y label2="Velocity (km/s)"
     title="Oriented Velocity Scan"
     ''')


Flow('vin','mutter dip05 dipt05',
     '''
     window min2=0.5 |
     pveltran v0=1.5 dv=0.01 nv=151 half=n dip=${SOURCES[1]}
     ''')
Plot('vin',
     '''
     envelope | 
     grey allpos=y label2="Velocity (km/s)"
     title="Oriented Velocity Scan"
     ''')


Flow('vsc','mutter','vscan v0=1.5 dv=0.01 nv=151 half=n')
Plot('vsc',
     '''
     envelope | 
     grey allpos=y label2="Velocity (km/s)"
     title="Velocity Scan"
     ''')

Result('pvsc','vsc vtr','SideBySideAniso',vppen='txscale=1.5')

Plot('vel',
     '''
     mutter half=n v0=1.4 | window min2=0.5 | 
     grey allpos=y scalebar=y title='Oriented Vrms'
     barlabel="Velocity (km/s)" minval=1.5 maxval=3 clip=1.5 bias=1.5
     color=j
     ''')

Flow('vel0','vel',
     'window f2=2 n2=10 max1=3.5 | stack')
Plot('vel0',
     '''
     graph title="Estimated Vrms" yreverse=y transp=y
     wherexlabel=t wheretitle=b label2="Velocity (km/s)"
     ''')

Flow('flat','mutter dip3','flat dip=${SOURCES[1]}')
Flow('fdip','flat','dip2 gauss=n niter=10 eps=50 lam=10')
Flow('flat2','flat fdip','flat dip=${SOURCES[1]}')

Plot('flat','flat2','grey title=Flattened 1')

Result('flat','mutter dip flat','SideBySideAniso',vppen='txscale=1.5')

Result('comp','nmo pnmo flat','SideBySideAniso',vppen='txscale=1.5')

Flow('vrms',None,'math d1=0.004 n1=1001 o1=0 output="x1*125+2000" ')

Flow('vint','vrms','math output="125*sqrt((16+x1)*(16+3*x1))" ')
Plot('vint',
     '''
     graph transp=y yreverse=y min2=2000 max2=3000
     pad=n wantaxis=n wanttitle=n
     ''')

Flow('synt','vrms',
     '''
     spike d1=0.004 n1=1001 o1=0 nsp=17 n2=128 d2=20 o2=0
     label2="Offset (m)"
     k1=%s
     mag=1,1,1,1,-1,1,1,-1,1,1,1,-1,1,1,-1,1,1 |
     bandpass flo=4 fhi=20 |
     inmo velocity=$SOURCE half=n
     ''' % string.join(map(str,range (100,916,48)),','), stdin=0)
Plot('synt','grey title=Input')

Flow('sdip0','synt',
     '''
     math output="(0.00125*(x2+10)/x1)" |
     mutter half=n v0=10000 t0=0.004 tp=0.1
     ''')
Flow('sdip','synt sdip0',
     '''
     dip order=3 liter=100 pmin=0
     idip=${SOURCES[1]} niter=10 rect1=40 rect2=5
     ''')
Plot('sdip','grey title=Slope allpos=y scalebar=y clip=2 maxval=2')

Flow('dipx','sdip','transp | deriv order=3 | transp')
Flow('dipt','sdip','deriv order=3')
Flow('ssdip','sdip dipx dipt',
     'math dx=${SOURCES[1]} dt=${SOURCES[2]} output="input*dt+dx" ')
Plot('ssdip','grey title=Curvature scalebar=y allpos=y minval=0 pclip=90')

Flow('test1','sdip',
     'scale dscale=%g | math output="input*(x1-input*(x2+10))" ' % (0.004/20))
Plot('test1','grey color=j allpos=y scalebar=y clip=0.0004')

Flow('test2','ssdip',
     'scale dscale=%g | math output="input*x1*(x2+10)" ' % (0.004/(20*20)))
Plot('test2','grey color=j allpos=y scalebar=y clip=0.0004')

Flow('spnmo svel','synt sdip',
     'pnmo half=n dip=${SOURCES[1]} vel=${TARGETS[1]}')
Plot('spnmo','grey title="Oriented Normal Moveout" ')

Flow('sspnmo ssvel sseta','synt sdip ssdip',
     '''
     pnmo dip=${SOURCES[1]} crv=${SOURCES[2]}
     vel=${TARGETS[1]} eta=${TARGETS[2]} half=n
     ''')
Plot('sspnmo','grey title="Nonhyperbolic Slope Moveout" ')

Result('synt','synt sdip spnmo','SideBySideAniso',vppen='txscale=1.5')

Result('ssynt','synt ssdip sspnmo','SideBySideAniso')

Flow('sdip100','sdip','window min2=100')
Flow('svtr','synt sdip100',
     '''
     window min2=100 |
     pveltran v0=2000 dv=10 nv=101 half=n dip=${SOURCES[1]} niter=20
     ''')
Plot('svtr',
     '''
     envelope |
     grey allpos=y label2="Velocity (m/s)"
     title="Oriented Velocity Scan"
     ''')

Flow('sdipt','sdip100','deriv')
Flow('svin','synt sdip100 sdipt',
     '''
     window min2=100 |
     pveltran v0=2000 dv=10 nv=101 half=n dip=${SOURCES[1]} niter=20
     interval=y dipt=${SOURCES[2]}
     ''')
Plot('svin',
     '''
     envelope |
     grey allpos=y label2="Interval Velocity (m/s)"
     title="Oriented Velocity Scan" min2=2000 max2=3000
     ''')
Result('svin','svin vint','Overlay')

Flow('svsc','synt','vscan v0=2000 dv=10 nv=101 half=n')
Plot('svsc',
     '''
     envelope |
     grey allpos=y label2="Velocity (m/s)"
     title="Velocity Scan"
     ''')

Result('svsc','svsc svtr','SideBySideAniso',vppen='txscale=1.5')

Flow('sflat','synt sdip','flat dip=${SOURCES[1]}')
Plot('sflat','grey title=Flattened')

Result('sflat','synt sdip sflat','SideBySideAniso')

#Flow('svel','sdip',
#     '''
#     math output="sqrt(abs(5000*(x2+10)/(input*x1)))" |
#     mutter half=n v0=10000 t0=0.004 |
#     pnmo dip=$SOURCE
#     ''')
Plot('svel',
     '''
     window min1=0.5 max1=3.5 min2=100 |
     grey allpos=y bias=2000 scalebar=y title='Oriented Vrms'
     barlabel="Velocity (m/s)" minval=2500 maxval=2000
     ''')

Plot('svel0','svel vrms',
     '''
     window min2=100 | stack |
     cat axis=2 ${SOURCES[1]} |
     window min1=0.5 max1=3.5 |
     graph dash=1,0 title="Estimated/True Vrms" yreverse=y transp=y
     wherexlabel=t wheretitle=b label2="Velocity (m/s)"
     ''')

Result('svel','svel svel0','SideBySideAniso')

Plot('ssvel',
     '''
     window min1=0.5 max1=3.5 min2=100 |
     grey allpos=y bias=2000 scalebar=y
     title='Oriented Nonhyperbolic Vrms'
     barlabel="Velocity (m/s)" minval=2500 maxval=2000
     ''')

Result('ssvel','svel ssvel','SideBySideAniso')

Plot('ssvel0','ssvel vrms',
     '''
     window min2=500 max2=2000 | stack |
     cat axis=2 ${SOURCES[1]} |
     window min1=0.5 max1=3.5 |
     graph dash=1,0 title="Estimated/True Vrms" yreverse=y transp=y
     wherexlabel=t wheretitle=b label2="Velocity (m/s)"
     ''')

Flow('sseta0','sseta','window min2=500 max2=2000 | stack')

Plot('sseta0',
     '''
     math output=0 | cat axis=2 $SOURCE |
     window min1=0.5 max1=3.5 |
     graph dash=0,1 title="Estimated/True Eta" yreverse=y transp=y
     wherexlabel=t wheretitle=b label2=" " min2=-0.2 max2=0.2
     plotcol=5,6
     ''')

Result('sspar','ssvel0 sseta0','SideBySideAniso')

End()
