from rsfproj import *

import os
private = {'login':os.environ.get('BEG_LOGIN'),
           'password':os.environ.get('BEG_PASSWORD'),
           'server':os.environ.get('BEG_SERVER')}

Fetch('mub70.H','fugro',private)

Flow('mub','mub70.H','dd form=native')

Flow('msl','mub','window n3=1 f3=500')
Flow('mask','msl',
     '''
     math output="sqrt(abs(input)*x1)" |
     smooth rect1=100 rect2=3 |
     mask min=10 |
     dd type=float
     ''')

Flow('mdip','msl mask',
     'dip verb=y mask=${SOURCES[1]} rect1=40 rect2=5')
Flow('mcomp','msl mdip','pwdsigk dips=${SOURCES[1]} eps=1 verb=y niter=100')

Flow('mdip2','mcomp mask',
     'dip verb=y mask=${SOURCES[1]} rect1=40 rect2=5')

Flow('mflt','mcomp mdip2 mask',
     'flat dip=${SOURCES[1]} verb=y | add mode=p ${SOURCES[2]}')

Result('msl','window min1=3 max1=10 | grey title=Input')
Result('mflt','window min1=3 max1=10 | grey title="Flattened and Cleaned" ')

#Flow('mdip1','mub','dip2 rect1=40 rect2=5 verb=y gauss=n')

#Flow('mdip3','mdip1',
#     '''
#     transp memsize=1000 plane=23 |
#     smooth rect2=50 |
#     transp memsize=1000 plane=23
#     ''')

Flow('mdip3','mub',
     '''
     dip n4=0 rect1=40 rect2=5 rect3=10 verb=y
     w1=3250 w2=133 w3=45 p1=1 p2=1 p3=23
     ''')

Flow('mask3','mub',
     '''
     math output="sqrt(abs(input)*x1)" | 
     smooth rect1=100 rect2=3 |
     mask min=10 |
     dd type=float
     ''')

Flow('mdip4','mdip3','transp plane=34 memsize=1000')
Flow('mcomb3','mub mdip4','pwdsigk dips=${SOURCES[1]} eps=1 verb=y')

Flow('mflt3','mcomb3 mdip3 mask3',
     'flat dip=${SOURCES[1]} verb=y | window | add mode=p ${SOURCES[2]}')

Flow('mstk','mub','stack')

Result('mstk','grey title="Original Stack" ')

Flow('mstk3','mflt3','stack')

Result('mstk3','grey title="Output Stack" ')

End()
