from rsfproj import *

t0 = 0.6
v0 = 1500

for case in 'pxyz':
    sgy = 'rec_gather_%s.sgy' % string.upper(case)
    Fetch(sgy,'ninec')
    Flow([case,'./h'+case,'./b'+case,'t'+case],sgy,
         '''
         segyread tape=$SOURCE hfile=${TARGETS[1]}
         bfile=${TARGETS[2]} tfile=${TARGETS[3]}
         ''',stdin=0)
    bin='bin'+case
    offset = 'offset'+case
    Flow(offset,'t'+case,'dd type=float | headermath output=sy-gy')
    Flow(bin,[case,offset],
         '''
         transp |
         bin1 head=${SOURCES[1]} x0=-2500 nx=101 dx=50 interp=2 |
         transp
         ''')
    Result(bin,'grey title="%s component" ' % string.upper(case))
    scan='scan'+case
    Flow(scan,bin,'vscan v0=500 dv=25 nv=100 semblance=y half=n')
    Result(scan,
           '''
           grey color=j
           label2="Velocity (m/s)" title="%s Velocity Scan"
           allpos=y
           ''' % case)
    
    if case in 'pz':
        datum = 'datum'+case
        dat = 'dat'+case
        Flow(datum,bin,
             '''
             window n1=1 | math output="sqrt(%g+x1*x1*%g)"
             ''' % (t0*t0,1./(v0*v0)))
        Flow(dat,[bin,datum],'datstretch datum=${SOURCES[1]}')
        Result(dat,'grey title="Reduced %s component" ' % string.upper(case))

nt = 1001

shifts = ['binz']
for s in range(1,11):
    shift = 'shift-%d' % s
    Flow(shift,'binz','window f1=%d | pad end1=%d' % (s,s))
    shifts.append(shift)

    shift = 'shift+%d' % s
    Flow(shift,'binz','window n1=%d | pad beg1=%d' % (nt-s,s))
    shifts.append(shift)
Flow('shifts',shifts,'cat ${SOURCES[1:%d]}' % len(shifts))

Flow('flt pre','shifts binp',
     'lpf match=${SOURCES[1]} pred=${TARGETS[1]} rect1=20 rect2=10 niter=400')
Flow('sig','binp pre','add ${SOURCES[1]}')
Result('sig','grey title="Reduced D" ')


Flow('bak','dat','bandpass flo=10 fhi=125')
Result('bak','grey title="Filtered" ')

Flow('bakp','bak datum','datstretch inv=y datum=${SOURCES[1]}')
Result('bakp','grey title="Filtered" ')

End()
