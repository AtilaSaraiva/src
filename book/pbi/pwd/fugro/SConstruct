from rsfproj import *

import os
private = {'login':os.environ.get('BEG_LOGIN'),
           'password':os.environ.get('BEG_PASSWORD'),
           'server':os.environ.get('BEG_SERVER')}

Fetch('gathers.rsf','fugro',private)

Flow('gather','gathers','window n3=1')
Flow('mutter','gather','mutter v0=3000 tp=0.2')
Flow('mask','gather','math output=1 | mutter v0=3000 tp=0.4')

Flow('vscan','mutter','vscan half=n v0=1500 dv=25 nv=151 semblance=y')
Plot('vscan',
     'grey color=j allpos=y title="Semblance Scan" label2="Velocity (m/s)" ')

Flow('pick','vscan','pick rect1=100')
Plot('pick',
     '''
     window | graph yreverse=y transp=y
     wheretitle=b wherexlabel=t title="Velocity Pick"
     min2=1500 max2=5250 pad=y label2="Velocity (m/s)"
     ''')

Flow('nmo','mutter pick','nmo half=n velocity=${SOURCES[1]}')
Plot('nmo','grey title=NMO')
Plot('nmo1','nmo','window max1=6 | grey title=NMO')
Plot('nmo2','nmo','window max1=3 max2=6000 | grey title=NMO')
Plot('nmo3','nmo','window max1=1.5 max2=4000 | grey title=NMO')

Result('vscan','vscan pick nmo','SideBySideAniso')

Result('nmo','nmo1 nmo2 nmo3','SideBySideAniso')

d2=75
d1=0.004

def dip(slow2):
    return '''
    math output="%g*x2/(x1+0.001)" | mutter v0=3000 tp=0.4
    ''' % (slow2*d2/d1)

Flow('dip0','mutter',dip(1./3000.-1./(3000.*3000.)))
Flow('dip1','mutter',dip(1./(3000.*3000.)))

Flow('dip2',['mutter','dip0','mask','dip1'],
     '''
     nmostretch half=n v0=3000 |
     twodip2 dip1=${SOURCES[1]} q0=0
     niter=10 eps=50 lam=10 |
     window n3=1 | add ${SOURCES[3]}
     ''')

Flow('dip','mutter dip2',
     'dip2 gauss=n dip0=${SOURCES[1]} niter=10 eps=50 lam=10')

Flow('flt','mutter dip','flat dip=${SOURCES[1]}')

bins = []
for case in ('','1','2'):
    bin = 'comaz.1234.bin'+case
    Fetch(bin,'fugro',private)
    bins.append(bin)
Flow(['./comaz','./comaz.bin'],bins,
     '''
     %s ${SOURCES[0:%d]} > ${TARGETS[1]} &&
     echo in=${TARGETS[1]} data_format=native_float
     n1=2401 o1=0 d1=7
     n2=64 o2=0 d2=1.04866e-5
     n3=9216 o3=0 d3=12.5
     ''' % (WhereIs('cat'),len(bin)))

Flow('cstack','comaz','stack')
Result('cstack','grey title=Stack')

Flow('cdata','comaz','window min3=15000 max3=25000 | bandpass fhi=0.035')
Flow('cband','comaz','bandpass fhi=0.035')
Flow('cdipz','cband',
     '''
     dip n4=0 rect1=40 rect2=5 rect3=10
     memsize=1 niter=2 liter=5 w1=2401 w2=64 verb=y
     ''')

Result('ccstack','cdata',
       'stack | window max1=10000 | grey title="Stack (Before)" ')

Flow('cpat','cdata','patch w=2401,64,100')
Flow('cpip','cpat',
     'dip n4=0 rect1=40 rect2=5 rect3=10 verb=y')
Flow('cdip','cpip','patch inv=y weight=y')
Flow('cdip2','cdip','mutter v0=1000 tp=5000')

Flow('cflat','cdata cdip2','flat dip=${SOURCES[1]}')

Result('ccstack2','cflat',
       'stack | window max1=10000 | grey title="Stack (After)" ')

Flow('wdip','cdata',
     '''
     window n3=222 |
     dip n4=0 rect1=40 rect2=5 rect3=10 memsize=600 w1=2401 w2=64 verb=y
     ''')

for f3 in range(0,801,100):
    data = 'cdata%d' % f3
    dip = 'cdip%d' % f3
    flat = 'cflat%d' % f3 
    Flow(data,'cdata','window n3=1 f3=%d' % f3)
    Plot(data,'window max1=10000 | grey title=Input crowd1=0.9')

    Flow(dip,data,
         'dip rect1=40 rect2=5 liter=40 | mutter v0=1000 tp=5000')
    Plot(dip,'window max1=10000 | grey title=Dip crowd1=0.9 color=j')

    Flow(flat,[data,dip],'flat dip=${SOURCES[1]}')
    Plot(flat,'window max1=10000 | grey title=Output crowd1=0.9')

    Result(flat,[data,dip,flat],'SideBySideAniso')

Result('cbef','cdata200 cdata400 cdata800','SideBySideAniso')
Result('caft','cflat200 cflat400 cflat800','SideBySideAniso')

End()
