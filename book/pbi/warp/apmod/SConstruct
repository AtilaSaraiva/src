from rsfproj import *

import os, string
import warp

private = {'login':os.environ.get('BEG_LOGIN'),
           'password':os.environ.get('BEG_PASSWORD'),
           'server':os.environ.get('BEG_SERVER')}

for case in ('vp','vs','rho'):
    rsf = 'il270_%s.rsf' % case
    Fetch(rsf,'apache',private)
    Flow(case,rsf,'dd form=native | put o2=0 d2=1 | despike2 wide=3')

Flow('mod','vp vs rho',
     '''
     cat axis=3 ${SOURCES[1:3]} | smooth rect2=2 | transp plane=23 |
     modrefl2 dt=0.002 nt=1001
     ''')
Flow('pp','mod','window n2=1 | ricker1 frequency=30 | window max1=0.85 n2=150')
Flow('ps','mod','window f2=2 | ricker1 frequency=15 | window max1=1.45 n2=150')

for mode in ('pp','ps'):
    Result(mode,'grey title="%s" color=G' % string.upper(mode))

gamma = 2.5

Flow('warp0','pp','math output="%g*x1" ' % (0.5*(gamma-1)))

warp.warp2('am','pp','ps','warp0',
           nx=150,
           tmax=0.85,
           inter=1,
           j2=4,
           trace=75,
           dt=0.002,
           g0=0.75,
           gmin=2,
           gmax=3.5,
           ng=51,
           rect1=25,
           rect2=50,
           fmin=10,
           fmax=50,
           frame1=350,
           iter=2,
           clip=0.035)

Flow('vp2','vp','smooth rect2=2 | window n2=150')
Flow('vs2','vs','smooth rect2=2 | window n2=150')

Flow('tpp','vp2',
     '''
     math output="4/input" |
     causint
     ''')
Flow('tps','vp2 vs2',
     '''
     math vs=${SOURCES[1]} output="2/input+2/vs" |
     causint
     ''')

Flow('vpvs','tpp tps',
     'math tps=${SOURCES[1]} output="2*tps/input-1" ')

Flow('vpvs2','tpp vpvs pp',
     '''
     cat ${SOURCES[1]} |
     transp plane=13 |
     transp plane=23 |
     spline pattern=${SOURCES[2]} |
     window
     ''')

Result('vpvs2',
       '''
       grey color=j scalebar=y clip=0.75 bias=2.75 minval=2 maxval=3.5
       label1=Time unit1=s title="Exact Vp/Vs"
       ''')

Result('vp2',
       '''
       grey color=j scalebar=y bias=3000
       label1=Time unit1=s title=Vp
       barlabel=Velocity barunit=m/s barreverse=y
       ''')

Result('vs2',
       '''
       grey color=j scalebar=y bias=1350
       label1=Time unit1=s title=Vs
       barlabel=Velocity barunit=m/s barreverse=y
       ''')

End()
