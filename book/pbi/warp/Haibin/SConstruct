from rsfproj import *
import math

###########################################################################
#
# Data
#
###########################################################################

data = {
    'pp': 'pz_221.sgy',
    'ps': '221_PS_PSTM_FullLine_STK_MSL_segy.sgy'
    }

import os
private = {'login':os.environ.get('BEG_LOGIN'),
           'password':os.environ.get('BEG_PASSWORD'),
           'server':os.environ.get('BEG_SERVER')}

trace=1000

o2 = {'ps': 15507,'pp': 15513}

for mode in ['pp','ps']:
    Fetch(data[mode],'haibin',private)
    Flow(['./'+mode+'0','./'+mode+'hhead','./'+mode+'bhead',mode+'head'],
         data[mode],
         '''
         segyread tape=$SOURCE tfile=${TARGETS[3]}
         hfile=${TARGETS[1]} bfile=${TARGETS[2]} |
         put o2=%g d2=2
         ''' % o2[mode],stdin=0)
    Flow(mode,mode+'0','window min2=15513 max2=21837')
    Result(mode,'grey title=%s label1="Time (s)" ' % string.upper(mode))

    Flow(mode+'trace',mode,'window n2=1 f2=%d' % trace)

Result('ppwin','pp','window max1=3 | grey title=PP label1="Time (s)" ')
Result('pswin','ps','window max1=6 | grey title=PS label1="Time (s)" ')

Result('wgtrace','pptrace pstrace',
       '''
       pad n1=3751 | cat axis=2 ${SOURCES[1]} |
       dots poly=y label1="Time (s)" labels=PP:PS
       ''')

#############################################################################
#
# Trace processing
#
#############################################################################

tmax = 5

precon = '''
window max1=%g | bandpass flo=3 nplo=20 fhi=60 nphi=14 |
costaper nw1=100 | scale axis=2
''' % tmax

Flow('pptrace1','pptrace',precon)

Fetch('gamma.rsf','haibin',private)

Flow('warp0','gamma.rsf pptrace1',
     '''
     dd form=native |
     smooth rect1=10 | smooth rect1=10 |
     math output="(input+1)*x1/2" |
     spline pattern=${SOURCES[1]} |
     math output=input-x1
     ''')

def difplot(min1,max1):
    return '''
    add scale=1,-1 ${SOURCES[1]} |
    cat ${SOURCES[0]} ${SOURCES[1]} axis=2 |
    window min1=%g max1=%g |
    dots gaineach=0
    labels="Difference:PS warped:PP" label1="Time (s)"
    ''' % (min1,max1)

warp0 = '''
warp1 other=${SOURCES[1]} warpin=${SOURCES[2]} verb=1 nliter=0 |
''' + precon

Flow('wtrace',['pstrace','pptrace1','warp0'],warp0)
Plot('warp0',['wtrace','pptrace1'],difplot(0,tmax))

def vgraph(min1,max1,min2,max2):
    return '''graph wanttitle=n min1=%g max1=%g min2=%g max2=%g
    wherexlabel=t wheretitle=b crowd=0.8 label2="Vp/Vs"
    ''' % (min1,max1,min2,max2)

warp2gamma = '''
math output="input+x1" |
smoothder |
math output="2*input-1" 
'''

Flow('gamma0','warp0',warp2gamma)
Plot('gamma0',vgraph(0,tmax,1,5))
Result('wgarp0','gamma0 warp0','OverUnderAniso')

Plot('seis','pptrace1','graph title="Seismic Trace" ')

for case in (1,2):
    seis = 'seis%d' % case
    Flow(seis,'pptrace1','iphase rect1=%d order=10 hertz=y' % (1,30)[case-1])         
    Plot(seis,
         '''
         graph title="%s Frequency"
         min2=-10 max2=100 plotcol=5
         label1="Time (s)" label2="Frequency (Hz)"
         ''' % ("Instantaneous","Local")[case-1])
    Result(seis,['seis',seis],'OverUnderAniso',vppen='txscale=1.5')

Flow('rect','pptrace1',
     'iphase rect1=30 order=10 | math output="sqrt(1+12*(1/input^2-1/1.025^2))" | dd type=int')

Flow('debl','pptrace1 rect',
     'deblur rect=${SOURCES[1]} verb=y niter=100 eps=0.1 nliter=1')

Plot('bseis','pptrace1',
     '''
     iphase rect1=30 order=10 band=y |
     scale dscale=%g |
     graph title="Local Bandwidth"
     min2=-10 max2=100
     ''' % (0.5/(math.pi*0.004)))

####################################################################
# SPECTRAL BALANCING
####################################################################
## Flow('pwin','pptrace1','window1 nw=4 w=600')
## Flow('swin','wtrace','window1 nw=4 w=600')

## rick = 'spectra | ricker niter=1000 ma=$TARGET m=20'

## Flow('prick','pwin',rick,stdout=0)
## Flow('srick','swin',rick,stdout=0)

## reshape = '''
## reshape in2=${SOURCES[1]}
## ma=${SOURCES[2]} ma2=${SOURCES[3]}
## out2=${TARGETS[1]} |
## stack norm=no
## '''

## Flow(['presh','resh'],['pwin','swin','prick','srick'],reshape)
## Flow('sresh','resh','stack norm=no')

iphase = '''
cat axis=2 ${SOURCES[1]} |
graph title="Instantaneous Frequency" label1="Time (s)" min2=0 max2=1
dash=0,1
'''

getmask = 'add scale=1,-1 ${SOURCES[1]} | mask min=0 | dd type=float'

psrect = '''
math min=${SOURCES[2]} max=${SOURCES[1]}
output="sqrt(1+12*(1/min^2-1/max^2)*input)" | dd type=int
'''

pprect = '''
math min=${SOURCES[2]} max=${SOURCES[1]}
output="sqrt(1+12*(1/max^2-1/min^2)*(1-input))" | dd type=int
'''

def balance(rect):
    return '''
    nsmooth1 rect=${SOURCES[1]} |
    abalance rect1=%d order=10 other=${SOURCES[2]}
    ''' % rect

Flow('ipp','pptrace1','iphase rect1=60 order=10')
Flow('ips','wtrace','iphase rect1=60 order=10')
Result('mgorphs',['ipp','ips'],iphase)

Flow('imask',['ips','ipp'],getmask)

Flow('srect',['imask','ips','ipp'],psrect)
Flow('sresh',['wtrace','srect','pptrace1'],balance(180))

Flow('prect',['imask','ips','ipp'],pprect)
Flow('presh',['pptrace1','prect','pptrace1'],balance(180))

Flow('ipresh','presh','iphase rect1=60 order=10')
Flow('isresh','sresh','iphase rect1=60 order=10')
Result('mreshs',['ipresh','isresh'],iphase)

Plot('warp1',['sresh','presh'],difplot(0,tmax))
Result('wgarp1','gamma0 warp1','OverUnderAniso')

####################################################################
# GAMMA SCAN
####################################################################

def warpscan(ng,g0,gmax,rect1=1,rect2=1,rect3=1):
    dg = (gmax-g0)/(ng-1)
    return '''
    warpscan other=${SOURCES[1]} niter=100
    ng=%d dg=%g g0=%g rect1=%d rect2=%d rect3=%d |
    math output='(1+input)^4' |
    window''' % (ng,dg,g0,rect1,rect2,rect3)

def greyscan(min1,max1,min2,max2):
     return '''
     window min1=%g max1=%g min2=%g max2=%g |
     grey wanttitle=n allpos=y      
     color=j pclip=100
     label1="Time (s)" label2="Gamma Scan"''' % (min1,max1,min2,max2)

Flow('scan',['sresh','presh'],warpscan(101,0.9,1.1,40,2))
Plot('scan',greyscan(0.5,tmax-0.5,0.9,1.1))
Plot('bscan','scan',greyscan(0.5,tmax-0.5,0.9,1.1) + ' color=I')

def blindpick(eps=10,lam=1):
    return '''
    blindpick2 eps=%g lam=%g gauss=y |
    window
    ''' % (eps,lam)
def showpick(min1,max1,min2,max2,col,fat):
    return '''
    graph transp=y min1=%g max1=%g min2=%g max2=%g
    yreverse=y plotcol=%d plotfat=%d
    wantaxis=n wanttitle=n pad=n
    ''' % (min1,max1,min2,max2,col,fat)

Flow('pick0',['scan','pptrace1'],
     'window min2=0.97 max2=1.02 | ' + blindpick(1000))
Flow('pick','pick0','math output="(input-1)*x1" ')
Plot('pick','pick0',showpick(0.5,tmax-0.5,0.9,1.1,7,1))
Plot('bick','pick0',showpick(0.5,tmax-0.5,0.9,1.1,0,7))
Result('wgscan','scan bick pick','Overlay')
Result('bwgscan','bscan bick pick','Overlay')

###########################################################################
# WARPING
###########################################################################

def warp1(niter,rect1=1,rect2=1,rect3=1):
    return '''warp1 other=${SOURCES[1]} warpin=${SOURCES[2]}
    warpout=${TARGETS[2]} 
    verb=1 nliter=%d noamp=1 rect1=%d rect2=%d rect3=%d > ${TARGETS[1]} &&
    warpadd < ${SOURCES[3]} add=${TARGETS[2]}''' % (niter,rect1,rect2,rect3)

Flow(['warp2','wtrace2','w2'],
     ['sresh','presh','pick','warp0'],
     warp1(20,240))

Flow('gamma2','warp2',warp2gamma)
Plot('gamma2',vgraph(0,tmax,1,5))
Plot('warp2','wtrace2 presh',difplot(0,tmax))
Result('wgarp2','gamma2 warp2','OverUnderAniso')

####################################################################
# MOVE CLOSER
####################################################################

Flow('wtrace3',['pstrace','pptrace1','warp2'],warp0)
Plot('warp3','wtrace3 pptrace1',difplot(0,tmax))
Result('wgarp3','gamma2 warp3','OverUnderAniso')

####################################################################
# SPECTRAL BALANCING
####################################################################
## Flow('swin2','wtrace3','window1 nw=4 w=600')
## Flow('srick2','swin2',rick,stdout=0)

## Flow(['presh2','resh2'],['pwin','swin2','prick','srick2'],reshape)
## Flow('sresh2','resh2','stack norm=no')

Flow('ips2','wtrace3','iphase rect1=60 order=10')
Result('mgorphs2',['ipp','ips2'],iphase)

Flow('imask2',['ips2','ipp'],getmask)

Flow('srect2',['imask2','ips2','ipp'],psrect)
Flow('sresh2',['wtrace3','srect2','pptrace1'],balance(180))

Flow('prect2',['imask2','ips2','ipp'],pprect)
Flow('presh2',['pptrace1','prect2','pptrace1'],balance(180))

Plot('warp4',['sresh2','presh2'],difplot(0,tmax))
Result('wgarp4','gamma2 warp4','OverUnderAniso')

####################################################################
# GAMMA SCAN
####################################################################

Flow('scan2',['sresh2','presh2'],warpscan(51,0.97,1.03,40,2))
Plot('scan2',greyscan(0.5,tmax-0.5,0.97,1.03))
Plot('bscan2','scan2',greyscan(0.5,tmax-0.5,0.97,1.03) + ' color=I')

Flow('pick1',['scan2','pptrace1'],
     'window min2=0.99 max2=1.01 | ' + blindpick(1000))
Flow('pick2','pick1','math output="(input-1)*x1" ')
Plot('pick2','pick1',showpick(0.5,tmax-0.5,0.97,1.03,7,1))
Plot('bick2','pick1',showpick(0.5,tmax-0.5,0.97,1.03,0,7))
Result('wgscan2','scan2 bick2 pick2','Overlay')
Result('bwgscan2','bscan2 bick2 pick2','Overlay')

###########################################################################
# WARPING
###########################################################################

Flow(['warp5','wtrace5','w5'],
     ['sresh2','presh2','pick2','warp2'],
     warp1(20,240))

Flow('gamma5','warp5',warp2gamma)
Plot('gamma5','gamma5',vgraph(0,tmax,1,5))
Plot('warp5','wtrace5 presh2',difplot(0,tmax))
Result('wgarp5','gamma5 warp5','OverUnderAniso')

#Flow('w2trace5','wtrace5','spray axis=2 n=10')
#Flow('p2resh2','presh2','spray axis=2 n=10')
#Result('wginter1','w2trace5 p2resh2',
#       '''
#       interleave other=${SOURCES[1]} axis=2 | window max1=3 |
#       grey poly=y transp=y yreverse=y wanttitle=n wantaxis2=n pclip=99.5
#       ''')

#############################################################################
#
# Line processing
#
#############################################################################

Flow('fit2','warp0','spray axis=2 o=15513 d=2 n=3163')
Flow('pp1','pp',precon)

Flow('wline',['ps','pp1','fit2'],warp0)

def plot(title,clip=0.23):
    return '''
    window min1=0 max1=%g |
    grey title="%s" wantaxis=n clip=%g crowd1=1
    ''' % (tmax,title,clip)

Plot('pline','pp1',plot('PP'))
Plot('wline',plot('Warped PS'))
Plot('diff','wline pp1',
     'add scale=1,-1 ${SOURCES[1]} | ' + plot('Difference'))

wplot2 = plot('Vp/Vs',3) + ' color=j allpos=y bias=1'


Flow('ggamma1','gamma0','spray axis=2 o=15513 d=2 n=3163')
Plot('ggamma1','ggamma1',wplot2)
Plot('bggamma1','ggamma1',wplot2 + ' color=I')
#Result('wgaarp0','pline wline diff ggamma1','TwoRows')
Result('wgaarp0','pline wline','OverUnderAniso')
Result('wgaarp00','diff ggamma1','OverUnderAniso')
Result('bwgaarp00','diff bggamma1','OverUnderAniso')

####################################################################
# SPECTRAL BALANCING
####################################################################
## Flow('Pwwin','pp1','window2 nw=2,2 w=1200,2000')
## Flow('Swwin','wline','window2 nw=2,2 w=1200,2000')

## rick2 = 'spectra | stack norm=y | ricker niter=1000 ma=$TARGET m=20'

## Flow('Prrick','Pwwin',rick2,stdout=0)
## Flow('Srrick','Swwin',rick2,stdout=0)

## reshape2 = '''
## reshape dim=2 in2=${SOURCES[1]} ma=${SOURCES[2]}
## ma2=${SOURCES[3]} out2=${TARGETS[1]} |
## stack axis=3 norm=no
## '''
## Flow('Prrick','Pwwin',rick2,stdout=0)
## Flow('Srrick','Swwin',rick2,stdout=0)

## reshape2 = '''
## reshape dim=2 in2=${SOURCES[1]} ma=${SOURCES[2]}
## ma2=${SOURCES[3]} out2=${TARGETS[1]} |
## stack axis=3 norm=no
## '''

## Flow(['Prresh','Reesh'],['Pwwin','Swwin','Prrick','Srrick'],reshape2)
## Flow('Srresh','Reesh','stack axis=3 norm=no')

def balance2(rect1,rect2):
    return '''
    nsmooth1 rect=${SOURCES[1]} |
    abalance rect1=%d rect2=%d order=10 other=${SOURCES[2]}
    ''' % (rect1,rect2)

Flow('iipp','pp1','iphase rect1=60 rect2=60 order=10')
Flow('iips','wline','iphase rect1=60 rect2=60 order=10')

Flow('iimask',['iips','iipp'],getmask)

Flow('srrect',['iimask','iips','iipp'],psrect)
Flow('Srresh',['wline','srrect','pp1'],balance2(80,80))

Flow('prrect',['iimask','iips','iipp'],pprect)
Flow('Prresh',['pp1','prrect','pp1'],balance2(80,80))

Plot('iipp',plot('PP Instantaneous Frequency',1) + ' color=j allpos=y')
Plot('iips',plot('PS Instantaneous Frequency',1) + ' color=j allpos=y')
Result('wgii','iipp iips','OverUnderAniso')

Plot('biipp','iipp',plot('PP Instantaneous Frequency',1) + ' allpos=y')
Plot('biips','iips',plot('PS Instantaneous Frequency',1) + ' allpos=y')
Result('bwgii','biipp biips','OverUnderAniso')

Flow('Pspec0','pp1','spectra all=y')
Flow('Sspec0','wline','spectra all=y')
Plot('spec0','Pspec0 Sspec0',
     '''
     cat axis=2 ${SOURCES[1]} |
     graph title=Before max2=0.2 label1="Frequency (Hz)"
     ''')
Flow('Psppec','Prresh','spectra all=y')
Flow('Ssppec','Srresh','spectra all=y')
Plot('spec1','Psppec Ssppec',
     '''
     cat axis=2 ${SOURCES[1]} |
     graph title=After max2=0.2 label1="Frequency (Hz)"
     ''')
Result('wgspec1','spec0 spec1','SideBySideAniso')

partial = 'pad n2=3200 | put n2=40 n3=80 | stack'

Flow('pstack','Prresh',partial)
Flow('sstack','Srresh',partial)
Plot('wginter1',['pstack','sstack'],
     '''
     interleave axis=2 ${SOURCES[1]} | window max1=3 |
     grey title='Interleaved (Before)' label1='Time (s)'
     ''')

Plot('Prresh',plot('Balanced PP'))
Plot('Srresh',plot('Warped and Balanced PS'))
Plot('diff2','Srresh Prresh',
     'add scale=1,-1 ${SOURCES[1]} | ' + plot('Difference'))
#Result('wgaarp1','Prresh Srresh diff2 ggamma1','TwoRows')
Result('wgaarp1','Prresh Srresh','OverUnderAniso')
Result('wgaarp11','diff2 ggamma1','OverUnderAniso')
Result('bwgaarp11','diff2 bggamma1','OverUnderAniso')

Flow('iippa','Prresh','iphase rect1=60 rect2=60 order=10')
Flow('iipsa','Srresh','iphase rect1=60 rect2=60 order=10')

Plot('iippa',plot('PP Instanteneous Frequency',1) + ' color=j allpos=y')
Plot('iipsa',plot('PS Instanteneous Frequency',1) + ' color=j allpos=y')
Result('wgii2','iippa iipsa','OverUnderAniso')

Plot('biippa','iippa',plot('PP Instanteneous Frequency',1) + ' allpos=y')
Plot('biipsa','iipsa',plot('PS Instanteneous Frequency',1) + ' allpos=y')
Result('bwgii2','biippa biipsa','OverUnderAniso')

####################################################################
# GAMMA SCAN
####################################################################

Flow('Sccan',['Srresh','Prresh'],warpscan(51,0.95,1.05))

def scanplot3(frame3):
    return '''
    byte gainpanel=all allpos=y |
    grey3 frame1=30 frame3=%d frame2=1000 color=j
    flat=n point1=0.7 point2=0.7
    label1="Time (s)" label3="Relative Gamma" title="Gamma Scan"
    ''' % frame3

Result('wgsccan','Sccan',scanplot3(25))

def blindpick2(eps=10,lam=10):
    return '''
    blindpick2 eps=%g lam=%g |
    spline pattern=${SOURCES[1]} |
    window
    ''' % (eps,lam)

Flow('Piick0',['Sccan','pp1'],'transp plane=23 | ' + blindpick2(2,1000))

Flow('time2','pptrace1','math output=x1 | spray n=3163 d=2 o=15513')
Flow('Piick',['Piick0','time2'],'math T=${SOURCES[1]} output="(input-1)*T" ')

###########################################################################
# WARPING
###########################################################################
Flow(['Waarp2','wline2','W22'],
     ['Srresh','Prresh','Piick','fit2'],
     warp1(2,220,4400))

warp2gamma2 = '''
math T=${SOURCES[1]} output="input+T" |
smoothder |
math output="2*input-1" 
'''

Plot('wline2',plot('Warped and Balanced PS'))
Plot('diff3','wline2 Prresh',
     'add scale=1,-1 ${SOURCES[1]} | ' + plot('Difference'))
Flow('Gaamma2',['Waarp2','time2'],warp2gamma2)
Plot('Gaamma2',wplot2)
Plot('bGaamma2','Gaamma2',wplot2 + ' color=I')
#Result('wgaarp2','Prresh wline2 diff3 Gaamma2','TwoRows')
Result('wgaarp2','Prresh wline2','OverUnderAniso')
Result('wgaarp22','diff3 Gaamma2','OverUnderAniso')
Result('bwgaarp22','diff3 bGaamma2','OverUnderAniso')

####################################################################
# MOVE CLOSER
####################################################################
Flow('wline3',['ps','pp1','Waarp2'],warp0)

Plot('wline3','wline3',plot('Warped PS'))
Plot('diff4','wline3 pp1',
     'add scale=1,-1 ${SOURCES[1]} | ' + plot('Difference'))
# Result('wgaarp3','pline wline3 diff4 Gaamma2','TwoRows')
Result('wgaarp3','pline wline3','OverUnderAniso')
Result('wgaarp33','diff4 Gaamma2','OverUnderAniso')
Result('bwgaarp33','diff4 bGaamma2','OverUnderAniso')

####################################################################
# SPECTRAL BALANCING
####################################################################
## Flow('Swwin2','wline3','window2 nw=2,2 w=1200,2000')
## Flow('Srrick2','Swwin2',rick2,stdout=0)

## Flow(['Prresh2','Reesh2'],['Pwwin','Swwin2','Prrick','Srrick2'],reshape2)
## Flow('Srresh2','Reesh2','stack axis=3 norm=no')

Flow('iips2','wline3','iphase rect1=60 rect2=60 order=10')

Flow('iimask2',['iips2','iipp'],getmask)

Flow('srrect2',['iimask2','iips2','iipp'],psrect)
Flow('Srresh2',['wline3','srrect2','pp1'],balance2(80,80))

Flow('prrect2',['iimask2','iips2','iipp'],pprect)
Flow('Prresh2',['pp1','prrect2','pp1'],balance2(80,80))

Plot('Prresh2',plot('Balanced PP'))
Plot('Srresh2',plot('Warped and Balanced PS'))
Plot('diff5','Srresh2 Prresh2',
     'add scale=1,-1 ${SOURCES[1]} | ' + plot('Difference'))
#Result('wgaarp4','Prresh2 Srresh2 diff5 Gaamma2','TwoRows')
Result('wgaarp4','Prresh2 Srresh2','OverUnderAniso')
Result('wgaarp44','diff5 Gaamma2','OverUnderAniso')
Result('bwgaarp44','diff5 bGaamma2','OverUnderAniso')

####################################################################
# GAMMA SCAN
####################################################################

Flow('Sccan2',['Srresh2','Prresh2'],warpscan(21,0.98,1.02))
Result('wgccan2','Sccan2',scanplot3(10))

Flow('Piick1',['Sccan2','pp1'],
     'transp plane=23 | ' + blindpick2(2,1000))
Flow('Piick2',['Piick1','time2'],'math T=${SOURCES[1]} output="(input-1)*T" ')

###################################################################
# WARPING
###################################################################

Flow(['Waarp5','wline5','W55'],
     ['Srresh2','Prresh2','Piick2','Waarp2'],
     warp1(2,220,4400))

Plot('wline5',plot('Warped and Balanced PS'))
Plot('diff6','wline5 Prresh2',
     'add scale=1,-1 ${SOURCES[1]} | ' + plot('Difference'))
Flow('Gaamma5',['Waarp5','time2'],warp2gamma2)
Plot('Gaamma5',wplot2)
Plot('bGaamma5','Gaamma5',wplot2 + ' color=I')
#Result('wgaarp5','Prresh2 wline5 diff6 Gaamma5','TwoRows')
Result('wgaarp5','Prresh2 wline5','OverUnderAniso')
Result('wgaarp55','diff6 Gaamma5','OverUnderAniso')
Result('bwgaarp55','diff6 bGaamma5','OverUnderAniso')

###########################################################################
End()
