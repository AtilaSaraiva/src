from rsfproj import *

Fetch('marmrefl.HH','marm')

Flow('marm','marmrefl.HH',
     '''dd data_format=native_float | reverse which=2 > $TARGET;
     echo d2=12.5 >> $TARGET''',stdout=-1)

mutter = 'slope0=0.0015 tp=0.5'

Flow('cmp','marm','shot2cmp positive=n')
Flow('vscan','cmp',
     'mutter %s | vscan semblance=y v0=1500 nv=120 dv=50' % mutter)
Flow('vrms','vscan','blindpick2 eps=40 lam=40')
Result('vrms','vrms',
       '''window min3=2800 max3=7600 |
       grey color=j allpos=y wantscalebar=y wanttitle=n
       barlabel="NMO velocity (km/s)"
       label1="Time (s)" label2="Midpoint (m)"
       bias=1500''')

Flow('nmo',['cmp','vrms'],'nmo velocity=${SOURCES[1]}')
Flow('stack','nmo','stack')
Result('stack','stack',
       '''
       grey title="NMO Stack" label1="Time (s)" label2="Midpoint (m)"
       ''')

Flow('strd','nmo','window f1=50 | logstretch')
Flow('fftd','strd','fft1 | transp plane=13 memsize=500')
Flow('dmod','fftd','finstack')
Flow('dstack','dmod',
     'transp | fft1 inv=y | window n1=676 | logstretch inv=y | pad beg1=50')
Result('dstack','dstack',
       '''
       grey title="DMO Stack" label1="Time (s)" label2="Midpoint (km)"
       ''')

Flow('snmo','nmo',
     'cmp2shot positive=n | window min3=3000 n3=240')
Flow('sfft','snmo',
     '''window f1=50 | logstretch | fft1 |
     transp memsize=500 | transp plane=23 memsize=500''')
Flow('sparse','sfft','window j2=2')
Flow('sback','sparse','infill positive=n eps=1')
Flow('sdense','sfft','infill positive=n eps=1')
Flow('snmo2','sback',
     '''transp transp plane=23 memsize=500 | transp memsize=500 |
     fft1 inv=1 | window n1=676 | logstretch inv=1 | pad beg1=50 n3=240''')
Flow('snmo1','sdense',
     '''transp transp plane=23 memsize=500 | transp memsize=500 |
     fft1 inv=1 | window n1=676 | logstretch inv=1 | pad beg1=50''')

Flow(['simp','one','two'],'sparse',
     '''window n2=119 f2=1 > ${TARGETS[1]};
     window n2=119 < $SOURCE |
     add ${TARGETS[1]} scale=0.5,0.5 |
     pad n2=120 > ${TARGETS[2]};
     interleave axis=2 $SOURCE ${TARGETS[2]}
     ''')
Flow('snmo0','simp',
     '''transp transp plane=23 memsize=500 | transp memsize=500 |
     fft1 inv=1 | window n1=676 | logstretch inv=1 | pad beg1=50''')

Flow('diff2',['snmo2','snmo'],'add scale=1,-1 ${SOURCES[1]}')
Flow('diff0',['snmo0','snmo'],'add scale=1,-1 ${SOURCES[1]}')

def shotplot(slice,clip=2000):
    return '''window n3=1 f3=%d max2=1200 |
    grey label1="Time (s)" label2="Offset (m)" title="Shot%d" clip=%g
    ''' % (slice,slice+1,clip)

for shot in [101,151,201]:
    shots = []
    for slice in range(shot-1,shot+2):
        shoti = 'shot%d' % slice
        shots.append(shoti)
        Plot(shoti,'snmo',shotplot(slice))
    shoti = 'shot%d' % shot
    Result(shoti,shots,'SideBySideAniso')

    shotin = 'shotin%d' % shot
    shoterr = 'shoterr%d' % shot
    simperr = 'simperr%d' % shot
    Plot(shotin,'snmo2',
         shotplot(shot) + ' title="Shot%d Interpolated" ' % (shot+1))
    Plot(shoterr,'diff2',
         shotplot(shot) + ' title="Interpolation Error" ')
    Plot(simperr,'diff0',
         shotplot(shot) +
         ' title="(Shot%d+Shot%d)/2-Shot%d" ' % (shot,shot+2,shot+1))
    Result(shotin,[shotin,shoterr,simperr],'SideBySideAniso')

Flow('sparsecmp','marm','window j3=2 | shot2cmp positive=n')
Flow('backcmp',['snmo2','vrms'],
     'shot2cmp  positive=n | inmo velocity=${SOURCES[1]}')
Flow('denscmp',['snmo1','vrms'],
     'shot2cmp positive=n | inmo velocity=${SOURCES[1]}')

def window(slice):
    return '''
    window n3=1 min3=%g max2=1200 |
    mutter %s''' % (slice,mutter)

clip = 2000
cmpplot = 'grey label1="Time (s)" label2="Offset (km)" clip=%g' % clip

for cmp in [3000,4000,5000,6000,7000]:
    cmpi = 'cmp%g' % cmp
    for case in ['','back','sparse','dens']:
        Flow(case+cmpi,case+'cmp',window(cmp))
    Plot(cmpi,cmpi,cmpplot + '  title="CMP at %g km" ' % cmp)
    Plot('sparse'+cmpi,'sparse'+cmpi,cmpplot + '  title=Decimated')
    Plot('back'+cmpi,'back'+cmpi,cmpplot + '  title=Restored')
    Plot('dens'+cmpi,'dens'+cmpi,cmpplot + '  title=Interpolated')
    Plot('err'+cmpi,['back'+cmpi,cmpi],
         'add scale=1,-1 ${SOURCES[1]} | ' + cmpplot + '  title=Error')
    Result(cmpi,[cmpi,'sparse'+cmpi],'SideBySideAniso')
    Result('err'+cmpi,['back'+cmpi,'err'+cmpi],'SideBySideAniso')
    Result('dens'+cmpi,[cmpi,'dens'+cmpi],'SideBySideAniso')

###########################################################################
End()



