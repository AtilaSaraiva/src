from rsfproj import *

import math

def cardioid(label,n1,d1):
    for case in ('sin','cos'):
        Flow(case+label,None,
             '''
             math n1=%d d1=%d o1=0 output="%g*x1" |
             math output="(1-sin(input))*%s(input)"
             ''' % (n1,d1,math.pi/180,case))

cardioid('',360,1)
Flow('one','sin','scale dscale=0')

points = '''
cat axis=2 ${SOURCES[1]} | transp | dd type=complex |
graph symbol=o plotcol=7 wanttitle=n min1=-2 max1=2 min2=-3 max2=1
screenratio=1 wantaxis=n
'''

Plot('points','cos sin',points)
Flow('points','cos sin one','cat axis=2 ${SOURCES[1:3]} | transp')
Flow('dist','points','distance n1=401 n2=401 o1=-2 o2=-3 d1=0.01 d2=0.01')

dist = '''
grey color=j screenratio=1 min1=-2 max1=2 min2=-3 max2=1
title=Distance allpos=y pclip=100 transp=n yreverse=n
'''

Plot('dist',dist)
Result('dist','dist points','Overlay')

cardioid('10',30,10)
Flow('one10','sin10','scale dscale=0')

Plot('points10','cos10 sin10',points)
Flow('points10','cos10 sin10 one10','cat axis=2 ${SOURCES[1:3]} | transp')
Flow('dist10','points10','distance n1=401 n2=401 o1=-2 o2=-3 d1=0.01 d2=0.01')

Plot('dist10',dist)
Result('dist10','dist10 points10','Overlay')

Flow('start','dist','math output="x1^2+(x2+1)^2-3" ')

med = 0.014

Flow('disti','dist10',
     'math output="1+input/%g" | math output="1/(input*input)"' % med)
Flow('next snap','start disti',
     '''
     impl2 up=y tau=1 rect1=300 rect2=300 dist=${SOURCES[1]}
     snap=${TARGETS[1]} nsnap=100
     ''')

Plot('next',
     '''
     contour allpos=y c0=0 nc=1 min1=-2 max1=2 min2=-3 max2=1
     wanttitle=n wantaxis=n allpos=n transp=n yreverse=n screenratio=1 
     ''')
Result('dist11','dist10 next','Overlay')

End()
