###########################################################################
import sys, os

sys.path.append(os.path.join(os.environ.get('RSFROOT'),'lib'))

##########################################################################

from rsfproj import *
Book()

###########################################################################

Flow('trend',None,
          '''
          spike n1=10001 d1=0.0001 o1=0 |
          headermath output="T*(1-T)/2"
          ''')
Flow('exact','trend',
          '''
          headermath output='T*acos(-1)*2' |
          headermath t=0 output='sin(4*t)/4+sin(8*t)/16-sin(t)' |
          add ${SOURCES[0]}
          ''')
Plot('exact','exact',
          "graph wanttitle=n label1=' ' min2=-1.5 max2=1.5")

scales = map(lambda x: 2**x, range(1,13))
orders = range(1,7)

for scale in scales:
    spline = 'spline%d' % scale
    sample = 'sample%d' % scale
    error = 'spline-error%d' % scale
    Flow(spline,'exact','window j1=%d | spline pattern=$SOURCE' % scale)
    Plot(spline,spline,
              "graph wanttitle=0 wantaxis=0 min2=-1.5 max2=1.5 plotcol=5")
    Combine(spline,[spline,'exact'],'Overlay',result=1)
    Flow(sample,None,
              'spike n1=1 | headermath output="%d*0.0001"' % scale)
    Flow(error,['exact',spline],
                  '''
                  add scale=1,-1 ${SOURCES[1]} |
                  math output='input*input' |
                  stack axis=1 norm=no |
                  math output='sqrt(input*%d/10001)'
                  ''' % scale)
    
samples = map(lambda x: 'sample%d' % x, scales)
splines = map(lambda x: 'spline-error%d' % x, scales)

Flow('sample',samples,
          'cat axis=1  ${SOURCES[0:%d]}' % len(samples),stdin=0)
Flow('log-sample','sample','math output="log(input)"')

Flow('spline',splines,
          'cat axis=1 ${SOURCES[0:%d]}' % len(splines),stdin=0)
Flow('log-spline','spline','headermath err=0 output="log(err)"')

Flow('curve',['spline','sample'],
          'cmplx ${SOURCES[1]} ${SOURCES[0]}',stdin=0)
Flow('log-curve',['log-spline','log-sample'],
          'cmplx ${SOURCES[1]} ${SOURCES[0]}',stdin=0)

Plot('line-spline','curve',
          "graph title='Spline Convergence' label1='Sampling' label2='Error'")
Plot('star-spline','curve',
          'graph wanttitle=n wantaxis=n plotcol=5 symbol="*"')
Combine('spline',['line-spline','star-spline'],
             'Overlay',result=1)

Plot('log-line-spline','log-curve',
          '''graph title='Spline Convergence'
          label1='Log(Sampling)' label2='Log(Error)'
          min1=-10 max1=0 min2=-25 max2=5 screenratio=3 labelsz=3 titlesz=3
          ''')
Plot('log-star-spline','log-curve',
          '''graph wanttitle=n wantaxis=n plotcol=5 symbol="*"
          min1=-10 max1=0 min2=-25 max2=5 screenratio=3 labelsz=3 titlesz=3
          ''')
Combine('log-spline',['log-line-spline','log-star-spline'],
             'Overlay',result=1)

min1 = [0,-10,-10,-10,-10,-10,-10]
max1 = [0, 3,0,0,0,0,0]
min2 = [0,-8,-16,-25,-25,-25,-25]
max2 = [0, 5,4,5,5,5,5]
ratio = [0,1,2,3,3,3,3]
lsize = [0,8,4,3,3,3,3]
tsize = [0,10,5,3,3,3,3]
    
for order in orders:
    for scale in scales:
        remap = 'remap%d-%d' % (order,scale)
        error = 'error%d-%d' % (order,scale)
        Flow(remap,'exact',
                  'window j1=%d | remap1 order=%d pattern=$SOURCE' %
                  (scale,order))
        Plot(remap,remap,
                  "graph wanttitle=0 wantaxis=0 min2=-1.5 max2=1.5 plotcol=5")
        Combine(remap,[remap,'exact'],'Overlay',result=1)
        Flow(error,['exact',remap],
                  '''
                  add scale=1,-1 ${SOURCES[1]} |
                  headermath err=0 output='err*err' |
                  stack axis=1 norm=no |
                  math output='sqrt(input*%d/10001)'
                  ''' % scale)
    error = 'error%d' % order
    curve = 'curve%d' % order
    errors = map(lambda x: '%s-%d' % (error,x), scales)
    Flow(error,errors,
              'cat axis=1 ${SOURCES[0:%d]}' % len(errors),stdin=0)
    Flow('log-' + error,error,'math output="log(input)"')
    Flow(curve,[error,'sample'],
              'cmplx ${SOURCES[1]} ${SOURCES[0]}',stdin=0)
    Flow('log-' + curve,['log-' + error,'log-sample'],
              'cmplx ${SOURCES[1]} ${SOURCES[0]}',stdin=0)
    Plot('line-' + error,curve,
              '''
              graph title='Convergence for order %d'
              label1='Sampling' label2='Error'
              '''% order)
    Plot('star-' + error,curve,
              'graph wanttitle=n wantaxis=n plotcol=5 symbol="*"')
    Combine(error,['line-' + error,'star-' + error],'Overlay',result=1)
    Plot('line-log-' + error,'log-' + curve,
              '''
              graph title='Convergence for order %d'
              label1='Log(Sampling)' label2='Log(Error)'
              min1=%d max1=%d min2=%d max2=%d screenratio=%g
              labelsz=%g titlesz=%g
              ''' % (order,
                     min1[order],max1[order],min2[order],max2[order],
                     ratio[order],lsize[order],tsize[order]))
    Plot('star-log-' + error,'log-' + curve,
              '''graph wanttitle=n wantaxis=n plotcol=5 symbol="*"
              min1=%d max1=%d min2=%d max2=%d screenratio=%g
               ''' % (min1[order],max1[order],min2[order],max2[order],
                     ratio[order]))
    Combine('log-' + error,
                 ['line-log-' + error,'star-log-' + error],'Overlay',result=1)
        
###########################################################################

End()
