from rsfproj import *

Fetch('shot.H','antoine')
Flow('trace','shot.H','dd form=native | window min2=200 n2=1 min1=1.45 max1=1.6')
Flow('noise','trace',
     '''
     pad n1=49 |
     reverse which=1 |
     pad n1=59 |
     scale dscale=3 |
     spray axis=2 n=27 d=1 o=0
     ''')

nt=59
gradient=1.05
ns = 20

Flow('sign','noise','math output="input*(%g)^x2" ' % gradient)
Flow('data','noise sign','add ${SOURCES[1]}')
Flow('modl','noise','envelope hilb=y')

def wiggle(title):
    return '''
    wiggle poly=y transp=y 
    wantaxis2=n wantaxis1=n title="%s"
    crowd2=0.8 crowd1=.9 clip=8.
    ''' % title

Plot('sign',wiggle('(a) - Signal'))
Plot('noise',wiggle('(b) - Noise'))
Plot('data',wiggle('(c) - Data = Signal + Noise'))
Plot('modl',wiggle('(d) - Noise model'))

Result('synth','sign noise data modl','TwoRows')

Flow('lag.asc',None,
     'echo %d n1=1 n=%d,100 data_format=ascii_int in=$TARGET' % (nt,nt))
Flow('lag','lag.asc','dd form=native')

Flow('pef.asc','lag',
     'echo -%g a0=1 n1=1 data_format=ascii_float in=$TARGET lag=$SOURCE' % gradient,stdin=0)
Flow('pef','pef.asc','dd form=native')

shifts = ['modl']
for s in range(1,ns):
    shift = 'shift-%d' % s
    Flow(shift,'modl','window f1=%d | pad end1=%d' % (s,s))
    shifts.append(shift)

    shift = 'shift+%d' % s
    Flow(shift,'modl','window n1=%d | pad beg1=%d' % (nt-s,s))
    shifts.append(shift)
Flow('shifts',shifts,'cat ${SOURCES[1:%d]}' % len(shifts))

Flow('filt pred','shifts data pef',
     'lpf match=${SOURCES[1]} pred=${TARGETS[1]} pef=${SOURCES[2]} rect1=100 rect2=100 niter=400')
Flow('prim','data pred','add scale=1,-1 ${SOURCES[1]}')

Plot('prim',wiggle('(a) - Estimated Signal'))
Plot('pred',wiggle('(b) - Matched Multiples'))

Result('match','prim pred','SideBySideIso')

End()
