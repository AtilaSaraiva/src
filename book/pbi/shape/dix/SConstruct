from rsfproj import *
import random

random.seed(2005)

for case in ('vel','mig','smb'):
    data = 'bei-%s.rsf' % case
    Fetch(data,'midpts')
    Flow('./'+case,data,'dd form=native')

Plot('mig',
     '''
     grey title="Prestack Time Migration"
     label1="Time (s)" label2="Lateral (km)"
     ''') 

def vplot(title):
   return '''
   grey pclip=100 color=j bias=1.4 allpos=y
   scalebar=y title="%s Velocity"
   label1="Time (s)" label2="Lateral (km)"
   barlabel="Velocity (km/s)"
   ''' % title

Plot('vel',vplot('Migration'))

Result('migvel','mig vel','SideBySideAniso')

Flow('./dix ./dix0','vel smb',
     '''
     dix rect1=15 rect2=15
     weight=${SOURCES[1]} vrmsout=${TARGETS[1]}
     ''')

Plot('dix',vplot('Interval'))
Plot('dix2','dix',vplot('Interval')+' wanttitle=n barlabel="Interval Velocity (km/s)" ')


Plot('dix0',vplot('Predicted Migration'))

Result('dix','dix dix0','SideBySideAniso')

Plot('migw','mig',
     '''
     window j2=2 |
     wiggle transp=y yreverse=y scalebar=y wantaxis=n wanttitle=n
     plotcol=7 poly=y
     ''')
Result('dixw','dix2 migw','Overlay')

Flow('./dip','mig','dip rect1=30 rect2=30')
Plot('dip',
     '''
     scale dscale=%g | %s bias=0 allpos=n title="Local Dip" barlabel="Slope (s/km)" 
     ''' % ((0.004/0.0335),vplot('')))

Result('migdip','mig dip','SideBySideAniso')

nsp=100

k1=string.join(map(lambda x: str(random.randint(1,876)),xrange(nsp)),',')
k2=string.join(map(lambda x: str(random.randint(1,250)),xrange(nsp)),',')

Flow('./smo','dip',
     '''
     spike nsp=%d k1=%s k2=%s
     n1=876 n2=250 d2=0.0335 o2=7.705 |
     pwdsmooth2 rect1=10 rect2=30 dip=$SOURCE
     ''' % (nsp,k1,k2),stdin=0)
Plot('smo',
     '''
     grey allpos=y
     scalebar=y title="Shaping Impulses"
     label1="Time (s)" label2="Lateral (km)"
     ''')

Result('migsmo','mig smo','SideBySideAniso')

Flow('./pdx ./pdx0','vel smb dip',
     '''
     pwdix slope=${SOURCES[2]}
     weight=${SOURCES[1]} vrmsout=${TARGETS[1]}
     niter=50 verb=y ncycle=10 rect1=40
     ''')

Plot('pdx',vplot('Interval'))
Plot('pdx2','pdx',vplot('Interval')+' wanttitle=n barlabel="Interval Velocity (km/s)" ')
Plot('pdx0',vplot('Predicted Migration'))

Result('pdx','pdx pdx0','SideBySideAniso')

Result('pdxw','pdx2 migw','Overlay')

End()