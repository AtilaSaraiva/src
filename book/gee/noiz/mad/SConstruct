from rsfproj import *

for dat in Split('a d gma gmd'):
    sep = dat + '.int.HH'
    Fetch(sep,'geosat')
    Flow(dat,sep,
         '''
         cp $SOURCE temp.rsf &&
         echo data_format=xdr_int >> temp.rsf && 
         dd < temp.rsf form=native > $TARGET &&
         rm temp.rsf
         ''',stdin=0,stdout=-1)

mdz=500

for dat in ('a','d'):
    tri = dat+'tri'
    xy = dat+'xy'
    z = dat+'z'
    dz = dat+'dz'
    dzm = dat+'dzm'
    mask = dat+'mask'
    
    Flow(tri,['gm'+dat,dat],
         'cat axis=2 ${SOURCES[1]} | window f1=2 n1=3')
    Flow(xy,tri,'window n1=2 | scale dscale=1.e-6')
    Flow(z,tri,'window n1=1 f1=2 squeeze=n | dd type=float')

    # filter out jumps in z
    Flow(dz,z,
         '''
         window f2=1 squeeze=n | pad end2=1 | add scale=1,-1 $SOURCE |
         math output="abs(input)" | mask max=%g
         ''' % mdz)
    Flow(dzm,dz,
         '''
         window f2=1 squeeze=n | pad end2=1 | add $SOURCE
         ''')
    
    Flow(mask,[z,dzm],'mask min=0.00001 | add ${SOURCES[1]} mode=p')
    Flow(dat+'tris',[xy,z,mask],
         'cat axis=1 ${SOURCES[1]} | headerwindow mask=${SOURCES[2]}')

Flow('tris','atris dtris','cat axis=2 ${SOURCES[1]}')

Result('jesse5','tris',
       '''
       window n2=500000 n1=1 f1=2 |
       put n1=10000 n2=50 |
       wiggle title=data crowd=.87 clip=17000
       ''')

for case in range(2):
    bin = 'bin%d' % case
    
    Flow(bin,'tris',
         '''
         window n1=1 f1=2 |
         bin fold=${TARGETS[1]} xkey=0 ykey=1 head=$SOURCE
         nx=400 ny=400 interp=2 norm=%d
         ''' % case)
    Plot(bin,'''
    grey pclip=98 crowd2=.83 crowd1=.89 allpos=y
    yreverse=n wanttitle=n label1=latitude label2=longitude
    ''')

Result('jesse1','bin0 bin1','SideBySideAniso')

from helderiv import Helderiv

Helderiv('hder',na=15)

Flow('hbin1','bin1 hder','helicon filt=${SOURCES[1]}')
Result('jesse2','hbin1',
       '''
       grey pclip=90 color=IC yreverse=n wanttitle=n
       label1=latitude label2=longitude crowd=.9
       ''')

End()
