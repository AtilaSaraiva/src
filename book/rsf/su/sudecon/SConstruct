from rsf.suproj import *
from rsf.prog import RSFROOT

# We make some simple data: 8 traces with 2-way reverberations and
# a weak tilting reflector hidden underneath the reverberations.  The
# spike data is convolved with the minimum phase wavelet specified below.
# Then a tiny bit of noise is added--tiny because: (1) the definition
# of signal to noise is stringent--based on the biggest amplitude
# on the trace and (2) these are single traces, usually you'd have
# a cmp gather and the ultimate goal of stacking to combat noise.

# In this demo, we do spiking decon first and then do gapped decon
# (prediction error filtering).  You are to assume that the decon
# parameters are estimated from the autocorrelation shown in frame two.

# Construction of the minimum phase wavelet with Mathematica:
# (2-z)(3+z)(3-2z)(4+z)(4-2z)(4+3z)//(CoefficientList[#,z])&
#     {1152, -384, -904, 288, 174, -34, -12}

# First make the synthetic data for the deconvolution demo

traces = os.path.join(RSFROOT,'bin','sftraces')

Command('traces.bin',traces,'$SOURCE --out=$TARGET >/dev/null')
Flow('modeldata','traces.bin',
     '''
     suaddhead ns=512 |
     sushw key=dt a=4000 |
     suaddnoise sn=200 |
     suconv filter=1152,-384,-904,288,174,-34,-12 
     ''')

# Plot the model 
Result('modeldata',
       '''
       suxwigb title="Data: 64ms reverbs" windowtitle="Data" 
       label1="Time (sec)" label2="Trace" 
       wbox=420 hbox=400 xbox=0 ybox=50
       ''')
 
End()
