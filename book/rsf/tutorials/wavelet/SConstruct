from rsf.proj import *

def numpy_load(target=None,source=None,env=None):
    'convert from numpy to RSF format'
    import numpy, m8r
    data = numpy.load(str(source[0]))
    rsf = m8r.Output(str(target[0]))
    rsf.put("n1",len(data))
    rsf.put("o1",0)
    rsf.put("d1",0.002)
    rsf.put("label1","Time")
    rsf.put("unit1","s")
    rsf.write(data)
    return 0

for case in ('rpp','seismic'):
    npy = case+'.npy'
    Fetch(npy,'1606_Wavelet_estimation',
          server='https://raw.githubusercontent.com',
          top='seg/tutorials-2016/master')

    Command(case+'.rsf',npy,action=Action(numpy_load))
    Plot(case,
         '''
         window max1=1.5 | 
         graph title="%s"
         ''' % ('Well-Log Reflectivity','Seismic')[case=='seismic'])

Result('data','rpp seismic','OverUnderAniso')

# Compute spectrum

Flow('spec','seismic','spectra')

Plot('spec',
     '''
     math output="20*log(input)/log(10)" | 
     graph label2=power unit2=db title="Amplitude Spectrum" 
     min1=0 max1=250 min2=-110 max2=-25
     ''')

Flow('line.asc',None,
     '''
     echo 5 -80 80 -35 130 -35 160 -80 n1=2 n2=4 data_format=ascii_int in=$TARGET
     ''')
Flow('line','line.asc','dd type=complex form=native | window')

Plot('line',
     '''
     graph plotcol=5 plotfat=5 wantaxis=n wanttitle=n 
     min1=0 max1=250 min2=-110 max2=-25
     ''')

Result('spec','spec line','Overlay')

End()
