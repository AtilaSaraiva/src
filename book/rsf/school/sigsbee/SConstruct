from rsfproj import *
import sigsbee,fdmod

# ------------------------------------------------------------
par=sigsbee.paramwin() # Sigsbee2A parameters
par['nt']=3001      # time steps (samples)
par['kt']=100       # wavelet delay (samples) 
par['dt']=0.001     # time sampling (ms)
par['nb']=100       # boundary size (grid points)
fdmod.param(par)    # plotting parameters

# ------------------------------------------------------------
# source coordinates (exploding reflectors)
fdmod.boxarray('ss',6,2,1,12,8,1,par)

# plot sources
Plot('ss',fdmod.ssplot('plotfat=1 symbol=.',par))

# ------------------------------------------------------------
par['jr']=4    # receiver jump (grid points)
par['nr']=120  # number of receivers
par['fr']=100  # receivers origin (grid points)

# receiver coordinates
fdmod.horizontal('tt',par['oz']+par['dz'],par)
Flow('rr',
     'tt',
     'window n2=%(nr)d j2=%(jr)d f2=%(fr)d'%par)

# plot receivers
Plot('rr',fdmod.rrplot('',par)) 

# ------------------------------------------------------------
# get velocity
sigsbee.getstrvelwin('vstr',par)
Flow(  'velo',
       'vstr',
       'smooth rect1=100 rect2=100 repeat=1')

# plot velocity
Plot(  'velo',fdmod.cgrey('allpos=y bias=1.43',par))
Result('velo',['velo','ss','rr'],'Overlay')

# plot density
Flow('dens','velo','math output=1')

# ------------------------------------------------------------
# construct wavelet
fdmod.wavelet('wav_',15,par) 

# transpose wavelet
Flow(  'wav','wav_','transp')      

# plot wavelet
Result('wav','window n2=1000 |'
       + fdmod.waveplot('',par)) 

# ------------------------------------------------------------
# run FD modeling
fdmod.awefd1('temp','wfld',
             'wav','velo','dens',
             'ss','rr',
             'free=n',par)

# generate wavefield movie
Result('wfld',fdmod.wgrey('pclip=99',par))

# plot wavefield frames
for i in range(10):
    tag = '-%02d' %(i*3)
    fdmod.wframe('wfld'+tag,
                 'wfld',i*3,'pclip=99',par)
    Result( 'wfld'+tag,
           ['wfld'+tag,'ss','rr'],'Overlay')

# undo wavelet delay
Flow('data','temp',
     '''
     window squeeze=n f2=%(kt)d |
     pad end2=%(kt)d |
     put o2=%(ot)g
     ''' %par)

# plot data
Result('data','window j2=4 | transp |'
       + fdmod.dgrey('',par))

# ------------------------------------------------------------
# run FD migration
fdmod.zom('imag','jdat',
          'data','velo','dens',
          'rr','rr',
          'free=n',par)

# plot image
Plot(  'imag','bandpass flo=2 |'
       + fdmod.cgrey('pclip=99.9',par))
Result('imag',['imag','rr'],'Overlay')

# ------------------------------------------------------------
End()
