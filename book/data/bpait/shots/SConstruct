#########################################
#                                       #
# ##################################### #
# #           BPAIT/shots             # #
# ##################################### #
#                                       #
#########################################
#---------------------------------------
 # This script reads SEGY amd Native   #
 # format files,converts them to RSF   #
 # format and produces plots or movies #   
#---------------------------------------
from rsfproj import *

 #######################################
 #  Define Repository Variables        #
 #######################################
#----- Must be entered as strings --> 'name'
#----- ['fileNameOne.extension','fileNameTwo.extension']
source='bpait'
segyFiles=[]	
nativeFiles=['bpaitshots.hh']

 #######################################
 #      Define Header info             #
 #######################################
#---- Define n,o,d values, header info must be 
#---- entered in same order as files.
insertHeader='n'        #- Enter ['y','n'] to specify

#----------  SEGY HEADERS -------------#
#----- Form --> 'segyread tape=$SOURCE | put <headerinfo>'
segyHeader=[]

#--------- Natice Headers -------------#
#----- Form --> 'dd form=native | put <headerinfo>
nativeHeader=[]

 #######################################
 #      Concatinate  Datasets          #
 #######################################
 #-----  If datasets are downloaded in partial segments
 #-----  use this funcion to Concatinate
 #-----  Every file processed must be catted!
catData='n'                            #- Enter ['y','n'] to specify use  
catRules ='cat ${SOURCES[0:2]} axis=3' #- Enter number of files at sources
                                       #- and axis to cat

############################################################################
############################################################################
########## You should not need to change anything below this line ##########
############################################################################
############################################################################

 #######################################
 #             Import Data             #
 #######################################

for file in segyFiles:
	Fetch(file,source)

for file in nativeFiles:
	Fetch(file,source)

 #######################################
 #        Convert Data to RSF          #
 #######################################

#----- Convert SEGY Files -------------#
RSFfiles=[]
segyHeaderNumber=0
for file in segyFiles:
    fileOut = ''
    fileLength =len(file)
    for letter in file[0:fileLength]:
        if letter is not '.':
            fileOut = fileOut + letter
        if letter == '.':
            break
    if insertHeader == 'y':
        Flow(fileOut,file,segyHeader[segyHeaderNumber],stdin=0)
        segyHeaderNumber=segyHeaderNumber+1
        RSFfiles.append(fileOut)
    if insertHeader == 'n':
        Flow(fileOut,file, 'segyread tape=$SOURCE',stdin=0)
        RSFfiles.append(fileOut)

#----- Convert Native Files -----------#
nativeHeaderNumber=0
for file in nativeFiles:
    fileOut = ''
    fileLength = len(file)
    for letter in file[0:fileLength]:
        if letter is not '.':
            fileOut = fileOut + letter
        if letter == '.':
            break
    if insertHeader == 'y':
        Flow(fileOut,file,nativeHeader[nativeHeaderNumber])
        nativeHeaderNumber = nativeHeaderNumber + 1
        RSFfiles.append(fileOut)
    if insertHeader == 'n':
        Flow(fileOut,file,'dd form=native')
        RSFfiles.append(fileOut)

 #######################################
 #        Concatinate Data             #
 #######################################
if catData == 'y':
    Flow('RSFfile',RSFfiles,catRules,stdin=0)

 #######################################
 #          Display Data               #
 #######################################
if catData == 'y':
    Result('RSFfile','window j3=20 | grey gainpanel=a')
if catData =='n':
    for file in RSFfiles:
        Result(file,'window j3=20 | grey gainpanel=a')
End()
