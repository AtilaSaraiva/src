from rsfproj import *
import fdmod

# Fetch Files from repository
Fetch("P15VPint_25f_padded.SEGY","pluto")

Flow('velocityProfilePadded','P15VPint_25f_padded.SEGY', '''segyread tape=$SOURCE |
        put  d1=.0076 d2=.0046 label1=Depth\ Z o2=0
        label2=Distance unit1=km unit2=km''',stdin=0)


# ------------------------------------------------------------
par = {
    'nt':3000, 'dt':0.001,'ot':0,     'lt':'label1=time unit1=s',
    'kt':100,    # wavelet delay
    'nx':3201, 'ox':0, 'dx':0.00762,  'lx':'label2=x unit2=km',
    'nz':1201, 'oz':0, 'dz':0.00762,  'lz':'label1=z unit1=km'
    }
# add F-D modeling parameters
fdmod.param(par)

# ------------------------------------------------------------
# wavelet
Flow('wav',None,
         '''
         spike nsp=1 mag=1 n1=%(nt)d d1=%(dt)g o1=%(ot)g k1=%(kt)d |
         ricker1 frequency=15 |
         scale axis=123 |
         put label1=t label2=x label3=y
         ''' % par)
Result('wav','window n1=200 | graph title="" label1="t" label2=')
# ------------------------------------------------------------

# experiment setup

Flow('r_',None,'math n1=%(nx)d d1=%(dx)g o1=%(ox)g output=0' % par)
Flow('s_',None,'math n1=1      d1=0      o1=0      output=0' % par)

# receiver positions



Flow('r_',None,'math n1=%(nx)d d1=%(dx)g o1=%(ox)g output=0' % par)
Flow('s_',None,'math n1=1      d1=0      o1=0      output=0' % par)

# receiver positions
Flow('zr','r_','math output="0" ')
Flow('xr','r_','math output="x1"')
Flow('rr',['xr','zr'],
     '''
     cat axis=2 space=n
     ${SOURCES[0]} ${SOURCES[1]} | transp
     ''', stdin=0)
Plot('rr','window n1=2 | dd type=complex | window j2=10 | '
     + fdmod.cgraph('symbol=* plotcol=6',par))

# source positions
Flow('zs','s_','math output=1')
Flow('xs','s_','math output=10.0')
Flow('rs','s_','math output=1')
Flow('ss',['xs','zs','rs'],
     '''
     cat axis=2 space=n
     ${SOURCES[0]} ${SOURCES[1]} ${SOURCES[2]} | transp
     ''', stdin=0)
Plot('ss','window n1=2 | dd type=complex | window | '
     + fdmod.cgraph('symbol=* plotcol=2 symbolsz=4',par))

# ------------------------------------------------------------

# density
Flow('vel','velocityProfilePadded',
     '''
     put o1=%(oz)g d1=%(dz)g  o2=%(oz)g d2=%(dz)g
     ''' % par)

Plot('vel',fdmod.cgrey('allpos=y bias=1.5 pclip=100',par))
Result('vel',['vel','rr','ss'],'Overlay')

# ------------------------------------------------------------

# density
Flow('den','vel','math output=1')

# ------------------------------------------------------------
# finite-differences modeling
fdmod.amodel('dat','wfl','wav','vel','den','ss','rr','free=y dens=y',par)

Result('wfl',fdmod.wgrey('pclip=99',par))
Result('dat','transp |' + fdmod.dgrey('pclip=99',par))

End()

