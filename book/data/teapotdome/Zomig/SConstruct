from rsf.proj import *
import math

Flow('vel','tvpairs.txt',
     '''
     echo in=$SOURCE data_format=ascii_float n1=2 n2=10 |
     dd form=native
     ''',stdin=0)

Flow('Vrms_interp','vel',
    '''
      transp | linear
          n1=2049 o1=0 d1=0.002 
    ''')

Result('Vrms_interp',
     '''
     graph  title=Interpolated Velocity 
     ''')

Flow ('Vint','Vrms_interp','dix niter=100 rect1=15')

Result('Vint',
     '''
     graph  title=Interval Velocity 
     ''')
	

Fetch('final_stack.rsf','teapot',server='http://s3.amazonaws.com',top='')

Result('final_stack',
	'''
	grey title=stack
       	label1=Time     unit1=sec 
       	label2=xline    unit2=count
       ''')

Result('final_stack_filter', 'final_stack',
	'''
	bandpass fhi=20 |
	grey title=filter stack
       	label1=Time    unit2=sec 
       	label2=xline   unit1=count
        ''')


Flow ('spray2','Vint','spray axis=2 n=188 d=1 o=1')

Result('spray2',
     '''
     sfgrey color=j  title=Interval Velocity interpolated
     ''')

Flow ('Vint3D','spray2','spray axis=3 n=345 d=1 o=1')

Result('Vint3D',
     '''
     sfbyte | sfgrey3 color=j flat=n 
     ''')


Flow('Vint3Dz','Vint3D','time2depth dz=30 intime=y nz=1200 velocity=Vint3D.rsf')

Result('Vint3Dz',
     '''
     byte | sfgrey3 color=j  flat=n title=Interval Velocity interpolated
     ''')
########    Change velocity to slowness  ##########################

Flow('slo','Vint3Dz','put d2=110 d3=110 | transp | transp plane=23 | math output=1/input')

Result('slo',
     '''
     byte | sfgrey3 color=j  flat=n title=Interval Velocity interpolated
     ''')




########    FFT  ##########################





Flow('fft','final_stack',
     'put d2=110 d3=110 | fft1 | window max1=20 | transp plane=12 | transp plane=23')



Flow('real','fft','real')



Result('real',
     '''
     byte | sfgrey3 color=j  flat=n title=FFT
     ''')




# Extended split-step migration
Flow('mig','fft slo',
     '''
     zomig3 ompnth=1 mode=m --readwrite=y verb=y
     nrmax=1 slo=${SOURCES[1]}
     ''',split=[4,87],reduce='add')

Result('mig',
       '''
       window | grey title=Migration

       label2=Depth    unit2=km 
       label1=Distance unit1=km
       ''')

# ouput of migration is depth slizes.  transpose back to y,x,z 
# (or z,x,y if you prefer fortran terminology)

Flow('mig_z','mig',
     'transp plane=23 | transp plane=12')

Result('mig_z',
       '''
       grey title=Migration transp=n
       label2=Depth    unit2=km 
       label1=Distance unit1=km
       ''')


Flow('mig_t','mig_z','depth2time dt=.002 nt=2049 velocity=Vint3Dz.rsf')

Result('mig_t',
	'''
	put d2=1 d3=1 |	
	grey title=migration data in time
       	label2=Time    unit2=s  
       	label1=Trace unit1=num.
       ''')

End()


