from rsf.proj import *

# Compare m8r with su

# Fetch data
rawsegy=['L23535','L23536','L23537']
for name in rawsegy:
    Fetch(name+'.SGY',
	  server='http://certmapper.cr.usgs.gov',
      	  top='nersl/NPRA/SEISMIC/1981/31_81',
      	  dir='DMUX')
    Flow([name,'t'+name,name+'.bin',name+'.asc'],
         name+'.SGY',
         'segyread tfile=${TARGETS[1]} bfile=${TARGETS[2]} hfile=${TARGETS[3]}')
    
# Raw data and headers combined
Flow('rawline',rawsegy,'cat ${SOURCES[1:3]} axis=2')
Flow('trawline',map(lambda x: 't'+x, rawsegy),'cat ${SOURCES[1:3]} axis=2') 

# Show raw data
Flow('demoraw','rawline','window n2=3000')
Result('demoraw','grey pclip=80 title="Shot Gathers" label2=''')
Flow('gathers','rawline','window n2=250 f2=1000 n1=1500')
Result('gathers','grey pclip=80 title="Shot Gathers"')
Flow('gather','rawline','window n2=96 f2=2325')
Result('gather','grey pclip=80 title="Shot Gathers"')

# checkstack
Fetch('31_81_PR.SGY',
	server='http://certmapper.cr.usgs.gov',
      	  top='nersl/NPRA/SEISMIC/1981/31_81',
      	  dir='PROCESSED')

prs='31_81_PR.SGY'
Flow('prs tprs prs.bin prs.asc',
         '31_81_PR.SGY',
         'segyread tfile=${TARGETS[1]} bfile=${TARGETS[2]} hfile=${TARGETS[3]}')
Result('prs','grey pclip=85 title="Processed Stack" label2=''')
Flow('partprs','prs','window n1=751')
Result('partprs','grey pclip=85 title="Processed Stack" label2=''')

# Form mask to window out misfires
Flow('shotmask','trawline',
     '''
     window n1=1 f1=2 | mask min=157 max=157 |
     add add=-1 | add scale=-1
     ''')
Flow('shotline',['rawline','shotmask'],
     '''
     headerwindow mask=${SOURCES[1]} |
     put n2=101 n3=67 | window n2=96 f3=10 |
     put o2=-5225 d2=110 label2=Offset unit2=ft
         o3=0 d3=440 label3=Shot unit3=ft
     ''')
#Result('shotline','grey pclip=80 title="Gathers"')

# Shot gathers -> CMP gathers
Flow('cmp','shotline','shot2cmp half=n')
#Result('cmp','grey title="CMP Gathers"')

v0 = 5000
dv = 50
nv = 251
# Velocity scanning for CMP gathers
Flow('scn','cmp',
     '''
     vscan semblance=y v0=%g nv=%d dv=%g half=y str=0
     ''' % (v0,nv,dv))

Flow('vel','scn','pick rect1=15 rect2=25 gate=100')
Result('vel',
       '''
       grey title="NMO Velocity" 
       label1="Time" label2="Lateral"
       color=j scalebar=y allpos=y bias=1.0 %g barlabel="Velocity"
       barreverse=y o2num=1 d2num=1 n2tic=6 labelfat=4 font=2 titlefat=4
       ''' % (v0+0.5*nv*dv))

# NMO correction on CMP gathers
Flow('nmo',['cmp','vel'],'nmo velocity=${SOURCES[1]} half=n')

# Brute stacking
Flow('stack','nmo','stack')
Result('stack','agc rect1=250 | grey title="Brute Stack" font=2 titlefat=4 label2=''')

# Prestack Kirchhoff time migration
Flow('tcmps','cmp','transp memsize=1000 plane=23')
Flow('pstm','tcmps vel',
     '''
     mig2 vel=${SOURCES[1]} apt=5 antialias=1
     ''',split=[3,71,[0]],reduce='add')
Result('pstm',
       '''
       grey title="Prestack kirchhoff time migration"
       labelfat=4 font=2 titlefat=4 pclip=90
       ''')

End()
