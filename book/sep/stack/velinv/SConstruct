from rsfproj import *

# cgiter dircvv dirrst

# Mobil AVO CMP gather 807 at well4 location
Fetch('cmp807_raw.HH','rad')

Flow('cmp','cmp807_raw.HH',
     'dd form=native | tpow tpow=2 | mutter half=n v0=1.3 tp=0.2')
Plot('cmp','grey title="Input CMP Gather" ')


def iscan(miter,psun1,psun2,niter=10):
    return '''
    cgscan miter=%d psun1=%d psun2=%d error=${TARGETS[1]}
    niter=%d s02=0.25 v0=1.250 dv=0.025 nv=60 anti=1
    ''' % (miter,psun1,psun2,niter)

for psun in (0,1):
    scan = 'scan%d' % psun
    err  = 'err%d' % psun
    Flow([scan,err],'cmp',iscan(2,psun,psun))

Plot('vscan','scan1','grey title="Least-squares Velocity Scan" ')

scale = 6.382e-09 # 1/(cmp*cmp)

Result('cgiter','err0 err1',
       '''
       cat axis=2 ${SOURCES[1]} | scale dscale=%g |
       graph min2=0 max2=0.4 labelsz=10 titlesz=12 dash=1,0
       title="Iterative Convergence"
       ''' % scale)

Result('dircvv','cmp vscan','SideBySideAniso')

Flow('cmp2','scan1',iscan(0,1,1,0) + ' adj=1')

clip=187.628

Plot('cmp2','grey title="Predicted Data" clip=%g' % clip)

Plot('res','cmp2 cmp',
     'add scale=1,-1 ${SOURCES[1]} | grey title="Residual Error" clip=%g' % clip)

Result('dirrst','cmp2 res','SideBySideAniso')
  
End()
