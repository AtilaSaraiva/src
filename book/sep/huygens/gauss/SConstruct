from rsfproj import *

dx = 0.5

for case in range(2):
    letter = 'np'[case]
    velocity = 'g%s-velocity' % letter
    Flow(velocity,None,
         '''
         math
         o1=0.0 n1=751 d1=0.004 label1=z unit1=km
         o2=4.0 n2=501 d2=0.008 label2=x unit2=km
         label=Velocity unit=km/s
         output="%g+(%g)*exp(-%g*((x1-1)^2+(x2-6)^2))"
         ''' % ((3,2)[case],(-2,2)[case],1.0/(dx*dx)))
    Result(velocity,
           '''
           grey allpos=y bias=%g wanttitle=n
           wantscalebar=y bartype=h 
           ''' % (2,1)[case])
    Plot(velocity,
         'grey allpos=y bias=%g wanttitle=n ' % (2,1)[case])

    rays = 'rays%d' % case
    Flow(rays,velocity,'rays2 dt=0.01 nt=1000 nr=101 a0=130 amax=230 zshot=0 yshot=6 sym=n')
    Plot(rays,
         '''
         window n1=131 n2=90 f2=5 |
         graph min2=4 max2=8 min1=0 max1=3 transp=y yreverse=y plotcol=0
         title="Ray Tracing" wantaxis=n wheretitle=b wherexlabel=t
         ''')
    Plot('o'+rays,[velocity,rays],'Overlay')
    
    hwt = 'hwt%d' % case
    Flow(hwt,velocity,'hwt2d dt=0.01 nt=1000 ng=101 og=-50 dg=1 xsou=6 zsou=0')
    Plot(hwt,
         '''
         window n2=131 n1=90 f1=5 |
         transp |
         graph min1=4 max1=8 min2=0 max2=3 yreverse=y plotcol=0
         title="Wavefront Tracing" wantaxis=n wheretitle=b wherexlabel=t
         ''')
    Plot('o'+hwt,[velocity,hwt],'Overlay')
    comp = 'g%s-velrw' % letter
    Result(comp,['o'+rays,'o'+hwt],'SideBySideIso')


    dif = 'g%s-diff' % letter
    Flow(dif,[hwt,rays],
         '''
         transp | add scale=1,-1 |
         window n1=81 n2=90 f2=5 |
         math output="abs(input)" | real
         ''')
    Result(dif,
           '''
           grey allpos=y scalebar=y 
           label1=Time unit1=s 
           label2="Take-off Angle" unit2="\^o\_"
           barlabel=Distance barunit=m
           wanttitle=n
           ''')

End()
