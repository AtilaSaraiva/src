from rsf.proj import *

# Download data
Fetch('austin-w.HH','bay')

# Convert format, remove mean, and taper
Flow('dem','austin-w.HH',
     '''
     dd form=native |
     add add=-191 |
     costaper nw1=50 nw2=50
     ''')

# Display
Result('dem',
       '''
       grey clip=150 yreverse=n screenratio=1
       title="Digital Elevation Map" 
       ''')

# 2-D Fourier Transform
Flow('fft','dem',
     'rtoc | fft3 axis=1 pad=1 | fft3 axis=2 pad=1')
Plot('fft',
     '''
     math output="abs(input)" | real | 
     grey title="Fourier Transform" allpos=y screenratio=1
     ''')

# A. Compression by Windowing
#############################

cut = 0.05 # Fixed

# Create a frame
Flow('frame','fft','real | math output="sqrt(x1*x1+x2*x2)" ')
Plot('frame',
     '''
     contour nc=1 c0=%g plotfat=5 plotcol=3
     wantaxis=n wanttitle=n screenratio=1
     ''' % cut)
Result('fft','fft frame','Overlay')

# Cut a hole
Flow('fcut','frame fft',
     '''
     mask min=%g | 
     dd type=float | rtoc | 
     mul ${SOURCES[1]}
     ''' % cut)

# Inverse FFT
Flow('cut','fcut',
     'fft3 axis=2 inv=y | fft3 axis=1 inv=y | real')
Result('cut',
       '''
       grey clip=150 yreverse=n screenratio=1
       title="Compression Noise" 
       ''')

Flow('sig','dem cut','add scale=1,-1 ${SOURCES[1]}')
Result('sig',
       '''
       grey clip=150 yreverse=n screenratio=1
       title="Compression Signal" 
       ''')

# B. Compression by Thresholding
################################

thr = 10000 # Change Me

# Plot histogram
Plot('hist','fft',
     '''
     math output="abs(input)" | real |
     histogram o1=0 d1=%g n1=101 |
     dd type=float | scale axis=1 |
     graph title="Scaled Histogram" 
     ''' % (2*thr/100))
Flow('line.asc',None,
     'echo 0 0 0 1 n1=4 data_format=ascii_float in=$TARGET')
Plot('line','line.asc',
     '''
     dd type=complex form=native | 
     graph min1=-1 max1=2 plotcol=5 wantaxis=n wanttitle=n
     ''')
Result('hist','hist line','Overlay')

# Thresholding
Flow('fthr','fft','thr thr=%g' % thr)

# Inverse FFT
Flow('thr','fthr',
     'fft3 axis=2 inv=y | fft3 axis=1 inv=y | real')
Result('thr',
       '''
       grey clip=150 yreverse=n screenratio=1
       title="Compression Signal" 
       ''')

# Subtract from Data
Flow('noi','dem thr','add scale=1,-1 ${SOURCES[1]}')
Result('noi',
       '''
       grey clip=150 yreverse=n screenratio=1
       title="Compression Noise" 
       ''')

End()
