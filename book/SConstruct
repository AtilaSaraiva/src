import os, string
import rsfdoc
import rsfprog
import sftour

books = '''
bei
gee
'''

reports = '''
cwp
data
geo391
rsf
sep
slim
'''

def publicproj(project):
    '''Check if the project is publicly accessible'''
    os.chdir(project)
    # OK if all=y on the command line
    if ARGUMENTS.get('all', 'n') == 'y':
        return 1
    # OK if no PRIVATE data
    sin, sout, serr = os.popen3('scons -s .sf_data')
    sin.close()
    data = sout.read()
    sout.close()
    status = serr.read()
    serr.close()
    if not status:
        items = string.split(data)
        if 'PRIVATE' in items:
            return 0
    return 1

def progtest(target=None,source=None,env=None):
    for project in env.get('projects'):
        if publicproj(project):
            print 'Testing in %s' % project
            print '-----------' + '-'*len(project)
            if os.system('scons test'):
                return 1
        os.chdir('../../..')            
    return 0

def www(target=None,source=None,env=None):
    sftour.tour(map(str,source),'scons -Q book.tex www')
    return 0

env = Environment()
env.Command('www',Split(reports),Action(www))

for prog in rsfdoc.progs.keys():
    uses = rsfdoc.progs[prog].uses
    projects = []
    for book in uses.keys():
        for chapter in uses[book].keys():
            projects.extend(map(lambda x: os.path.join(book,chapter,x),
                                uses[book][chapter]))
    env.Command(prog+'.test',None,
                Action(progtest,varlist=['projects']),projects=projects)
