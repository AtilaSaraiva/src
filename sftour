#!/usr/bin/env python
import sys, os, glob, signal

make = "scons"

if len(sys.argv) < 2:
    print '''
    Usage: %s [-v] [-m target|-x command]
    visits lower-case subdirectories
    -v             verbose (don't suppress stdout)
    -s target      executes %s target
    -x command     executes command
    ''' % (sys.argv[0],make)
    sys.exit(0)

########
script = sys.argv.pop(0)
comm = sys.argv.pop(0)

if comm == "-v":
   verbose = 1
   comm = sys.argv.pop(0)
else:
   verbose = 0

if comm == "-s":
   comm = ' '.join([make] + sys.argv)
elif comm == "-x":
   comm = ' '.join(sys.argv)
elif comm:
   print '%s: Unknon switch %s' % (script,comm)
   sys.exit(1)

sys.stderr.write('Executing "%s"...\n' % comm)

dirs = filter(os.path.isdir,glob.glob('[a-z]*'))

sys.stderr.write('::'.join(dirs) + '\n')

child = None

def handler(signum, frame):
    sys.stderr.write('\n%s: aborting...\n' % script)
    if child:
        os.kill (signal.SIGINT,child)
    sys.exit(-1)

signal.signal(signal.SIGINT,handler) # handle interrupt

def syswait(comm):
    child = os.fork()
    if child:
        (pid,exit) = os.waitpid(child,0)
        child = 0
        return exit
    else:
        os.system(comm)
        os._exit(0)

if not verbose:
    sys.stdout = open("/dev/null","w")

cwd = os.getcwd()
for dir in dirs:
    os.chdir (cwd)
    try:
        os.chdir (dir)
    except:
        sys.stderr.write('\n%s: wrong directory %s...\n' % (script,dir))
        sys.exit(1)
    os.environ['PWD'] = os.path.join(cwd,dir)
    sys.stderr.write(' '.join(['+' * 44,dir,'\n']))
    if comm:
        syswait(comm)
    sys.stderr.write(' '.join(['-' * 44,dir,'\n']))

sys.stderr.write('Done.\n')



