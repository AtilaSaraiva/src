import os, sys, re, string, glob, types
sys.path.append('../..')
import configure

progs = '''
born2d c2r cell2 cell3 cgscan constfdmig2 cube2list distance dmo dsr
dsr2 eikonal eikonalvti fincon finstack fkamo fkdmo gazdag halfint
hwt2d hwtex interp2 interpt kirchinv kirchnew kirmod kirmod3 kirmodcmp
layer mig45 mutter preconstkirch rays2 rays2a rays3 reg2tri remap1
ricker1 rwemete2d rweab rwesrmig rwezomig s2ofz s2ofz2 shoot2
shotconstkirch slant srsyn srmva sstep2 timecont trace2 trapez tri2reg
trirand unif2 unif3 veltran voft vofz zomig zomva
'''

try:  # distributed version
    Import('env root libdir bindir')
    env = env.Clone()
    dir = string.replace(os.getcwd(),'/build','')
    src = map(os.path.basename,glob.glob(os.path.join(dir,'[a-z]*.c')))
except: # local version
    env = configure.Debug()
    root = None
    SConscript('../../api/c/SConstruct')
    src = glob.glob('[a-z]*.c')

env.Prepend(CPPPATH=['../../include'],
            LIBPATH=['../../lib'],
            LIBS=['rsf'])

src.remove('predicates.c')

for source in src:
    inc = env.Include(source,prefix='')
    obj = env.StaticObject(source)
    env.Depends(obj,inc)

mains = Split(progs)

for prog in mains:
    sources = ['M' + prog]
    configure.depends(env,sources,'M'+prog)
    prog = env.Program(prog,map(lambda x: x + '.c',sources))
    if root:
        env.Install(bindir,prog)

for prog in ('agrid','ctridiagonal','veltran'):
    sources = ['Test' + prog,prog]
    configure.depends(env,sources,prog)
    sources = map(lambda x: x + '.o',sources)
    env.Object('Test' + prog + '.c')
    env.Program(sources,PROGPREFIX='',PROGSUFFIX='.x')
 
######################################################################
# SELF-DOCUMENTATION
######################################################################
if root:
    main = 'sfimag.py'
    
    docs = map(lambda prog: env.Doc(prog,'M' + prog),mains)
    env.Depends(docs,'#/framework/rsfdoc.py')	
    doc = env.Docmerge(main,docs)
    env.Install(libdir,doc)

#####################################################################

# 	$Id$

