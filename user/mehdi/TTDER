

for 
t=t*pi/180;
p=p*pi/180;

n1 =  sin(t)*cos(p);
n2 = sin(t)*sin(p);
n3 = cos(t);


DC11=(1/3)*(n1^2 + (sqrt(3)*((-n1^2)*(C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2) - n1^2*(C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2) + 
      (2/3)*n1^2*(C11*n1^2 + C55*n1^2 + C66*n1^2 + 2*C16*n1*n2 + 2*C26*n1*n2 + 2*C45*n1*n2 + C22*n2^2 + C44*n2^2 + C66*n2^2 + 
        (C33 + C44 + C55)*n3^2)))/sqrt(((C36 + C45)*n1*n3 + (C23 + C44)*n2*n3)^2 + ((C13 + C55)*n1*n3 + (C36 + C45)*n2*n3)^2 - 
      (C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2)*(C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2) + 
      (C16*n1^2 + n2*((C12 + C66)*n1 + C26*n2) + C45*n3^2)^2 - (C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2)*
       (C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) - (C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2)*
       (C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) + (1/3)*(C11*n1^2 + C55*n1^2 + C66*n1^2 + 2*C16*n1*n2 + 2*C26*n1*n2 + 2*C45*n1*n2 + 
         C22*n2^2 + C44*n2^2 + C66*n2^2 + (C33 + C44 + C55)*n3^2)^2))
         
          
          
          
          DC12=(2*n1*n2*(C16*n1^2 + n2*((C12 + C66)*n1 + C26*n2) + C45*n3^2))/
  (sqrt(3)*sqrt(((C36 + C45)*n1*n3 + (C23 + C44)*n2*n3)^2 + ((C13 + C55)*n1*n3 + (C36 + C45)*n2*n3)^2 - 
     (C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2)*(C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2) + 
     (C16*n1^2 + n2*((C12 + C66)*n1 + C26*n2) + C45*n3^2)^2 - (C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2)*
      (C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) - (C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2)*
      (C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) + (1/3)*(C11*n1^2 + C55*n1^2 + C66*n1^2 + 2*C16*n1*n2 + 2*C26*n1*n2 + 2*C45*n1*n2 + 
        C22*n2^2 + C44*n2^2 + C66*n2^2 + (C33 + C44 + C55)*n3^2)^2))
        
        
        
         
         
         
         
         
         DC13=(2*n1*n3*((C13 + C55)*n1*n3 + (C36 + C45)*n2*n3))/
  (sqrt(3)*sqrt(((C36 + C45)*n1*n3 + (C23 + C44)*n2*n3)^2 + ((C13 + C55)*n1*n3 + (C36 + C45)*n2*n3)^2 - 
     (C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2)*(C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2) + 
     (C16*n1^2 + n2*((C12 + C66)*n1 + C26*n2) + C45*n3^2)^2 - (C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2)*
      (C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) - (C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2)*
      (C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) + (1/3)*(C11*n1^2 + C55*n1^2 + C66*n1^2 + 2*C16*n1*n2 + 2*C26*n1*n2 + 2*C45*n1*n2 + 
        C22*n2^2 + C44*n2^2 + C66*n2^2 + (C33 + C44 + C55)*n3^2)^2))
        
        
        
        DC22=(1/3)*(n2^2 + (sqrt(3)*((-n2^2)*(C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2) - n2^2*(C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) + 
      (2/3)*n2^2*(C11*n1^2 + C55*n1^2 + C66*n1^2 + 2*C16*n1*n2 + 2*C26*n1*n2 + 2*C45*n1*n2 + C22*n2^2 + C44*n2^2 + C66*n2^2 + 
        (C33 + C44 + C55)*n3^2)))/sqrt(((C36 + C45)*n1*n3 + (C23 + C44)*n2*n3)^2 + ((C13 + C55)*n1*n3 + (C36 + C45)*n2*n3)^2 - 
      (C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2)*(C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2) + 
      (C16*n1^2 + n2*((C12 + C66)*n1 + C26*n2) + C45*n3^2)^2 - (C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2)*
       (C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) - (C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2)*
       (C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) + (1/3)*(C11*n1^2 + C55*n1^2 + C66*n1^2 + 2*C16*n1*n2 + 2*C26*n1*n2 + 2*C45*n1*n2 + 
         C22*n2^2 + C44*n2^2 + C66*n2^2 + (C33 + C44 + C55)*n3^2)^2))
         
         
         
         
         
         DC23=(2*n2*n3*((C36 + C45)*n1*n3 + (C23 + C44)*n2*n3))/
  (sqrt(3)*sqrt(((C36 + C45)*n1*n3 + (C23 + C44)*n2*n3)^2 + ((C13 + C55)*n1*n3 + (C36 + C45)*n2*n3)^2 - 
     (C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2)*(C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2) + 
     (C16*n1^2 + n2*((C12 + C66)*n1 + C26*n2) + C45*n3^2)^2 - (C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2)*
      (C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) - (C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2)*
      (C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) + (1/3)*(C11*n1^2 + C55*n1^2 + C66*n1^2 + 2*C16*n1*n2 + 2*C26*n1*n2 + 2*C45*n1*n2 + 
        C22*n2^2 + C44*n2^2 + C66*n2^2 + (C33 + C44 + C55)*n3^2)^2))
        
        
        
        DC33=(1/3)*(n3^2 + (sqrt(3)*((-n3^2)*(C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2) - n3^2*(C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) + 
      (2/3)*n3^2*(C11*n1^2 + C55*n1^2 + C66*n1^2 + 2*C16*n1*n2 + 2*C26*n1*n2 + 2*C45*n1*n2 + C22*n2^2 + C44*n2^2 + C66*n2^2 + 
        (C33 + C44 + C55)*n3^2)))/sqrt(((C36 + C45)*n1*n3 + (C23 + C44)*n2*n3)^2 + ((C13 + C55)*n1*n3 + (C36 + C45)*n2*n3)^2 - 
      (C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2)*(C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2) + 
      (C16*n1^2 + n2*((C12 + C66)*n1 + C26*n2) + C45*n3^2)^2 - (C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2)*
       (C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) - (C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2)*
       (C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) + (1/3)*(C11*n1^2 + C55*n1^2 + C66*n1^2 + 2*C16*n1*n2 + 2*C26*n1*n2 + 2*C45*n1*n2 + 
         C22*n2^2 + C44*n2^2 + C66*n2^2 + (C33 + C44 + C55)*n3^2)^2))
         
         
         
         
         
         DC44=(1/3)*(n2^2 + n3^2 + (sqrt(3)*(2*n2*n3*((C36 + C45)*n1*n3 + (C23 + C44)*n2*n3) - n3^2*(C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2) - 
      n2^2*(C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2) - n2^2*(C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) - 
      n3^2*(C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) + (2/3)*(n2^2 + n3^2)*(C11*n1^2 + C55*n1^2 + C66*n1^2 + 2*C16*n1*n2 + 2*C26*n1*n2 + 
        2*C45*n1*n2 + C22*n2^2 + C44*n2^2 + C66*n2^2 + (C33 + C44 + C55)*n3^2)))/
    sqrt(((C36 + C45)*n1*n3 + (C23 + C44)*n2*n3)^2 + ((C13 + C55)*n1*n3 + (C36 + C45)*n2*n3)^2 - (C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2)*
       (C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2) + (C16*n1^2 + n2*((C12 + C66)*n1 + C26*n2) + C45*n3^2)^2 - 
      (C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2)*(C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) - 
      (C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2)*(C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) + 
      (1/3)*(C11*n1^2 + C55*n1^2 + C66*n1^2 + 2*C16*n1*n2 + 2*C26*n1*n2 + 2*C45*n1*n2 + C22*n2^2 + C44*n2^2 + C66*n2^2 + (C33 + C44 + C55)*n3^2)^
        2))
    
    
    
    
    DC45=(1/3)*(2*n1*n2 + (sqrt(3)*(2*n1*n3*((C36 + C45)*n1*n3 + (C23 + C44)*n2*n3) + 2*n2*n3*((C13 + C55)*n1*n3 + (C36 + C45)*n2*n3) - 
      2*n1*n2*(C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2) + 2*n3^2*(C16*n1^2 + n2*((C12 + C66)*n1 + C26*n2) + C45*n3^2) - 
      2*n1*n2*(C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) + (4/3)*n1*n2*(C11*n1^2 + C55*n1^2 + C66*n1^2 + 2*C16*n1*n2 + 2*C26*n1*n2 + 
        2*C45*n1*n2 + C22*n2^2 + C44*n2^2 + C66*n2^2 + (C33 + C44 + C55)*n3^2)))/
    sqrt(((C36 + C45)*n1*n3 + (C23 + C44)*n2*n3)^2 + ((C13 + C55)*n1*n3 + (C36 + C45)*n2*n3)^2 - (C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2)*
       (C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2) + (C16*n1^2 + n2*((C12 + C66)*n1 + C26*n2) + C45*n3^2)^2 - 
      (C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2)*(C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) - 
      (C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2)*(C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) + 
      (1/3)*(C11*n1^2 + C55*n1^2 + C66*n1^2 + 2*C16*n1*n2 + 2*C26*n1*n2 + 2*C45*n1*n2 + C22*n2^2 + C44*n2^2 + C66*n2^2 + (C33 + C44 + C55)*n3^2)^
        2))
    
    
    
    DC55=(1/3)*(n1^2 + n3^2 + (sqrt(3)*(2*n1*n3*((C13 + C55)*n1*n3 + (C36 + C45)*n2*n3) - n3^2*(C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2) - 
      n1^2*(C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2) - n3^2*(C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2) - 
      n1^2*(C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) + (2/3)*(n1^2 + n3^2)*(C11*n1^2 + C55*n1^2 + C66*n1^2 + 2*C16*n1*n2 + 2*C26*n1*n2 + 
        2*C45*n1*n2 + C22*n2^2 + C44*n2^2 + C66*n2^2 + (C33 + C44 + C55)*n3^2)))/
    sqrt(((C36 + C45)*n1*n3 + (C23 + C44)*n2*n3)^2 + ((C13 + C55)*n1*n3 + (C36 + C45)*n2*n3)^2 - (C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2)*
       (C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2) + (C16*n1^2 + n2*((C12 + C66)*n1 + C26*n2) + C45*n3^2)^2 - 
      (C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2)*(C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) - 
      (C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2)*(C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) + 
      (1/3)*(C11*n1^2 + C55*n1^2 + C66*n1^2 + 2*C16*n1*n2 + 2*C26*n1*n2 + 2*C45*n1*n2 + C22*n2^2 + C44*n2^2 + C66*n2^2 + (C33 + C44 + C55)*n3^2)^
        2))
    
    
    
    
    DC66=(1/3)*(n1^2 + n2^2 + (sqrt(3)*((-n1^2)*(C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2) - n2^2*(C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2) - 
      n2^2*(C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2) + 2*n1*n2*(C16*n1^2 + n2*((C12 + C66)*n1 + C26*n2) + C45*n3^2) - 
      n1^2*(C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) + (2/3)*(n1^2 + n2^2)*(C11*n1^2 + C55*n1^2 + C66*n1^2 + 2*C16*n1*n2 + 2*C26*n1*n2 + 
        2*C45*n1*n2 + C22*n2^2 + C44*n2^2 + C66*n2^2 + (C33 + C44 + C55)*n3^2)))/
    sqrt(((C36 + C45)*n1*n3 + (C23 + C44)*n2*n3)^2 + ((C13 + C55)*n1*n3 + (C36 + C45)*n2*n3)^2 - (C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2)*
       (C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2) + (C16*n1^2 + n2*((C12 + C66)*n1 + C26*n2) + C45*n3^2)^2 - 
      (C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2)*(C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) - 
      (C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2)*(C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) + 
      (1/3)*(C11*n1^2 + C55*n1^2 + C66*n1^2 + 2*C16*n1*n2 + 2*C26*n1*n2 + 2*C45*n1*n2 + C22*n2^2 + C44*n2^2 + C66*n2^2 + (C33 + C44 + C55)*n3^2)^
        2))
    
    
    
    
    DC61=(1/3)*(2*n1*n2 + (sqrt(3)*(-2*n1*n2*(C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2) - 2*n1*n2*(C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2) + 
      2*n1^2*(C16*n1^2 + n2*((C12 + C66)*n1 + C26*n2) + C45*n3^2) + (4/3)*n1*n2*(C11*n1^2 + C55*n1^2 + C66*n1^2 + 2*C16*n1*n2 + 2*C26*n1*n2 + 
        2*C45*n1*n2 + C22*n2^2 + C44*n2^2 + C66*n2^2 + (C33 + C44 + C55)*n3^2)))/
    sqrt(((C36 + C45)*n1*n3 + (C23 + C44)*n2*n3)^2 + ((C13 + C55)*n1*n3 + (C36 + C45)*n2*n3)^2 - (C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2)*
       (C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2) + (C16*n1^2 + n2*((C12 + C66)*n1 + C26*n2) + C45*n3^2)^2 - 
      (C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2)*(C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) - 
      (C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2)*(C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) + 
      (1/3)*(C11*n1^2 + C55*n1^2 + C66*n1^2 + 2*C16*n1*n2 + 2*C26*n1*n2 + 2*C45*n1*n2 + C22*n2^2 + C44*n2^2 + C66*n2^2 + (C33 + C44 + C55)*n3^2)^
        2))
    
    
    
    
    
    DC26=(1/3)*(2*n1*n2 + (sqrt(3)*(-2*n1*n2*(C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2) + 
      2*n2^2*(C16*n1^2 + n2*((C12 + C66)*n1 + C26*n2) + C45*n3^2) - 2*n1*n2*(C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) + 
      (4/3)*n1*n2*(C11*n1^2 + C55*n1^2 + C66*n1^2 + 2*C16*n1*n2 + 2*C26*n1*n2 + 2*C45*n1*n2 + C22*n2^2 + C44*n2^2 + C66*n2^2 + 
        (C33 + C44 + C55)*n3^2)))/sqrt(((C36 + C45)*n1*n3 + (C23 + C44)*n2*n3)^2 + ((C13 + C55)*n1*n3 + (C36 + C45)*n2*n3)^2 - 
      (C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2)*(C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2) + 
      (C16*n1^2 + n2*((C12 + C66)*n1 + C26*n2) + C45*n3^2)^2 - (C55*n1^2 + 2*C45*n1*n2 + C44*n2^2 + C33*n3^2)*
       (C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) - (C66*n1^2 + 2*C26*n1*n2 + C22*n2^2 + C44*n3^2)*
       (C11*n1^2 + 2*C16*n1*n2 + C66*n2^2 + C55*n3^2) + (1/3)*(C11*n1^2 + C55*n1^2 + C66*n1^2 + 2*C16*n1*n2 + 2*C26*n1*n2 + 2*C45*n1*n2 + 
         C22*n2^2 + C44*n2^2 + C66*n2^2 + (C33 + C44 + C55)*n3^2)^2))
         
         
         
         
         
         DC36=(2*n2*n3*(n1*n3*(C13 + C55) + n2*n3*(C36 + C45)) + 2*n1*n3*(n2*n3*(C23 + C44) + n1*n3*(C36 + C45)))/
  (sqrt(3)*sqrt((1/3)*(C11*n1^2 + 2*C16*n1*n2 + C22*n2^2 + 2*C26*n1*n2 + n3^2*(C33 + C44 + C55) + C44*n2^2 + 
        2*C45*n1*n2 + C55*n1^2 + C66*n1^2 + C66*n2^2)^2 - (C11*n1^2 + 2*C16*n1*n2 + C55*n3^2 + C66*n2^2)*
      (C22*n2^2 + 2*C26*n1*n2 + C44*n3^2 + C66*n1^2) - (C11*n1^2 + 2*C16*n1*n2 + C55*n3^2 + C66*n2^2)*
      (C33*n3^2 + C44*n2^2 + 2*C45*n1*n2 + C55*n1^2) + (n2*(n1*(C12 + C66) + C26*n2) + C16*n1^2 + C45*n3^2)^2 + 
     (n1*n3*(C13 + C55) + n2*n3*(C36 + C45))^2 - (C22*n2^2 + 2*C26*n1*n2 + C44*n3^2 + C66*n1^2)*
      (C33*n3^2 + C44*n2^2 + 2*C45*n1*n2 + C55*n1^2) + (n2*n3*(C23 + C44) + n1*n3*(C36 + C45))^2))
      
      
      
      
      
      