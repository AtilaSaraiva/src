import os, sys, string
sys.path.append('../../framework')
import bldutil

try:  # distributed version
    Import('env root bindir pkgdir incdir')
    env = env.Clone()
except: # local version
    env = bldutil.Debug()
    root = None
    SConscript('../../api/c++/SConstruct')

inc = Glob('[a-z]*.hh')

cpp = 'c++' in env.get('API',[])

prog = ''
mains = Split(prog)

if cpp:
    libs = [env.get('DYNLIB','')+'rsf++',
            env.get('DYNLIB','')+'rsf']
    env.Prepend(CPPPATH=['../../include'],
                LIBPATH=['../../lib'],
                LIBS=libs)

######################################################################
# SELF-DOCUMENTATION
######################################################################
if root:
    user = os.path.basename(os.getcwd())
    main = 'sf%s.py' % user
    
    docs = [env.Doc(prog,'M' + prog) for prog in mains] 
    env.Depends(docs,'#/framework/rsf/doc.py')
    doc = env.RSF_Docmerge(main,docs)
    env.Install(pkgdir,doc)
#####################################################################
