Prerequisites
=============

   1. C compiler. ANSI-compliant compiler such as GCC should work. GCC
usually comes pre-installed on Linux machines.

   2. Python interpreter. Python is an interpretable programming
language. It is used by RSF in installation scripts and project
management scripts. Python comes pre-installed on RedHat Linux.

   3. SCons (Software Construction). SCons is a Python-based tool for
project management and software construction. It is a modern
replacement for the Unix ``make'' utility. RSF uses SCons for both
software construction and processing flow management. The current
version of SCons is available at http://www.scons.org/. It is also
provided under the scons directory in the RSF source distribution.

Environmental variables
=======================

   1.  Set the RSFROOT environmental variable to the directory where
you want RSF installed.

   2. Set the PYTHONPATH environmental variable to include
$RSFROOT/lib.

You may also want to add $RSFROOT/bin to your PATH environmental
variable add set DATAPATH to the directory for storing temporary data
files.

Example configuration for csh and tcsh:

setenv RSFROOT /usr/local/rsf
if ($?PYTHONPATH) then
   setenv PYTHONPATH ${PYTHONPATH}:$RSFROOT/lib
else
   setenv PYTHONPATH $RSFROOT/lib
endif
set path = ($path $RSFROOT/bin)
setenv DATAPATH /var/tmp/

Example configuration for bash:

export RSFROOT=/usr/local/rsf
if [ -n "$PYTHONPATH" ]; then
   export PYTHONPATH=${PYTHONPATH}:$RSFROOT/lib
else
   export PYTHONPATH=$RSFROOT/lib
fi
export PATH=$PATH:$RSFROOT/bin
export DATAPATH=/var/tmp/

Notice the slash at the end of the DATAPATH variable.

Software construction
=====================

   1. Install SCons.

      If you don't have the latest version of SCons already installed,
you can do so by going to scons directory. Install SCons from the
enclosed rpm file or by unpacking the source and running

      python setup.py install

   2. Configuration.

      Change to the top RSF source directory and run

      scons config

      You can examine the config.py file that this command
generates. Additional options are available. You can obtain a full
list of customizable variables by running scons -h. For example, to
install C++ and Fortran-90 API bindings in addition to the basic
package, run

      scons API=c++,fortran-90 config

      To change configuration at any time, you may need to run

      scons -c config

      first to remove previous settings.

   3. Building and installing the package.

      Run scons install or the following two commands in succession:

      scons
      scons install

      If you need ``root'' privileges for installing under $RSFROOT,
you may need to run

      scons
      su
      scons install

   4. Cleaning.

      To clean all intermediate files generated by SCons, run

      scons -c

      To clean all intermediate files and all installed files, run

      scons -c install

Bugs
====

Please report all problems encountered during software construction to
<sergey.fomel@beg.utexas.edu>
