########################################################################
################### ENVIRONMENT-INDEPDENDENT COMMANDS ##################
###################### DO NOT EDIT BELOW THIS LINE #####################
########################################################################

import os
import shutil
thispath = os.getcwd()
env = Environment()

Import('MADAGASCAR TMPDATAPATH ROOT jobs scripts')

###### INDICES INTO JOB PARAM LIST
n_cmd         = 0
n_dep         = 1
n_bat         = 2
n_clk         = 3
n_res         = 4
n_que         = 5

def scriptwriter(batch,job,path,queue,mail,acct,wall,res,exe):
    if batch == 'pbs':
        f = open(job + '/' + job +'.pbs','w')
        f.write('#PBS -N ' + job + '\n')
	f.write('#PBS -A ' + acct + '\n')
        f.write('#PBS -V\n')
        f.write('#PBS -l '+wall + '\n')
        f.write('#PBS -l '+res + '\n')
        f.write('#PBS -q '+queue + '\n')
        f.write('#PBS -m abe\n')
        f.write('#PBS -M '+mail + '\n')
        f.write('#PBS -o '+path+'/'+job+'/cout.txt\n')
        f.write('#PBS -e '+path+'/'+job+'/cerr.txt\n')
        f.write('cd '+path+'/'+job+'\n')
        f.write(exe + ' par=../parfile\n')
        f.close()

    if batch == 'sge':
        f = open(job + '/' + job +'.sge','w')
        f.write('#$ -N ' + job + '\n')
	f.write('#$ -A ' + acct + '\n')
        f.write('#$ -V\n')
	f.write('#$ -cwd\n')
        f.write('#$ -l '+wall + '\n')
        f.write('#$ -pe '+res + '\n')
        f.write('#$ -q '+queue + '\n')
        f.write('#$ -m abe\n')
        f.write('#$ -M '+mail + '\n')
        f.write('#$ -o '+path+'/'+job+'/cout.txt\n')
        f.write('#$ -e '+path+'/'+job+'/cerr.txt\n')
        f.write('cd '+path+'/'+job+'\n')
        f.write(exe + ' par=../parfile\n')
        f.close()

# this function describes how to make the type of target used in this script
def make(target, source, env):
    tgt = str(target[0])
    print 'making ' + tgt
# create working dir
    try:
        shutil.rmtree('./' + tgt)
    except OSError:
        pass	 
    os.mkdir('./' + tgt)
    if tgt in scripts.keys():
        Export('MADAGASCAR TMPDATAPATH ROOT')
        SConscript('./' + tgt + '.sc')
    if tgt in jobs.keys():
# expand tmpdatapath in param file        
        fin  = open('./' + tgt + '.par','r')
        fout = open('./parfile','w')
	for line in fin:
            fout.write(line.format(TMPDATAPATH=TMPDATAPATH))
	fin.close()
        fout.close()
        if (jobs[tgt][n_bat] == ''):
            os.system('cd ./' + tgt + '; ' + jobs[tgt][n_cmd] + ' par=../parfile')
        else: 
            scriptwriter(jobs[tgt][n_bat], tgt, thispath, jobs[tgt][n_que], MAIL, ACCT, jobs[tgt][n_clk], jobs[tgt][n_res], jobs[tgt][n_cmd])
	    if len(jobs[tgt][n_dep]) == 0:
	        DEP[tgt] = os.system('cd ' + tgt + '; qsub ' + tgt + '.' + jobs[tgt][n_bat])
	    elif jobs[tgt][n_bat] in DEP:
	        DEP[tgt] = os.system('cd ' + tgt + '; qsub -W depend=afterok:' + DEP[jobs[tgt][n_dep][len(jobs[tgt][n_dep])-1]] + ' ' + tgt + '.' + jobs[tgt][n_bat])
	    else:
	        DEP[tgt] = os.system('cd ' + tgt + '; qsub ' + tgt + '.' + jobs[tgt][n_bat])

# this loop induces the required dependencies, and indicates what needs to be cleaned up
for i in jobs.keys():
    if len(jobs[i][n_dep]) == 0:
        t = env.Command([i], [], make)
    else: 
#        print 'job = ' + i + ' deps = ' 
#        print jobs[i][n_dep] + [i + '.par', 'SConstruct']
        t = env.Command([i], jobs[i][n_dep], make)
    Clean(t,i)

for i in scripts.keys():
    if len(scripts[i]) == 0:
        t = env.Command([i], [], make)
    else:
        t = env.Command([i], scripts[i], make)
    if (i == 'tmpdata'):
        Clean(t,[i, TMPDATAPATH])
    else:
        Clean(t,i)

