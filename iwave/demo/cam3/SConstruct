import os
import shutil
thispath = os.getcwd()
env = Environment();

####### tools

cmddict = { 
'asg.x' :  '../../asg',
'standardmodel.x' : '../model' 
}

def cmdlink(target, source, env):
    for cmd in target:
        cmdpath = os.path.abspath(os.path.expandvars(str(cmddict[str(cmd)])))
        os.system('cd ' + cmdpath + '; scons main/' + str(cmd) + '; cd ' + thispath)
        os.system('ln -s ' + cmdpath + '/main/' + str(cmd) + ' .')
    
env.Command(cmddict.keys(),['SConstruct'],cmdlink)

####### local data

def make_par(target, source, env):
    os.system('ln -s ./Orig/demo.par .')

env.Command(['demo.par'], ['SConstruct'], make_par)

def make_data(target, source, env):
    os.system('sunull nt=1501 ntr=301 dt=0.002 | sushw key=sx a=3300 c=0 j=301| sushw key=gx a=100 b=20 j=301 | sushw key=delrt a=0 | sushw key=selev a=-40 | sushw key=gelev a=-20 > data.su; ./asg.x par=demo.par')

#env.Command(['data.su', 'cout0.txt'], ['demo.par', 'hdr.su', 'dn2d_20m.rsf', 'vp2d_20m.rsf', 'wavelet.su', 'SConstruct'], make_data)
   
def hdr_prep(target, source, env):
    os.system('sunull nt=701 ntr=2400 dt=0.00115 | sushw key=sx a=40 c=40 j=100| sushw key=gx a=0 b=10 j=100 | sushw key=delrt a=0| sushw key=selev a=-40 | sushw key=gelev a=-80 | suchw key1=offset key2=gx key3=sx a=0 b=1 c=-1 > ' + str(target[0]))

env.Command(['hdr.su'],['SConstruct'],hdr_prep)

def mdl_prep(target, source, env):
    os.system('./standardmodel.x par=../model/data/Orig/cambulksm.par; ./standardmodel.x par=../model/data/Orig/cambuoy.par')

env.Command(['cambulksm.rsf', 'cambulksm.rsf@', 'cambuoy.rsf', 'cambuoy.rsf@'], ['SConstruct'], mdl_prep);
