
from os.path import join,isdir,isfile
import os, sys

EnsureSConsVersion( 0, 98 )

#root = os.environ.get('RSFROOT',os.getcwd())

SConsignFile( join("config-etc/sconfig-signatures" ) )

#sys.path.append('framework')
import sfconfigure

sfconfigure.add_to_default_toolpath( 'sfconfigure/existing_tools' )
env = Environment( )

tooldir='sfconfigure/tools'
if not isdir(tooldir):
    Execute(Mkdir(tooldir))

for item in env.Glob( 'sfconfigure/existing_tools/*.py'):
    env.Install(tooldir, item )
    
AddOption( '--config-file',
       dest='configfile',
       nargs=1, type='string',
       action='store',
       metavar='FILE',
       default='config.py',
       help='use configure file FILE' )


configfile=GetOption('configfile')

if not isfile(configfile):
    msg = "SConfig: got invalid value for option '--config-file', file '%s' does not exist" %configfile
    raise Exception(msg)
opts = Options(  )

sfconfigure.StdInstall( env, 'rsfroot', 'sfconfigure/tools' )

sfconfigure.options(opts)
opts.Update(env)

AddOption( '--disable',
       dest='disabled',
       nargs=1, type='string',
       action='append',
       metavar='API',
       default=[],
       help='disable packages in API' )



conf = Configure(env, custom_tests={'CheckAll':sfconfigure.check_all},
                    conf_dir="#/config-etc/tests",log_file="#/config.log",
                    clean=False,help=False)
conf.CheckAll()
env = conf.Finish()

Help(opts.GenerateHelpText(env))

if not GetOption('clean') and not GetOption('help'):
    opts.Save('config.py',env)



Clean('.', ['#/config-etc','#/config.log','#/config.py',tooldir])

