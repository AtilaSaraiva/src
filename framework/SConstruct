import os, rsfdoc

Import('env')

root = env.get('RSFROOT')

bindir = os.path.join(root,'bin')
libdir = os.path.join(root,'lib')
docdir = os.path.join(root,'doc')
txtdir = os.path.join(docdir,'txt')

python = WhereIs('python')

dirs = Split('main proc imag plot opengl libplot pens sumain suplot')
dirs = dirs + env['USERS']

env.Command('rsfprog.py',None,
            action=Action(rsfdoc.getprogs,varlist=['dirs']),dirs=dirs)

def py_install(source):
    global env,libdir
    py = source+'.py'
    pyc = py+'c'
    env.Pycompile(pyc,py)
    env.Install(libdir,[py,pyc])

for src in Split('path doc proj prog tex book'):
    py_install('rsf' + src)
py_install('suproj')

for src in Split('latex2wiki vplot2eps vplot2gif vplot2avi sftour'):
    if (src != 'vplot2gif' and src != 'vplot2avi' ) or env.get('PPM'):
        py_install(src)
        env.InstallAs(os.path.join(bindir,src),src+'.py')

for src in Split('doc top kill'):
    env.Install(bindir,'sf'+src)
env.Install(bindir,'pscons')

use = env.Command('rsfuse.py',None,
                  action=Action(rsfdoc.use,varlist=['book']),book='book')
Depends(use,map(lambda x: os.path.join(libdir,'sf'+x+'.py'),dirs))
for case in Split('vpplot suproj vplot2eps rsftex rsfproj'):
    Depends(use,os.path.join(libdir,case+'.py'))
py_install('rsfuse')

htm = os.path.join(docdir,'index.html')
txt = os.path.join(txtdir,'INDEX.txt')
repos = os.environ.get('RSF_REPOSITORY',os.getcwd())
env.Append(ENV={'LD_LIBRARY_PATH':os.environ.get('LD_LIBRARY_PATH'),
                'PYTHONPATH':os.environ.get('PYTHONPATH')})
env.Command(htm,None,
            '%s framework/sfdoc -w %s -r %s' % (python,docdir,repos))
env.Command(txt,None,'%s framework/sfdoc -t %s' % (python,txtdir))
Depends(htm,use)
Depends(txt,use)

##########################################################################
# SELF DOCUMENTATION
##########################################################################
Doc = Builder (action = Action(rsfdoc.selfdoc,varlist=['rsfprefix','lang']),
               src_suffix='.c',suffix='.py')
env.Append(BUILDERS = {'Doc' : Doc})
