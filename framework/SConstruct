import os, sys
import rsfdoc

Import('env root bindir libdir docdir spcdir mandir system user')

txtdir = os.path.join(docdir,'txt')
mn1dir = os.path.join(mandir,'man1')
python = WhereIs('python')

dirs = Split('plot libplot pens sumain suplot')
dirs = dirs + system + user

env.Command('rsfprog.py',None,
            action=Action(rsfdoc.getprogs,varlist=['dirs']),dirs=dirs)

def py_install(source):
    global env,libdir
    py = source+'.py'
    pyc = py+'c'
    env.RSF_Pycompile(pyc,py)
    env.Install(libdir,[py,pyc])

Depends('rsfproj.pyc',os.path.join(libdir,'rsfbld.pyc'))

for src in Split('path doc flow proj prog tex book'):
    py_install('rsf' + src)
py_install('suproj')

for src in Split('latex2wiki sftour'):
    py_install(src)
    env.Command(src,src+'.py','cp $SOURCE $TARGET')
    env.Install(bindir,src)

for src in Split('doc top kill'):
    env.Install(bindir,'sf'+src)
env.Install(bindir,'pscons')

use = env.Command('rsfuse.py',None,
                  action=Action(rsfdoc.use,varlist=['book','scons']),
                  book='book',scons=sys.argv[0])
Depends(use,map(lambda x: os.path.join(libdir,'sf'+x+'.py'),dirs))
for case in Split('vpplot suproj rsftex rsfproj'):
    Depends(use,os.path.join(libdir,case+'.py'))
py_install('rsfuse')

htm = os.path.join(docdir,'index.html')
txt = os.path.join(txtdir,'INDEX.txt')
spc = os.path.join(spcdir,'extend.spec')
man = os.path.join(mn1dir,'index.man')

repos = os.environ.get('RSF_REPOSITORY',os.getcwd())
env.Append(ENV={'LD_LIBRARY_PATH':os.environ.get('LD_LIBRARY_PATH'),
                'PYTHONPATH':os.environ.get('PYTHONPATH')})
env.Command(htm,None,
            '%s framework/sfdoc -w %s -r %s' % (python,docdir,repos))
env.Command(txt,None,'%s framework/sfdoc -t %s' % (python,txtdir))
env.Command(spc,None,'%s framework/sfdoc -s %s' % (python,spcdir))
env.Command(man,None,'%s framework/sfdoc -g %s' % (python,mn1dir))

Depends(htm,use)
Depends(txt,use)
Depends(man,use)

##########################################################################
# SELF DOCUMENTATION
##########################################################################
Doc = Builder (action = Action(rsfdoc.selfdoc,varlist=['rsfprefix','lang']),
               src_suffix='.c',suffix='.py')
env.Append(BUILDERS = {'Doc' : Doc})

# RSF Python package
SConscript(os.path.join('py_pkg','SConstruct'), 
           exports='env libdir system user')
