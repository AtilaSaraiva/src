import sys, os, string, re
sys.path.append('../..')
import configure

try: # distribution version
    Import('env')
    env = env.Copy()
    root = env.get('RSFROOT')
    libdir = os.path.join(root,'lib')
    incdir = os.path.join(root,'include')

    ifile = '#/api/python/rsf.i'
except: # local version
    root = None
    env = Environment()
    opts=Options('../../config.py')
    configure.options(opts)
    opts.Update(env)
    SConscript('../../filt/lib/SConstruct')

    ifile = 'rsf.i'

env.Prepend(CPPPATH=['../../include'],
            LIBPATH=['../../lib'],
            LIBS=['drsf'])

if 'python' in env.get('API',[]):
    try:
        EnsureSConsVersion(0,96,95)
    except:
        print "\n\n\tPlease upgrade SCons to version >= 0.96.95\n\n"
        sys.exit(1)

    # Python includes for SWIG
    pythinc = []
    try:
        import numpy
        numpy_loc = os.path.split(numpy.__file__)[0]
        pythinc.append(os.path.join(numpy_loc,'numarray','numpy'))
        pythinc.append(os.path.join(numpy_loc,'core','include'))
    except:
        for path in sys.path:
            if string.find(path,'python') >= 0:
                dir = os.path.join(string.replace(path,'lib','include'),
                                   'numarray')
                if os.path.isdir(dir):
                    pythinc.append(dir)

    for path in sys.path:
        if string.find(path,'python') >= 0:
            pydir = re.sub('lib(?:64)?','include',path)
            if os.path.isdir(pydir):
                pythinc.append(pydir)

    env.Append(CPPPATH=pythinc)

    if sys.platform[:6] == 'darwin':
        env['SHLINKFLAGS'] = '$LINKFLAGS -bundle' + \
                             ' -flat_namespace -undefined suppress'
        env['SHLIBSUFFIX'] = '.so'
    elif sys.platform[:6] == 'cygwin':
        python = 'python%s' % sys.version[:3]
        env.Append(LIBPATH=['/usr/lib/%s/config' % python],
                   LIBS = [python])

    wrap = env.CFile('rsf',ifile,SWIGFLAGS='-python')
    python = env.SharedLibrary('rsf',wrap[0],SHLIBPREFIX='_c_')
    pfiles = [python,wrap[1],'rsf.py']

    env.Install('../../lib',pfiles)

    if root:
        if sys.platform[:6] == 'darwin':
            env.AddPostAction(python,
                              'install_name_tool -change '
                              'build/filt/lib/libdrsf.dylib '
                              '%s/libdrsf.dylib %s' % (libdir,python[0].path))
        
        env.Install(libdir,pfiles)

                              
    
