import sys, os, string, re
sys.path.append('../..')
import configure

modules = Split('rsf vplot vfsr')

try: # distribution version
    Import('env')
    env = env.Clone()
    root = env.get('RSFROOT')
    libdir = os.path.join(root,'lib')
    incdir = os.path.join(root,'include')
except: # local version
    root = None
    env = Environment()
    opts=Options('../../config.py')
    configure.options(opts)
    opts.Update(env)
    SConscript('../../plot/lib/SConstruct')

env.Prepend(CPPPATH=['../../include'],
            LIBPATH=['../../lib'])

if root:
    env.Pycompile('rsfbak.pyc','rsfbak.py')
    env.Install(libdir,['rsfbak.py','rsfbak.pyc'])

if 'python' in env.get('API',[]):
    try:
        EnsureSConsVersion(0,96,95)
    except:
        print "\n\n\tPlease upgrade SCons to version >= 0.96.95\n\n"
        sys.exit(1)

    # Python includes for SWIG
    pythinc = []
    try:
        import numpy
        numpy_loc = os.path.split(numpy.__file__)[0]
        pythinc.append(os.path.join(numpy_loc,'numarray','numpy'))
        pythinc.append(os.path.join(numpy_loc,'core','include'))
    except:
        for path in sys.path:
            if string.find(path,'python') >= 0:
                dir = os.path.join(string.replace(path,'lib','include'),
                                   'numarray')
                if os.path.isdir(dir):
                    pythinc.append(dir)

    for path in sys.path:
        if string.find(path,'python') >= 0:
            pydir = re.sub('lib(?:64)?','include',path)
            if os.path.isdir(pydir):
                pythinc.append(pydir)

    env.Append(CPPPATH=pythinc)

    if env['PLATFORM'] == 'cygwin':
        python = 'python%s' % sys.version[:3]
        env.Prepend(LIBPATH=['/usr/lib/%s/config' % python],
                    LIBS = ['librsfplot','librsf',python])
    else:
        env.Append(LIBS=['drsfplot','drsf'])

        if env['PLATFORM'] == 'darwin':
            env['SHLINKFLAGS'] = '$LINKFLAGS -bundle' + \
                                 ' -flat_namespace -undefined suppress'
            env['SHLIBSUFFIX'] = '.so'

    for module in modules:
        ifile = module+'.i'
        if root:
            ifile = '#/api/python/' + ifile
        wrap = env.CFile(module,ifile,SWIGFLAGS='-python')
        python = env.SharedLibrary(module,wrap[0],SHLIBPREFIX='_c_')

        # Hack for darwin to force dependence on libdrsf.dylib 
        if env['PLATFORM'] == 'darwin': 
            env.Depends(python,'../../lib/libdrsf.dylib')
            env.Depends(python,'../../lib/libdrsfplot.dylib')

        pfiles = [python,wrap[1],module+'.py']
        env.Install('../../lib',pfiles)

        if root:
            install = env.Install(libdir,pfiles)
            if env['PLATFORM'] == 'darwin':      
                env.AddPostAction(install,
                                  'install_name_tool -change '
                                  'build/api/c/libdrsf.dylib '
                                  '%s/libdrsf.dylib %s/%s' % \
                                      (libdir,libdir,python[0]))          
                if module == 'vplot':
                    env.AddPostAction(install,
                                      'install_name_tool -change '
                                      'build/plot/lib/libdrsfplot.dylib '
                                      '%s/libdrsfplot.dylib %s/%s' % \
                                          (libdir,libdir,python[0]))
                   
                   

