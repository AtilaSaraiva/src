# This SConstruct builds and places the JAVA API Jar in the LIB FOLDER
# that is then installed to RSFROOT

import os,sys
sys.path.append('../../framework')
import bldutil

try:
    Import('env root libdir')
    env = env.Clone()
except:
    env = bldutil.Debug()
    root = None

jdk = env.get('JAVA_HOME')
if not jdk:
    print 'Please set the JAVA_HOME environmental variable'
    Exit(1)
    
minesjtk = env.get('MINESJTK')
    
jdk_inc = os.path.join(jdk,'include')

rsf = env.get('RSFROOT')
include = os.path.join(rsf,'include')

module = 'm8r'
oldfiles = Split('Header Writer Reader Par')
files = Split('RSF RSFFile Input Output')
gen = Split('SWIGTYPE_p_int SWIGTYPE_p_sf_complex SWIGTYPE_p_sf_File m8rConstants sf_dataform sf_datatype m8rJNI m8r')

pwd = os.getcwd()
if 'java' in env.get('API',[]) and jdk:
    
    wrap = env.CFile(module,
        module+'.i',
        SWIGFLAGS='-package rsf -java -outdir %s' % pwd)

    java = env.LoadableModule('jrsf',wrap[0],
                                    CPPPATH=[jdk_inc,include],
                                    LIBS='rsf',
                                    LIBPATH='../../lib',
                                    LDMODULESUFFIX='.so',
                                    FRAMEWORKSFLAGS='-flat_namespace '
                                    '-undefined suppress')
    env.Depends(java,map(lambda x: x+ '.java',files))
    
    env.Clean(wrap,map(lambda x: x+'.java',gen))

    if minesjtk:
        env.Java('.',map(lambda x: os.path.join('old',x)+'.java',oldfiles),JAVACLASSPATH=[pwd,minesjtk])
    
    # This is really ugly, but its the only command that works... 
    # The Java builder does not work because it scans for the existence of the SWIG generated files
    # prior to them actually being built.
    classfiles = env.Command(
        map(lambda x: 'rsf/'+x+'.class',files), java,
            '%s -cp %s -d %s %s/*.java' 
          % (WhereIs('javac'), pwd,pwd,pwd))
          
    env.Jar('rsf.jar','rsf',JARCHDIR=pwd)

    env.Install('../../lib','rsf.jar')
    env.Install('../../lib',java)

    if root:
        env.Install(libdir,'rsf.jar')
        env.Install(libdir,java)

