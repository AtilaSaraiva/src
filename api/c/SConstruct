import os, sys, string
sys.path.append('../..')
import bldutil, configure
import SCons

#############################################################################
# MAIN LIBRARY
#############################################################################
src = 'kiss_fft kiss_fftr mt19937ar'

src2 = '''
adjnull alloc axa banded bigsolver blas c99 causint ccdstep ccgstep
cconjgrad ccopy cell celltrace cdstep cgstep chain clist conjgrad
conjprec copy cosft decart deriv dottest edge eno eno2 error file
files freqfilt freqfilt2 fzero getpar helicon helix hilbert igrad1
impl2 int1 int2 int3 interp interp_spline irls komplex llist mask
math1 multidivn point pqueue prefilter pweno randn recfilt repeat
runge quantile quadratic sharpen sharpinv simtab slice spline stack
stretch system tent2 timer tinysolver triangle triangle1 triangle2
trianglen tridiagonal vector weight weight2
'''

try: # distribution version
    Import('env root libdir incdir')
except: # local version
    env = bldutil.Debug()
    root = None

##############################################################################
# INCLUDES
##############################################################################
sources  = map(lambda x: x+'.c',Split(src))
includes = map(lambda x: x+'.h',Split(src2)+Split(src))

sobjs = []
dobjs = []
for source in Split(src2):
    env.RSF_Include(source,prefix='sf_')

    obj = env.StaticObject(source+'.c')
    env.Depends(obj,source+'.h')
    sobjs.append(obj)

    obj = env.SharedObject(source+'.c')
    env.Depends(obj,source+'.h')
    dobjs.append(obj)

##############################################################################
# MAIN LIBRARY
##############################################################################
slib = env.StaticLibrary('rsf',sobjs+sources)
dlib = env.SharedLibrary('rsf',dobjs+sources,SHLIBPREFIX='libd')

inc = env.Command('rsf.h',includes,Action(configure.merge))

env.Install('../../lib',[slib,dlib])
env.Install('../../include',inc)

if root:
    env.Install(libdir,[slib,dlib])
    env.Install(incdir,inc)

##############################################################################
# TESTING
##############################################################################
for file in Split('''
                  banded eno2 fft file getpar quantile simtab 
                  triangle2 trianglen
                  '''):
    test = env.StaticObject('Test' + file + '.c')
    prog = env.Program(file,[test,slib],PROGSUFFIX='.x',PROGPREFIX='Test')
