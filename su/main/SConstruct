import os, sys, string
sys.path.append('../..')
import configure

progs = '''
sinc
'''

try: # distributed version
    Import('env root libdir bindir')
    env = env.Clone()
except: # local version
    env = configure.Debug()
    root = None
    SConscript('../lib/SConstruct')

env.Prepend(CPPPATH=['../../include'],
            LIBPATH=['../../lib'],
            LIBS=['su','rsf'])

mains = Split(progs)

for prog in mains:
    main = env.Program(prog + '.c')
    
    if root:
        env.Install(bindir,main[0])

######################################################################
# SELF-DOCUMENTATION
######################################################################
if root:    
    main = 'sfsumain.py'
    
    docs = map(lambda prog: env.Doc(prog),mains)
    env.Depends(docs,'#/framework/rsfdoc.py')
    doc = env.RSF_Docmerge(main,docs)
    env.Install(libdir,doc)
#####################################################################

# 	$Id$

