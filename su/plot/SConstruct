import os, sys, glob, string
sys.path.append('../..')
import configure

progs = '''
image
wigb
'''

try:
    Import('env root libdir bindir')
    env = env.Clone()
    dir = string.replace(os.getcwd(),'/build','')
    src = map(os.path.basename,glob.glob(os.path.join(dir,'[a-z]*.c')))
except:
    env = configure.Debug()
    root = None
    SConscript('../lib/SConstruct')
    src = glob.glob('[a-z]*.c')

xinc = env.get('XINC')
xlib = env.get('XLIBPATH')

if xinc and xlib:  
    env.Prepend(CPPPATH=['../../include',xinc],
                LIBPATH=['../../lib',xlib],
                LIBS=['X11','su','rsf'])
    
    for source in src:
        inc = env.Include(source,prefix='')
        obj = env.StaticObject(source)
        env.Depends(obj,inc)

mains = Split(progs)
for prog in mains:
    if xinc and xlib:
        sources = ['X' + prog]
        configure.depends(env,sources,'X'+prog)
        main = env.Program(prog,map(lambda x: x + '.c',sources))
    else:
        main = env.Place('sf'+prog,None,var='XINC and XLIBPATH')
        
    if root:
        env.Install(bindir,main[0])

######################################################################
# SELF-DOCUMENTATION
######################################################################
if root:
    main = 'sfsuplot.py'

    if xinc and xlib:
        docs = map(lambda prog: env.Doc(prog,'X' + prog),mains)
        env.Depends(docs,'#/framework/rsfdoc.py')
    else:
        docs = []

    doc = env.Docmerge(main,docs)
    env.Install(libdir,doc)
#####################################################################

# 	$Id$

