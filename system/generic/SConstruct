import os, sys, re, string, types
sys.path.append('../../framework')
import bldutil

progs = '''
agc aliasp bandpass bin bin1 boxsmooth canny causint clip clip2 cmatmult costaper deriv dwt extract fern fft1 fft3 grad2 histogram igrad impl2 inttest1 inttest2 iwarp lapfill lorenz lpad mandelbrot matmult max1 mutter noise pow reg2tri remap1 smooth spectra spectra2 spline threshold trapez tri2reg trirand unif3
'''

# hlinfilter

try:  # distributed version
    Import('env root pkgdir libdir bindir')
    env = env.Clone()
    alias = {'pow':'tpow'}
except: # local version
    env = bldutil.Debug()
    root = None
    SConscript('../../api/c/SConstruct')

src = Glob('[a-z]*.c')
src.remove(File('predicates.c'))

dynlib = env.get('DYNLIB','')

env.Prepend(CPPPATH=['../../include'],
            LIBPATH=['../../lib'],
            LIBS=[dynlib+'rsf'])

fftw = env.get('FFTW')
if fftw:
    env.Prepend(CPPDEFINES=['SF_HAS_FFTW'])
    fftwomp = env.get('FFTWOMP')
    if fftwomp:
        env.Prepend(CPPDEFINES=['SF_HAS_FFTW_OMP'])

lapack = env.get('LAPACK')
if lapack:
    env.Prepend(CPPDEFINES=['SF_HAS_LAPACK'])

for source in src:
    inc = env.RSF_Include(source,prefix='')
    obj = env.StaticObject(source)
    env.Ignore(inc,inc)
    env.Depends(obj,inc)

mains = Split(progs)

docalias = {}
for prog in mains:
    sources = ['M' + prog]
    bldutil.depends(env,sources,'M'+prog)
    main = env.Program(prog,map(lambda x: x + '.c',sources))
    if root:
        install = env.Install(bindir,main[0])

        if dynlib and env['PLATFORM'] == 'darwin':
             env.AddPostAction(install,
             '%s -change build/api/c/libdrsf.dylib '
             '%s/libdrsf.dylib %s' % \
             (WhereIs('install_name_tool'),libdir,install[0]))

        if prog in alias.keys():
            other = string.replace(str(main[0]),prog,alias[prog])
            install = env.InstallAs(os.path.join(bindir,other),main[0])

            if dynlib and env['PLATFORM'] == 'darwin':
                env.AddPostAction(install,
                '%s -change build/api/c/libdrsf.dylib '
                '%s/libdrsf.dylib %s' % \
                (WhereIs('install_name_tool'),libdir,install[0]))

            if env['PLATFORM'] == 'cygwin':
                other = string.replace(other,'.exe','')
            docalias[other] = 'sf'+prog

######################################################################
# SELF-DOCUMENTATION
######################################################################
if root:
    main = 'sfgeneric.py'
    
    docs = map(lambda prog: env.Doc(prog,'M' + prog),mains)
    env.Depends(docs,'#/framework/rsf/doc.py')	
    doc = env.RSF_Docmerge(main,docs,alias=docalias)
    
    env.Install('../../framework/rsf',doc)
    env.Install(pkgdir,doc)
