import os, sys, string
sys.path.append('../..')
import configure

#############################################################################
# MAIN LIBRARY
#############################################################################
psrc = Split('cplot')

try: # distribution version
    Import('env')
    root = env.get('RSFROOT')
    libdir = os.path.join(root,'lib')
    incdir = os.path.join(root,'include')
except: # local version
    root = None
    env = Environment()
    opts=Options('../../config.py')
    configure.options(opts)
    opts.Update(env)
    env['CCFLAGS'] = string.replace(env.get('CCFLAGS',''),'-O2','-g')
    env.Append(CPPPATH=['../../filt/lib'])
    SConscript('../../filt/lib/SConstruct')

ccflags = ' ' + env.get('CCFLAGS','')
del env['CCFLAGS']
libs = 'gtk+-2.0 cairo >= 0.1.1 gtkcairo'
env.ParseConfig('pkg-config --cflags --libs "%s" ' % libs)
env['CCFLAGS'] = ccflags

env.Append(BUILDERS={'Include':configure.Header},
           SCANNERS=[configure.Include])

##############################################################################
# INCLUDES
##############################################################################
includes = map(lambda x: x+'.h',psrc)

objects = []
for source in psrc:
    env.Include(source,prefix='cr_')
    obj = env.StaticObject(source+'.c')
    env.Depends(obj,source+'.h')
    objects.append(obj)

##############################################################################
# MAIN LIBRARY
##############################################################################
lib = env.StaticLibrary('rsfcairo',objects)
inc = env.Command('rsfcairo.h',includes,Action(configure.merge))
install = env.Install('../../include',inc)
 
if root:
    env.Install(libdir,lib)
    env.Install(incdir,inc)

env['SCANNERS'].remove(configure.Include)

# 	$Id$
