import os, sys, string
sys.path.append('../..')
import bldutil

try: # distribution version
    Import('env root libdir incdir bindir pkgdir')
    env = env.Clone()
except: # local version
    env = bldutil.Debug()
    root = None
    SConscript('../lib/SConstruct')

plplot = env.get('PLPLOT')
plplotlibpath = env.get('PLPLOTLIBPATH','')

##############################################################################
# Loadable PLPLOT driver
##############################################################################

inc = env.RSF_Include('plvpl')

if plplot:
    env.Prepend(CPPPATH=['../../include',env.get('PLPLOTPATH')],
                LIBPATH=['../../lib'])
    if plplotlibpath:
        env.Prepend(LIBPATH=[plplotlibpath])

    dlib = env.LoadableModule('plvpl','plvpl.c',
                              LIBS=['drsf','drsfplot',plplot],
                              LDMODULESUFFIX='.so',
                              FRAMEWORKSFLAGS='-flat_namespace '
                              '-undefined suppress')
    sobj = env.StaticObject('plvpl.c')

    if root:
        install = env.Install(libdir,[dlib,'plvpl.rc'])

        if env['PLATFORM'] == 'darwin':
            for lib in ('rsf','rsfplot'):
                env.AddPostAction(install,
                                  'install_name_tool -change '
                                  'build/%s/libd%s.dylib '
                                  '%s/libd%s.dylib %s' % \
                                      ({'rsf':'api/c',
                                        'rsfplot':'plot/lib'}[lib],
                                       lib,libdir,lib,install[0]))

##############################################################################
# Plot tools
##############################################################################

progs = 'plsurf'
mains = Split(progs)

for prog in mains:
    if plplot:
        main = env.Program(prog,[prog + '.c',sobj],
                           LIBS=['rsf','rsfplot',plplot]+env.get('LIBS',[]))
    else:
        main = env.RSF_Place('sf'+prog,None,package='libplplot-dev')
    if root:
        install = env.Install(bindir,main[0])

if root:
    main = 'sfplplot.py'

    docs = map(lambda prog: env.Doc(prog),mains)
    env.Depends(docs,'#/framework/py_pkg/doc.py')
    doc = env.RSF_Docmerge(main,docs)
    env.Install(pkgdir,doc)
