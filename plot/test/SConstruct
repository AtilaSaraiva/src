import sys
sys.path.append('../..')
import configure

env = Environment()
opts=Options('../../config.py')
configure.options(opts)
opts.Update(env)
env['CCFLAGS'] = env.get('CCFLAGS','').replace('-O2','-g')
env.Append(CPPPATH=['../../include'],
	   LIBPATH=['../../filt/lib','../lib'],LIBS=['rsfplot','rsf','m'])
SConscript('../lib/SConstruct')

plots = '7ab cmp croshyp csp dc dcretard ellipse headray nmotraj vrms'

vplot = Builder(action = './$SOURCE > $TARGET',
		suffix='.vpl',src_suffix = '.x')
env.Append(BUILDERS = {'Vplot' : vplot})

for plot in Split(plots):
	env.Program(plot+'.c',PROGSUFFIX='.x',PROGPREFIX='')
	env.Vplot(plot)

for plot in ['reflexpt','reflkine']:
	env.Object(plot+'.o','reflector.c',
		   CCFLAGS=env.get('CCFLAGS','') + ' -D%s' % plot.upper())
	env.Program(plot+'.o',PROGSUFFIX='.x',PROGPREFIX='')
	env.Vplot(plot)

env.Program('sg.c',PROGSUFFIX='.x',PROGPREFIX='')
env.Command('geqs.vpl','sg.x','./$SOURCE 1 > $TARGET')
env.Command('geq2s.vpl','sg.x','./$SOURCE 2 > $TARGET')

