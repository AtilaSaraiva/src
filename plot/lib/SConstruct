import os, sys, string
sys.path.append('../..')
import configure

#############################################################################
# MAIN LIBRARY
#############################################################################
src = 'vplot'

src2 = 'axis coltab gainpar plot stdplot'

sources  = map(lambda x: x+'.c',Split(src)) 
includes = map(lambda x: x+'.h',Split(src))

try: # distribution version
    Import('env')
    root = env.get('RSFROOT')
    libdir = os.path.join(root,'lib')
    incdir = os.path.join(root,'include')
except: # local version
    root = None
    env = Environment()
    opts=Options('../../config.py')
    configure.options(opts)
    opts.Update(env)
    env['CCFLAGS'] = string.replace(env.get('CCFLAGS',''),'-O2','-g')
    env.Append(CPPPATH=['../../filt/lib'])
    SConscript('../../filt/lib/SConstruct')

env['SCANNERS'].remove(CScan)
env.Append(BUILDERS={'Include':configure.Header},
           SCANNERS=[configure.Include])

##############################################################################
# INCLUDES
##############################################################################
sources  = map(lambda x: x+'.c',Split(src))
includes = map(lambda x: x+'.h',Split(src2)+Split(src))

objects = []
for source in Split(src2):
    env.Include(source,prefix='vp_')
    obj = env.StaticObject(source+'.c')
    env.Depends(obj,source+'.h')
    objects.append(obj)

##############################################################################
# MAIN LIBRARY
##############################################################################
lib = env.StaticLibrary('rsfplot',objects+sources)
inc = env.Command('rsfplot.h',includes,Action(configure.merge))
install = env.Install('../../include',inc)
 
if root:
    env.Install(libdir,lib)
    env.Install(incdir,inc)
else:
    pass
#    env.Alias('install',install)

##############################################################################
# TESTING
##############################################################################
env.Prepend(LIBS=['rsf'],LIBPATH=['../../filt/lib'])
for file in ('axis','stdplot'):
    test = 'Test' + file + '.c'
    env.Program([test,lib],PROGSUFFIX='.x',PROGPREFIX='')

#############################################################################
# LINT
##############################################################################

env.Command('../lint/lint',map(lambda x: x+'.c',Split(src2)),
            'splint +posixlib $SOURCES')
        
env['SCANNERS'].remove(configure.Include)
env.Append(SCANNERS=CScan)

# 	$Id$	

