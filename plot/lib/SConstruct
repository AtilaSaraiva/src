import os, sys, string
sys.path.append('../..')
import configure

#############################################################################
# MAIN LIBRARY
#############################################################################
psrc = Split('axis coltab contour gainpar plot stdplot vplot')

try: # distribution version
    Import('env')
    env = env.Copy()
    root = env.get('RSFROOT')
    libdir = os.path.join(root,'lib')
    incdir = os.path.join(root,'include')
    docmerge = configure.docmerge
except: # local version
    root = None
    env = Environment()
    opts=Options('../../config.py')
    configure.options(opts)
    opts.Update(env)
    env['CCFLAGS'] = string.replace(env.get('CCFLAGS',''),'-O2','-g')
    if  sys.platform[:5] == 'sunos':
	env['CCFLAGS'] = string.replace(env.get('CCFLAGS',''),'-xO2','-g')
    SConscript('../../filt/lib/SConstruct')
    env.Append(BUILDERS={'Include':configure.Header},
               SCANNERS=[configure.Include])

env.Prepend(CPPPATH=['../../include'],
            LIBPATH=['../../lib'],
            LIBS=['rsf'])

##############################################################################
# INCLUDES
##############################################################################
includes = map(lambda x: x+'.h',psrc)

objects = []
for source in psrc:
    env.Include(source,prefix='vp_')
    obj = env.StaticObject(source+'.c')
    env.Depends(obj,source+'.h')
    objects.append(obj)

##############################################################################
# MAIN LIBRARY
##############################################################################
lib = env.StaticLibrary('rsfplot',objects)
inc = env.Command('rsfplot.h',includes,Action(configure.merge))
env.Install('../../lib',lib)
env.Install('../../include',inc)

if root:
    env.Install(libdir,lib)
    env.Install(incdir,inc)

api = env.get('API',[])

##############################################################################
# FORTRAN-77 BINDING
##############################################################################
if 'f77' in api:
    env.Object('fortran.o','fortran.c',
               CCFLAGS=env.get('CCFLAGS')+' -D$CFORTRAN')
    libf = env.StaticLibrary('rsfplotf','fortran.o')                            
    env.Install(libdir,libf)

##############################################################################
# TESTING
##############################################################################
for file in ('axis','stdplot'):
    test = 'Test' + file + '.c'
    env.Program([test,lib],PROGSUFFIX='.x',PROGPREFIX='')

#############################################################################
# LINT
##############################################################################

env.Command('../plint/lint',map(lambda x: x+'.c',psrc),
            'splint +posixlib -I%s $SOURCES' % env['CPPPATH'][0])
env.Alias('plint','../plint')
        
if root:
    main = 'sflibplot.py'

    docs = map(lambda prog: env.Doc(prog),('stdplot.c',))
    env.Depends(docs,'#/python/rsfdoc.py')

    doc = env.Command(main,docs,docmerge)
    env.Install(libdir,doc)
    Clean(os.path.join(libdir,main),os.path.join(libdir,main+'c'))
    
        
# 	$Id$	

