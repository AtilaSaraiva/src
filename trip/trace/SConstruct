import os, sys, string, re
sys.path.append('../../framework')
import bldutil

src = 'cubicadjw'

try: # distribution version
    Import('env root libdir incdir')
    env = env.Clone()
except: # local version
    env = bldutil.Debug()
    root = None
    SConscript('../base/SConstruct')

env.Prepend(CPPPATH=['../../include'])

##############################################################################
# INCLUDES
##############################################################################

objects = []
includes = []
for source in Split(src):
    inc = env.RSF_Include(source,prefix='sf_') # generate header
    obj = env.StaticObject(source+'.c')        # compile
    env.Depends(obj,inc)
    
    objects.append(obj)
    includes.append(inc)

##############################################################################
# LIBRARY
##############################################################################
lib = env.StaticLibrary('triptrace',objects)

inc = env.Command('trace.h',includes,Action(bldutil.__merge))

env.Install('../../lib',lib)
env.Install('../../include/trip',inc)

if root:
    env.Install(libdir,lib)
    env.Install(os.path.join(incdir,'trip'),inc)

##############################################################################
# TESTS
##############################################################################


