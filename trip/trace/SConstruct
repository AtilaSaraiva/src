import os, sys, string, re
sys.path.append('../../framework')
import bldutil

src = 'cubicadjw cubicw lci traceio verifytrace'

progs = 'verify'

try: # distribution version
    Import('env root libdir bindir incdir pkgdir')
    env = env.Clone()
except: # local version
    env = bldutil.Debug()
    root = None
    SConscript('../base/SConstruct')
    SConscript('../../su/lib/SConstruct')

env.Prepend(CPPPATH=['../../include'],
            LIBPATH=['../../lib'],
            LIBS=['su',env.get('DYNLIB','')+'rsf'])

##############################################################################
# INCLUDES
##############################################################################

objects = []
includes = []
for source in Split(src):
    inc = env.RSF_Include(source,prefix='sf_') # generate header
    obj = env.StaticObject(source+'.c')        # compile
    env.Depends(obj,inc)
    
    objects.append(obj)
    includes.append(inc)

##############################################################################
# LIBRARY
##############################################################################
lib = env.StaticLibrary('triptrace',objects)

inc = env.Command('trace.h',includes,Action(bldutil.__merge))

env.Install('../../lib',lib)
env.Install('../../include/trip',inc)

if root:
    env.Install(libdir,lib)
    env.Install(os.path.join(incdir,'trip'),inc)

##############################################################################
# MAINS
##############################################################################

mains = Split(progs)
for prog in mains:
    sources = ['M' + prog]
    bldutil.depends(env,sources,'M'+prog)
    prog = env.Program(prog,map(lambda x: x + '.c',sources))
    if root:
        env.Install(bindir,prog)

######################################################################
# SELF-DOCUMENTATION
######################################################################

if root:
    main = 'sftriptrace.py'
    
    docs = map(lambda prog: env.Doc(prog,'M' + prog),mains)
    env.Depends(docs,'#/framework/rsf/doc.py')

    doc = env.RSF_Docmerge(main,docs)

    env.Install('../../framework/rsf',doc)
    env.Install(pkgdir,doc)

