import os, sys, string, re
sys.path.append('../../framework')
import bldutil

src = 'create_sten_2k exchange exchangeinfo fd model rarray rdomain stencil'

try: # distribution version
    Import('env root libdir bindir incdir pkgdir')
    env = env.Clone()
except: # local version
    env = bldutil.Debug()
    root = None
    SConscript('../base/SConstruct')
    SConscript('../../su/lib/SConstruct')

env.Prepend(CPPPATH=['../../include'],
            LIBPATH=['../../lib'],
            LIBS=['su',env.get('DYNLIB','')+'rsf'])

##############################################################################
# INCLUDES
##############################################################################

objects = []
includes = []
for source in Split(src):
    inc = env.RSF_Include(source,prefix='sf_') # generate header
    obj = env.StaticObject(source+'.c')        # compile
    env.Depends(obj,inc)
    
    objects.append(obj)
    includes.append(inc)

##############################################################################
# LIBRARY
##############################################################################
lib = env.StaticLibrary('tripiwave',objects)

inc = env.Command('iwave.h',includes,Action(bldutil.__merge))

env.Install('../../lib',lib)
env.Install('../../include/trip',inc)

if root:
    env.Install(libdir,lib)
    env.Install(os.path.join(incdir,'trip'),inc)


