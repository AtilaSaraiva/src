########################################################################
####################### TRIP DEMO SCONSTRUCT ###########################
########################################################################

###### JOB DICTIONARY: PYTHON DICTIONARY OF JOB NAME AND CORRESPONDING 
###### COMMAND, DEPENDENCY, AND OTHER NECESSARY EXECUTION INFO
######
###### FORM:
######   jobs = {
######     <job name> : [<command string>, (other stuff - see below)],
######     ...
######   }
######
###### ASSUMPTIONS:
###### - JOB NAME IS ALSO ROOT NAME OF PAR FILE IN THIS DIRECTORY
######   example: job name = 'data', then par file name = './data.par'
######   (exception: tmpdata task, see below)
###### - JOB NAME WILL BE USED AS NAME OF BUILD SUBDIRECTORY FOR JOB
######   example: job name = 'data', then script builds subdir ./data
######   and executes job in this directory
###### - EACH JOB EXECUTES EXACTLY ONE COMMAND
###### - COMMANDS ARE ASSUMED TO BE BUILT - BUILD COMMANDS FIRST!
###### - COMMAND NAME IS COMPLETE, WITH ALL NECESSARY SCRIPTS, FLAGS, 
######   AND OPTIONS
######   example: to use mpirun on 8 processors to execute cmd.x which
######   resides in PATH_TO_COMMANDS (environment), the command string 
######   should read 
######   'mpirun -np 8 $PATH_TO_COMMANDS/cmd.x'
###### - JOB BUILD COMMAND: 'jobs[jobname] par=jobname.par'
######   example: if jobs dictionary includes this line:
######   'data' : 'mpirun -np 256 $IWAVE/esg/main/esg.x'
######   then the command to build this job is
######   'mpirun -np 256 $IWAVE/esg/main/esg.x par=data.par'
######   and this string is fed to a shell (interactive) or embedded in
######   script which is then submitted (batch)
###### - SCONS CLEAN COMMAND SHOULD REMOVE ALL JOB DIRECTORIES CREATED
######   BY THIS SCRIPT (IT WILL!), AND THESE CONTAIN ALL OUTPUT OF THE
######   CORRESPONDING COMMANDS. CONSEQUENCE: NO FILE CAN BE BOTH INPUT
######   AND OUTPUT FOR THE SAME TARGET.
######   example: a SEGY file cannot be both the source of header info 
######   and the output data file - so a feature of early IWAVE commands
######   cannot be exercised in these demos
###### - Intermediate data is by convention stored in $DATAPATH/iwave, which
######   is created by target tmpdata. Therefore this target should be always
######   be included in the job dictionary, unless no intermediate data at all 
######   is involved in any task (unlikely!!!)

###### Structure of the job dictionary:
###### key    = name of job = name of output directory
###### val[0] = path to command (may be empty only if a special branch of make takes care of this target)
###### val[1] = dependency list (may be empty)
###### val[2] = batch key ('' for interactive, else 'pbs' or 'sge' or ...)
###### val[3] = wallclock limit (batch only)
###### val[4] = resource alloc (batch only)
###### val[5] = queue (batch only)

################### ENVIRONMENT-DEPENDENT USER INPUT ###################

########################################################################
################### FLAG: MADAGASCAR OR STANDALONE #####################
########################################################################

MADAGASCAR = False #True

########################################################################
######################### JOB DEFINITION TABLE #########################
########################################################################

import os

IWAVE       = os.getenv('RSFSRC') + '/trip/iwave/'
smoothmodel = IWAVE + 'demo/main/smoothmodel.x'
setupTest   = IWAVE + 'demo/main/setupTest.x'
asg         = IWAVE + 'asg/main/asg.x'

#building .par files for SConscript
os.system(setupTest + ' par=setup_mdl0_test.par')

jobs = {
'mdl0_den'  : [smoothmodel,['tmpdata'],'', '', '',''],
'mdl0_vel'  : [smoothmodel,['tmpdata'],'', '', '',''],
'mdl0_test' : [asg,['mdl0_den','mdl0_vel','mdl0_hdr','mdl0_src'],'','','',''],
}

scripts = {
'tmpdata' : [],
'mdl0_src': [],
'mdl0_hrd': [],
'Fig'     : []
}

########################################################################
################# OPTIONS COMMON FOR ALL BATCH JOBS ####################
########################################################################

###### EMAIL ADDRESS FOR BATCH SYSTEM NOTIFICATION
MAIL = 'symes@caam.rice.edu'

###### ACCOUNT NAME
ACCT = 'FDTD3D-Cont'

########################################################################
###### interface to sconscript files - do not edit below this line #####
########################################################################

DATAPATH = os.getenv('DATAPATH','.')

if DATAPATH[len(DATAPATH)-1] == '/':
    TMPDATAPATH = DATAPATH + 'iwave'
else:
    TMPDATAPATH = DATAPATH + '/iwave'

# madagascar version
if MADAGASCAR:
    ROOT = os.path.abspath(os.path.expandvars('$RSFROOT/bin')) + '/'    
# autonomous version
else:
    ROOT = '' #'../../../'

Export('MADAGASCAR TMPDATAPATH ROOT jobs scripts')
SConscript('./SConscript')

