import os, sys, string
sys.path.append('../..')
import configure

progs = 'clipcc'

try: # distributed version
    Import('env')
    root = env.get('RSFROOT')
    libdir = os.path.join(root,'lib')
    bindir = os.path.join(root,'bin')
    incdir = os.path.join(root,'include')
    docmerge = configure.docmerge
except:
    # local version
    root = None
    env = Environment()
    opts=Options('../../config.py')
    configure.options(opts)
    opts.Update(env)
    env['CXXFLAGS'] = string.replace(env.get('CXXFLAGS',''),'-O2','-g')
    env.Prepend(CPPPATH=['../../include'],
                LIBPATH=['../lib'])

    # to build ../lib/librsf and ../lib/librsf++
    SConscript('../lib/SConstruct')

# make a list out of string
mains = Split(progs)

api = string.split(string.lower(env.get('API','')),',')

if 'c++' in api:
    env.Prepend(LIBS=['rsf++','rsf'])
    for prog in mains:
        # compilation
        main = env.Program(prog + '.cc')

        if root:
            env.Install(bindir,main[0])
        
######################################################################
# SELF-DOCUMENTATION
######################################################################
if root:    
    main = 'sfcc.py'
    
    docs = map(lambda prog: env.Doc(prog+'.cc'),mains)
    env.Depends(docs,'#/python/rsfdoc.py')

    doc = env.Command(main,docs,docmerge)
    env.Install(libdir,doc)

    # clean compiled python: sfc++.pyc
    Clean(os.path.join(libdir,main),os.path.join(libdir,main+'c'))
    
