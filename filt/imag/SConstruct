import os, sys, re, string
sys.path.append('../..')
import configure

progs = '''
angle angle2 cell2 cup dsr eikonal fincon finstack fkamo fkdmo gazdag
gauss green hale halfint interp2 interp3 interpt mutter ofilp pick0
preconstkirch rays2 remap1 s2ofz sag shoot2 sstep1 symes trace2 tree unif2
voft vofz warpadd ztrace
'''

try:  # distributed version
    Import('env')
    root = env.get('RSFROOT')
    libdir = os.path.join(root,'lib')
    bindir = os.path.join(root,'bin')
    incdir = os.path.join(root,'include')
except: # local version
    root = None
    env = Environment()
    opts=Options('../../config.py')
    configure.options(opts)
    opts.Update(env)
    env['CCFLAGS'] = string.replace(env.get('CCFLAGS',''),'-O2','-g')
    env.Append(CPPPATH=['../../include'],
               LIBPATH=['../lib'],LIBS=['rsf','m'])
    if sys.platform[:5] == 'sunos':
        env.Append(LIBS=['nsl'])
    SConscript('../lib/SConstruct')

mains = Split(progs)

for prog in mains:
    sources = ['M' + prog]
    configure.depends(env,sources,'M'+prog)
    prog = env.Program(prog,map(lambda x: x + '.c',sources))
    if root:
        env.Install(bindir,prog)

for prog in ['eno2']:
    sources = ['Test' + prog,prog]
    configure.depends(env,sources,prog)
    sources = map(lambda x: x + '.o',sources)
    env.Object('Test' + prog + '.c')
    env.Program(sources,PROGPREFIX='',PROGSUFFIX='.x')
 
######################################################################
# SELF-DOCUMENTATION
######################################################################
if root:
    main = 'sfimag.py'
    
    docs = map(lambda prog: env.Doc(prog,'M' + prog),mains)
    doc = env.Command(main,docs,configure.docmerge)
    env.Install(libdir,doc)
    Clean(os.path.join(libdir,main),os.path.join(libdir,main+'c'))
#####################################################################

# 	$Id: SConstruct,v 1.2 2004/06/15 16:27:42 fomels Exp $	
