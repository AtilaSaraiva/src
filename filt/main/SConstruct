import os, sys
sys.path.append('../..')
import configure

progs = """
add attr cat cmplx cp dd disfil get headermath headersort headerwindow
in interleave log mask math pad real reverse rm rtoc scale
segyread segywrite spike spray stack transp window
"""
try: # distributed version
    Import('env')
    root = env.get('RSFROOT')
    libdir = os.path.join(root,'lib')
    bindir = os.path.join(root,'bin')
    incdir = os.path.join(root,'include')
except: # local version
    root = None
    env = Environment()
    opts=Options('../../config.py')
    configure.options(opts)
    opts.Update(env)
    env.Append(CCFLAGS=' -g',CPPPATH=['../../include'],
               LIBPATH=['../lib'],LIBS=['rsf','m'])
    if sys.platform[:5] == 'sunos':
        env.Append(LIBS=['nsl'])
    SConscript('../lib/SConstruct')

mains = Split(progs)
map(lambda prog: env.Program(prog + '.c'),mains)

if root:
    docmerge = configure.docmerge
    sf = env.get('PROGPREFIX','')
    
    env.Install(bindir,map(lambda prog: sf + prog,mains))

    for pair in [['merge','cat'],['imag','real'],['mv','cp']]:
        [copy,source] = map(lambda x: sf+x,pair)
        env.InstallAs(os.path.join(bindir,copy),source)
        docmerge = configure.docextra(docmerge,source,copy)

######################################################################
# SELF-DOCUMENTATION
######################################################################
if root:    
    main = 'sfmain.py'
    
    docs = map(lambda prog: env.Doc(prog),mains)

    doc = env.Command(main,docs,docmerge)
    env.Install(libdir,doc)
    Clean(os.path.join(libdir,main),os.path.join(libdir,main+'c'))

#####################################################################

# 	$Id: SConstruct,v 1.14 2004/06/23 18:30:00 fomels Exp $	
