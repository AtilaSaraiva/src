import os, sys
sys.path.append('../..')
import configure

progs = """
add attr cat cmplx cp dd disfil get headermath headersort headerwindow
imag in interleave log mask math merge mv pad real reverse rm 
rtoc scale segyread segywrite spike spray stack transp window
"""
try: # distributed version
    Import('env')
    root = env.get('RSFROOT')
    libdir = os.path.join(root,'lib')
    bindir = os.path.join(root,'bin')
    incdir = os.path.join(root,'include')
except: # local version
    root = None
    env = Environment()
    opts=Options('../../config.py')
    configure.options(opts)
    opts.Update(env)
    env.Append(CCFLAGS=' -g',CPPPATH=['../../include'],
               LIBPATH=['../lib'],LIBS=['rsf','m'])
    SConscript('../lib/SConstruct')

for pair in [('merge','cat'),('imag','real'),('mv','cp')]:
    env.Command(pair[0]+'.c',pair[1]+'.c','cp $SOURCE $TARGET')

mains = Split(progs)
map(lambda prog: env.Program(prog + '.c'),mains)

if root:
    env.Install(bindir,map(lambda prog: 'sf' + prog,mains))

######################################################################
# SELF-DOCUMENTATION
######################################################################
if root:    
    main = 'sfmain.py'
    
    docs = map(lambda prog: env.Doc(prog),mains)

    doc = env.Command(main,docs,configure.docmerge)
    env.Install(libdir,doc)
    Clean(os.path.join(libdir,main),os.path.join(libdir,main+'c'))
#####################################################################

# 	$Id: SConstruct,v 1.11 2004/03/19 16:01:06 fomels Exp $	
