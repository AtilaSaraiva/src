import os, sys, string
sys.path.append('../..')
import configure

src = '''
genarea genhatch geninteract genmarker genmessage genpatarea genpoint
genraster1 genraster gentext genvector nulldev polyfix polysubs vecarea
'''

try: # distribution version
    Import('env')
    root = env.get('RSFROOT')
    libdir = os.path.join(root,'lib')
    incdir = os.path.join(root,'include')    
except: # local version
    root = None
    env = Environment()
    opts=Options('../../config.py')
    configure.options(opts)
    opts.Update(env)
    env['CCFLAGS'] = string.replace(env.get('CCFLAGS',''),'-O2','-g')
    if  sys.platform[:5] == 'sunos':
	env['CCFLAGS'] = string.replace(env.get('CCFLAGS',''),'-xO2','-g')
    incdir = os.path.join(os.environ.get('RSFROOT','/usr'),'include')        
    env.Prepend(CPPPATH=['../../include'])
    SConscript('../fonts/SConstruct')

    SConscript('../utilities/SConstruct')

env.Prepend(CPPFLAGS=['-DVPLOT_FONT_DIR=\'\"%s\"\'' % incdir])

env.Append(BUILDERS={'Include':configure.Header},
           SCANNERS=[configure.Include])

sources  = map(lambda x: x+'.c',Split(src))
includes = map(lambda x: x+'.h',Split(src))

objects = []
for source in Split(src):
    env.Include(source,prefix='pen_')
    obj = env.StaticObject(source+'.c')
    env.Depends(obj,source+'.h')
    objects.append(obj)

inc = env.Command('genpen.h',includes,Action(configure.merge))
lib = env.StaticLibrary('genpen',objects)
